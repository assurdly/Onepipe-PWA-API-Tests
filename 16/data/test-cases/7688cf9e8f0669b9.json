{"uid":"7688cf9e8f0669b9","name":"Create Key - Invalid Token","fullName":"Keys/Create Key#Create Key - Invalid Token","historyId":"52038537-8e85-4481-bb21-09712f975f02","time":{"start":1710131671977,"stop":1710131672329,"duration":352},"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate that error message is 'Invalid 2FA Token'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate that error message is 'Invalid 2FA Token'","steps":[{"name":"Status code is 400","time":{"start":1710131672325,"stop":1710131672325,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"Error: expected response to have status code 400 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:6:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is Bad Request","time":{"start":1710131672326,"stop":1710131672326,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is displayed as Error","time":{"start":1710131672326,"stop":1710131672326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Validate that error message is 'Invalid 2FA Token'","time":{"start":1710131672326,"stop":1710131672326,"duration":0},"status":"failed","statusMessage":"expected 'jwt expired' to deeply equal 'Invalid 2FA Token'","statusTrace":"Error: expected 'jwt expired' to deeply equal 'Invalid 2FA Token'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:16:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"8691a229d084cea2","name":"Request Headers","source":"8691a229d084cea2.json","type":"application/json","size":535},{"uid":"e761fae13424c8c7","name":"Request Body","source":"e761fae13424c8c7.txt","type":"text/plain","size":133},{"uid":"61b3a0626b832a39","name":"Response Headers","source":"61b3a0626b832a39.json","type":"application/json","size":1216},{"uid":"ad4b81fbec1da41e","name":"Response Body","source":"ad4b81fbec1da41e.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Keys"},{"name":"suite","value":"Create Key"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://dd-api.bits.dev.onepipe.io/v1/keys"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7688cf9e8f0669b9.json","parameterValues":["POST - https://dd-api.bits.dev.onepipe.io/v1/keys","401"]}