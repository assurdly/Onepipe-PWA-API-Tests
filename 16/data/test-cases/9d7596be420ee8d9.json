{"uid":"9d7596be420ee8d9","name":"Create Beneficiary - Address is numeric","fullName":"Beneficiaries/Create Beneficiary#Create Beneficiary - Address is numeric","historyId":"a56b62a3-93f1-4b23-b3ee-403aaf009916","time":{"start":1710131656451,"stop":1710131656800,"duration":349},"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate error message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate error message","steps":[{"name":"Status code is 400","time":{"start":1710131656797,"stop":1710131656797,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"Error: expected response to have status code 400 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:6:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is Bad Request","time":{"start":1710131656797,"stop":1710131656797,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is displayed as Error","time":{"start":1710131656798,"stop":1710131656798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Validate error message","time":{"start":1710131656798,"stop":1710131656798,"duration":0},"status":"failed","statusMessage":"expected 'jwt expired' to deeply equal 'address must be a string'","statusTrace":"Error: expected 'jwt expired' to deeply equal 'address must be a string'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:16:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"9b97447e387cdf58","name":"Request Headers","source":"9b97447e387cdf58.json","type":"application/json","size":534},{"uid":"857eb68051758b8a","name":"Request Body","source":"857eb68051758b8a.txt","type":"text/plain","size":99},{"uid":"733c457cc1812581","name":"Response Headers","source":"733c457cc1812581.json","type":"application/json","size":1216},{"uid":"a0665041e2faf57c","name":"Response Body","source":"a0665041e2faf57c.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Beneficiaries"},{"name":"suite","value":"Create Beneficiary"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://dd-api.bits.dev.onepipe.io/v1/beneficiaries"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"9d7596be420ee8d9.json","parameterValues":["POST - https://dd-api.bits.dev.onepipe.io/v1/beneficiaries","401"]}