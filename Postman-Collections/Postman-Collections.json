{
	"info": {
		"_postman_id": "69083b10-ace3-4e08-9655-18c50cc6b4e7",
		"name": "Direct Debit (Internal - Clear) - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Platform - Biller",
			"item": [
				{
					"name": "Biller Auth",
					"item": [
						{
							"name": "Biller - Sign Up",
							"item": [
								{
									"name": "Sign Up",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"// tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"",
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"var email = jsonData.data.email",
													"pm.environment.set('BillerEmail', email)",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"",
													"pm.test(\"Verify User's First Name\", function(){",
													"    pm.expect(jsonData.data.first_name).to.equal(Request.first_name)",
													"})",
													"pm.test(\"Verify user's last name\", function(){",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)",
													"})",
													"",
													"pm.test(\"Verify user's last name\", function(){",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)",
													"})",
													"",
													"pm.test(\"Verify User's Email\", function(){",
													"    pm.expect(jsonData.data.email).to.eql(Request.email)",
													"})",
													"pm.test(\"Verify user's phone number\", function(){",
													"    pm.expect(jsonData.data.phone_number).to.eql(Request.phone_number)",
													"})",
													"pm.test(\"Verify that the user's type is called Biller\", function(){",
													"    pm.expect(jsonData.data.type).to.eql(\"biller\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)",
													"",
													"pm.environment.set('base_url', 'https://dd-api.bits.dev.onepipe.io/v1')",
													"pm.environment.set('base_url_v1', 'https://dd-api.bits.dev.onepipe.io/v1')",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4227db0c-62c9-413e-bf82-4fc756d83233",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}{{$randomAbbreviation}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "97f1bf97-5f6d-4943-bbc7-496844402ac0",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"// tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"",
													"// var jsonData = pm.response.json();",
													"// var Request = JSON.parse(pm.request.body.raw);",
													"// // var Token = jsonData.data.token_data.token",
													"// var email = jsonData.data.email",
													"// pm.environment.set(\"BillerEmail\", email)",
													"// // pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"// pm.test(\"Status code is 200\", function(){",
													"// pm.response.to.have.status(200);",
													"// })",
													"// pm.test(\"Status code is OK\", function () {",
													"//     pm.response.to.have.status(\"OK\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is successs\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"success\")",
													"// })",
													"// pm.test(\"Verify User's First Name\", function(){",
													"//     pm.expect(jsonData.data.first_name).to.equal(Request.first_name)",
													"// })",
													"// pm.test(\"Verify user's last name\", function(){",
													"//     pm.expect(jsonData.data.last_name).to.eql(Request.last_name)",
													"// })",
													"",
													"// pm.test(\"Verify User's Email\", function(){",
													"//     pm.expect(jsonData.data.email).to.eql(Request.email)",
													"// })",
													"// pm.test(\"Verify user's phone number\", function(){",
													"//     pm.expect(jsonData.data.phone_number).to.eql(Request.phone_number)",
													"// })",
													"// pm.test(\"Verify that the user's type is called Biller\", function(){",
													"//     pm.expect(jsonData.data.type).to.eql(\"biller\")",
													"// })"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0974ae13-f273-4710-ae5b-dbd06d44a637",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "52d7dd11-98fd-49c1-940c-923f0551bcad",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field- first namne",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e4944e3e-5e53-49b2-b1d8-e28aa91e6548",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111110\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "590614a6-d72e-4879-b40e-cbf5f56aa9dd",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - last name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5324f695-098a-4461-9de3-7f862f74c602",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "218f660c-7e32-44b5-aeea-6c8b1d11285c",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - phone number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf27b7c4-8908-4d53-aeb0-589296d84184",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomLastName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "ea17fcdf-2192-42c6-94a4-3224ae976de6",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - company number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e959fb58-4401-4e62-9dc6-211f3b566c77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "3af72819-9c48-4568-943f-12c67f7a36f3",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - rc number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"RC number cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c6f3ee85-b83e-4889-9ef2-347c31f3dc1c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomFirstName}} {{$randomLastName}} LTD\",\n    \"rc_number\": \"\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "ae366013-25a4-4839-a218-7d49f7084d3c",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field -Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "48809ef6-0866-4b2f-ba81-ec16b631a5b6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"$randomFirstName\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "a2692375-15a9-470f-b463-974a7e187ff7",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "312e5373-aa16-4a64-80a7-b95b893194ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "d910cd06-21de-4bf4-85c8-b89779dab25d",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Biller with RC number exists\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "88a3fda9-3764-4ee3-bbb4-9d39aab05c46",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "374e5fe7-cbfa-4166-a59b-bf5dc2794a74",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Already Existing Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "81278a6d-3d11-4840-86a9-cb222bc781be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "80535b14-dda4-40f5-94e3-4ef57ff2b980",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid phone number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "72914176-33e2-43a5-a732-14730d51d495",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011er4569\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "4842d49e-420a-47f0-ab25-f8712afa9cd7",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Phone number lesser than 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c4c44b81-f79f-44c9-ab3a-bac93f8d73a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "2c7df29b-1d53-4797-a6a3-0a3a5b0ef697",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Phone number more than 13 digits",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be shorter than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c04d052f-f422-474e-9d01-b585473859d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"234701172529700\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "b66585f3-e65c-48e2-8c77-8af2609913ee",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Password not meeting complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"New password is too weak. Enter a strong password greater than 8 characters that also contains a capital letter, small letter, number and special characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "72c91cfd-8f21-42b9-82dc-7037c891fbb8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Teste\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "03ef5af2-fa24-46dd-989a-8562b147354d",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "ec997b5c-3b1a-4720-821a-34d6a4d557d2"
						},
						{
							"name": "Biller - Verify User",
							"item": [
								{
									"name": "Verify User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"// var Token = jsonData.data.token_data.token",
													"// var email = jsonData.data.email",
													"// pm.environment.set(\"BillerEmail\", email)",
													"// pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"// tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"// tests[\"Status code is 200\"] = responseCode.code === 200;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9848c7a1-bc04-49bf-ae3f-3b2e152bf6c8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3d168df1-29d2-4139-8f83-ff77981d2ff2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsInR5cGUiOiJ2ZXJpZmljYXRpb24iLCJpYXQiOjE3MDI2MjU2MDUsImV4cCI6MTcwMjYyOTIwNX0.-9RbOZj92aB2j6k8X_zi7T9ZzXc0dxYruCLWq4MKOuw\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "0ec65383-d404-4d06-9231-d664fa0f38cc",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Already Used Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "75e64d15-0763-42cd-8f3e-de7a571d607c",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9c5d511b-3a0f-430c-85f4-5fa7e2e91c47",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsInR5cGUiOiJ2ZXJpZmljYXRpb24iLCJpYXQiOjE3MDI2MjU2MDUsImV4cCI6MTcwMjYyOTIwNX0.-9RbOZj92aB2j6k8X_zi7T9ZzXc0dxYruCLWq4MKOuw\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "e342d656-856a-4794-a5d0-b12083203ede",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e95f05ee-9b26-4ff1-9baa-e702b3c33a85",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4f4608e0-d8ff-425f-9b5b-7a26b7a0e488",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "c5f6b805-351e-4d8f-bd55-574080efa69a",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a61faf5e-2e7c-4a30-9db0-7420bfa82b42",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8ad040d1-4769-41f8-bb43-a9e911ea47db",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9fzE6WPqgepAmVQ2G08\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "edfb894d-d47f-4021-9b72-88519896a64d",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2884474d-0856-4ed6-bc48-16e76a7609c6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d72c9e25-dadc-4b49-a451-93aea37e5482",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "86f6a16f-ed98-496b-96ce-17e49ea64b1e",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "a833e59a-404b-41d3-a486-c5ec98a67ad7"
						},
						{
							"name": "Biller - Login",
							"item": [
								{
									"name": "Valid Login with 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"if (jsonData.data.two_fa === true) {",
													"    var Key = jsonData.data.key",
													"    pm.environment.set(\"BillerKEY\", Key)",
													"    pm.collectionVariables.set(\"BillerKEY\", Key)",
													"",
													"",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function () {",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function () {",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"Check for two fa\", function () {",
													"        pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    })",
													"}",
													"else if (jsonData.data.user.two_fa === 0) {",
													"    pm.test(\"2FA is false\", function () {",
													"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"    })",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"BillerTOKEN\", Token)",
													"    pm.environment.set(\"TOKEN\", Token)",
													"    pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function () {",
													"        pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function () {",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"",
													"    pm.test(\"Status is Success\", function () {",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function () {",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is false\", function () {",
													"        pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"    })",
													"    pm.test(\"Email is accurate\", function () {",
													"        pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"    })",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a9465866-1c9f-482d-9d71-b3cc23fb45cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"azeezbiller@mailinator.com\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login with 2FA - Bukola",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var Request = JSON.parse(pm.request.body.raw);",
													"// if(jsonData.data.two_fa === true){",
													"//     var Key = jsonData.data.key",
													"//     pm.environment.set(\"BillerKEY\", Key)",
													"//     pm.collectionVariables.set(\"BillerKEY\", Key)",
													"",
													"//     pm.test(\"Status code is 200\", function(){",
													"//         pm.response.to.have.status(200);",
													"//     })",
													"//     pm.test(\"Status code is OK\", function () {",
													"//         pm.response.to.have.status(\"OK\");",
													"//     });",
													"//     pm.test(\"Status is Success\", function(){",
													"//         pm.expect(jsonData.status).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"message is successs\", function(){",
													"//         pm.expect(jsonData.message).to.eql(\"success\")",
													"//     })  ",
													"//     pm.test(\"Check for two fa\", function(){",
													"//     pm.expect(jsonData.data.two_fa).to.eql(true)",
													"//     })",
													"// }",
													"// else if (jsonData.data.user.two_fa === 0){",
													"//     pm.test(\"2FA is false\", function(){",
													"//         pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"//     })",
													"//     var Token = jsonData.data.token_data.token",
													"//     pm.environment.set(\"BillerTOKEN\", Token)",
													"//     pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"//     pm.test(\"Status code is 200\", function(){",
													"//     pm.response.to.have.status(200);",
													"//     })",
													"//     pm.test(\"Status code is OK\", function () {",
													"//         pm.response.to.have.status(\"OK\");",
													"//     });",
													"//     pm.test(\"Status is Success\", function(){",
													"//         pm.expect(jsonData.status).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"message is successs\", function(){",
													"//         pm.expect(jsonData.message).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"two fa is false\", function(){",
													"//         pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"//     })",
													"//     pm.test(\"Email is accurate\", function(){",
													"//         pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"//     })",
													"// }",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "02384ca3-2eab-4e7b-99aa-0a99c96d3454",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"id008@code-gmail.com\",\n    \"password\": \"Godzilla@@1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login with 2FA - MINNIE",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var Request = JSON.parse(pm.request.body.raw);",
													"// if(jsonData.data.two_fa === true){",
													"//     var Key = jsonData.data.key",
													"//     pm.environment.set(\"BillerKEY\", Key)",
													"//     pm.collectionVariables.set(\"BillerKEY\", Key)",
													"",
													"//     pm.test(\"Status code is 200\", function(){",
													"//         pm.response.to.have.status(200);",
													"//     })",
													"//     pm.test(\"Status code is OK\", function () {",
													"//         pm.response.to.have.status(\"OK\");",
													"//     });",
													"//     pm.test(\"Status is Success\", function(){",
													"//         pm.expect(jsonData.status).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"message is successs\", function(){",
													"//         pm.expect(jsonData.message).to.eql(\"success\")",
													"//     })  ",
													"//     pm.test(\"Check for two fa\", function(){",
													"//     pm.expect(jsonData.data.two_fa).to.eql(true)",
													"//     })",
													"// }",
													"// else if (jsonData.data.user.two_fa === 0){",
													"//     pm.test(\"2FA is false\", function(){",
													"//         pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"//     })",
													"//     var Token = jsonData.data.token_data.token",
													"//     pm.environment.set(\"BillerTOKEN\", Token)",
													"//     pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"//     pm.test(\"Status code is 200\", function(){",
													"//     pm.response.to.have.status(200);",
													"//     })",
													"//     pm.test(\"Status code is OK\", function () {",
													"//         pm.response.to.have.status(\"OK\");",
													"//     });",
													"//     pm.test(\"Status is Success\", function(){",
													"//         pm.expect(jsonData.status).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"message is successs\", function(){",
													"//         pm.expect(jsonData.message).to.eql(\"success\")",
													"//     })",
													"//     pm.test(\"two fa is false\", function(){",
													"//         pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"//     })",
													"//     pm.test(\"Email is accurate\", function(){",
													"//         pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"//     })",
													"// }",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "b7273692-695b-433f-9b4e-02371dba7dfe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"minniezee@mailinator.com\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login Invalid Credentials",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d81b66f-375a-4e66-a503-35eacbd9d2d9",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid login credentials\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1e8acc21-61c0-4174-95e4-4cedfdd30cfd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2ee42717-c163-4e69-b051-433be152b820",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"123456789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript",
												"id": "9497c906-622f-4520-8433-be5a221794d7"
											}
										}
									],
									"id": "d0d20374-5113-401a-a32f-3c7680b406c5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Invalid Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7497d06-276f-4433-8a1c-ff4305b05fe2",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "84bfe171-895f-45f0-b245-983b640fe862",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3acf75db-9035-4b65-90ba-83b69a7dbb22",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4ced01e-bf3d-48da-b603-2dc12d749c54",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Password cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c7c9edb3-523c-46d4-ac03-b515c307859d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "25d2d214-cc91-49b4-8353-1c34330154f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login wihout 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67133885-8ac6-457e-a6cf-4c22ce92a409",
												"exec": [
													"var jsonData = pm.response.json();",
													"if (jsonData.data.two_fa === 0){",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"TOKEN\", Token)",
													"    pm.collectionVariables.set(\"TOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    }) ",
													"}",
													"else{",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    // pm.test(\"two fa is true\", function(){",
													"    //     pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    // })",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ef04fa6f-7147-4588-95f3-3d9750f88499",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a7bfd96a-d86c-4648-89b3-c3663acd4695",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								}
							],
							"id": "39bdb5cb-88e8-4e17-9313-62261510daf5"
						},
						{
							"name": "Biller - Login 2FA",
							"item": [
								{
									"name": "Login (2FA) - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c027cb0-0ac0-4349-b3c5-caf04ee06944",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"// var Token = jsonData.data.token_data.token\r",
													"// pm.environment.set(\"BillerTOKEN\", Token)\r",
													"// pm.collectionVariables.set(\"BillerTOKEN\", Token)\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is Success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is successs\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"success\")\r",
													"// })  \r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "981950e5-c493-4e77-9ba0-83d7fd0c0e9e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a64bdccd-4b0f-4af7-ad15-386ad3b6acf1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{BillerKEY}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb002b2b-4202-4484-827f-9754e74299f6",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid 2FA Token\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Key\")\r",
													"})"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c0d66a4-78d4-4086-a6a8-4e4315a1733f",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "eb380af6-0b88-4d80-a7e1-a72fb0f4069f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"00000\",\n    \"token\": \"636964\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "419bd9de-0135-4a64-aecc-0bd6730b8df5",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"token should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6dbadd52-892a-44aa-8e37-c701692782e7",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "17802cf0-b668-4dba-adc8-33a3cd42bfed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{BillerKEY}}\",\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"key should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "d5c59a04-15cc-4f1b-9155-3ffed7b9e55e"
											}
										}
									],
									"id": "8d925e0e-2508-496c-bb9b-361357e5c8f9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"\",\n    \"token\": \"123454\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3550d6ab-cd0e-45ba-abb0-402eb10d8619",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Key\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Key\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ff52000b-2277-42de-b2f7-18a2078a991e",
												"exec": [
													"// postman.setNextRequest(\"Create Role\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "d88996e0-ee55-47e8-806b-5014643eb224",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE2ODE4MTkyOTgsImV4cCI6MTY4MTgyMjg5OH0.24icAcu_5IA5Q_ZaDD6YziIdVYZ4vg\",\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								}
							],
							"id": "00fc48e7-f41d-439c-8035-5379c6728ff3"
						}
					],
					"id": "f69e0c2d-d12c-4928-ac97-f88b2c12c342"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Create Subscription",
							"item": [
								{
									"name": "Create Subscription - manual",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var RequestData = JSON.parse(pm.request.body.raw)",
													"// pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"// pm.test(\"Status code is 201\", function(){",
													"//     pm.response.to.have.status(201);",
													"// })",
													"// pm.test(\"Status code is Created\", function () {",
													"//     pm.response.to.have.status(\"Created\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is 'Mandate created successfully'\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"Subscription created successfully\")",
													"// })",
													"// pm.test(\"Validate that an accurate account number is returned\", function(){",
													"//     pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"// })",
													"// pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"//     pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"// })",
													"// pm.test(\"Validate that an accurate amount is returned\", function(){",
													"//     pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"// })",
													"// pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.exist",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.eql(4)",
													"// })"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													"var StartDate = new Date().toISOString()",
													"pm.collectionVariables.set(\"StartDate\", StartDate)",
													"",
													"// ADD 7days to the current date",
													"var FutureDate = new Date()",
													"FutureDate.setDate(FutureDate.getDate() + 3)",
													"FutureDate = FutureDate.toISOString()",
													"pm.collectionVariables.set(\"FutureDate\", FutureDate)",
													"console.log(StartDate, FutureDate)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5aeccc4b-f9f0-4023-b088-9c2bb56ea194",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"015112314\",\n    \"phone_number\": \"08138096550\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 15,\n    \"email\": \"adetutuisinks@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"type\": \"manual\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ojodu Berger\",\n    \"amount\": 200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "64e8bc7d-365c-4576-905a-6e05190c3977",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription- emandate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var RequestData = JSON.parse(pm.request.body.raw)",
													"// pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"// pm.test(\"Status code is 201\", function(){",
													"//     pm.response.to.have.status(201);",
													"// })",
													"// pm.test(\"Status code is Created\", function () {",
													"//     pm.response.to.have.status(\"Created\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is 'Mandate created successfully'\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"Subscription created successfully\")",
													"// })",
													"// pm.test(\"Validate that an accurate account number is returned\", function(){",
													"//     pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"// })",
													"// pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"//     pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"// })",
													"// pm.test(\"Validate that an accurate amount is returned\", function(){",
													"//     pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"// })",
													"// pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.exist",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.eql(4)",
													"// })"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													"var StartDate = new Date().toISOString()",
													"pm.collectionVariables.set(\"StartDate\", StartDate)",
													"",
													"// ADD 7days to the current date",
													"var FutureDate = new Date()",
													"FutureDate.setDate(FutureDate.getDate() + 3)",
													"FutureDate = FutureDate.toISOString()",
													"pm.collectionVariables.set(\"FutureDate\", FutureDate)",
													"console.log(StartDate, FutureDate)"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "44ad9977-09c5-47eb-a9b8-0e9f5e205a3c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"015112314\",\n    \"phone_number\": \"08138096550\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 15,\n    \"email\": \"adetutuisinks@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"type\": \"emandate\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ojodu Berger\",\n    \"amount\": 200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f4a5f0cd-a463-439c-aed5-07b04da842eb",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3e976944-f7a3-48ba-9eb0-afd2ba6a6c17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "04a5287e-c598-428c-8c9d-a43801d73fc2",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f987d301-bdb3-4790-83a2-1a2ddd4cf813",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "0eb9b1d4-e93b-4c69-a46e-8557bee78b68",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "90d219b7-4c1e-4821-b8f3-6c342b033407",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "bca0217f-6b33-4182-9ff0-844c1018904d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription -Invalid frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "177f53cc-223d-49c1-a01e-6ee8afadb3da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3f5dd59c-df03-4f6a-bacf-5890b660780d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "87cb8cbd-0763-48d7-b836-a2a16be5dedb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "62306a5c-e18a-4fd3-91fb-1c19e795fa2a",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b662b509-6961-480b-a48d-283b19e93691",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6088ed53-c6c8-4a3f-9ece-27f4ce19c1be",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - mismatched bank code and account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c32ea8fb-5a74-4284-b57a-2f14badad9dc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6cafb775-d352-4e1b-b0df-de8e78902c6e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Non-existing bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "add51a50-77d1-489d-be45-a77d935e2466",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "8869f038-d427-489c-9aa6-7972b3435dbd",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b019fb01-fb1f-4438-a6cc-0e7356ae4b39",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "b14807bc-52de-4d2b-bbc8-c210737a8dfe",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c2bf5fa2-4291-41ea-a3ac-07d79dbc9046",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3f486a33-db34-4638-8a74-7e07f782f93d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "705e9768-3bb4-433b-b856-08de01939950",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "a8eb98a1-84bc-42b4-b269-77fa5fac3679",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - start date in Past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "330f67d5-61dd-4a4c-9018-1a82f2152cf5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "cc40a80d-1107-48e9-94c0-90f57be5d19e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No end date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e2feced2-eb35-432b-8bb8-a8bae203c7a8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "b153f29b-7fab-4e25-ab7f-b51a41b19eab",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date in past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "85bcf126-9ab0-44b9-9053-007e5b149242",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f0da0d96-a6d1-42e1-b74a-6301b13540f1",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date greater than start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ee3e04f0-ca48-43aa-a257-013ab3ea70cc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "635df1ae-1702-44e4-99ae-0e2b52c3ec0c",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No narration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "242c277f-1d22-49f1-be32-0473493e41ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "e377489c-a410-490f-acf1-96e1c015d20e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "505682ef-e8d2-4b08-998f-052de6441f37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "08a9ddc3-cc66-443b-9b22-47a7ba07a600",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6dba0318-4d6b-47e3-bf67-a61d25a850d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "ec934354-01d8-4f1b-9090-489bb1817f6c",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - negative amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "459f15ea-02c3-4a67-9d7b-f02053e777f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6381fee9-9cbc-4b6e-82c4-c267602761df",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Amount lesser than system threshhold",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5a1f7dc3-cd8f-4a49-8c5d-87d5eb96165a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3de7e621-18ac-4a4e-93de-8881f3bcabaf",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e8ff16be-fefb-48fe-91b0-c36581ed7258",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "d0d5ac5c-7ec7-415d-99c5-616454c0b9ea",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								}
							],
							"id": "dc5fe42e-e192-4b5f-a957-141ccc0825bc"
						},
						{
							"name": "Fetch Subscriptions",
							"item": [
								{
									"name": "Fetch Subscriptions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"const subscriptionId = jsonData.data.data[0].id",
													"pm.environment.set(\"subscriptionId\", subscriptionId)",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4eddea43-f529-4680-b6f5-92319939ccca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "d4fda033-2f34-4d8a-84d8-61a2588d41da",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "d14e7a0c-833f-4c54-bb64-f94d286144e3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "aa313df8-2ada-4aa0-aab9-d853647e247d",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "7c0b56aa-4cdd-4324-bb02-3072d5947c5f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "d1cc09f8-d556-4ad6-96f4-91951ff2125d",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "4045c782-cce0-47af-986f-f7ce6dbb9a65",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "a7bce97a-423a-4533-840d-573b69b26546",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "fe378a2b-f28d-450b-a4ee-16e204b219fa"
						},
						{
							"name": "Fetch Subscription",
							"item": [
								{
									"name": "Fetch Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f57f36dd-f149-43f2-a0ca-4ff886218712",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "{{subscriptionId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "675fb5e7-e402-4866-ab89-dc48580e8be8",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b41681a6-98ac-416f-9581-cbc2af9e1081",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "{{subscriptionId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "9ffb4ade-bd17-4ad1-ab0a-6921f95d560d",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3fdad504-196a-4b9f-b002-ee47ee7d6763",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "{{subscriptionId}}"
												}
											]
										}
									},
									"response": [
										{
											"id": "68ff10b8-4e00-42cd-aa2b-38217864bbb9",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a682356d-d367-4ad3-bfc5-85c43ae88854",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "925dbe2a-fb73-4c42-a13c-4b9feff2cdc2",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "6a20fee8-3159-444c-8f23-e0106fb06d5d"
						},
						{
							"name": "Fetch Subscription Stats",
							"item": [
								{
									"name": "Fetch Subscription Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a83f75c2-6e2a-4fcf-811b-2c57ac0c8d44",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-01-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-01-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "992461c4-347d-4637-8a9a-d973bfc64de1",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f357a55e-c40e-468a-8927-6e52f99d8010",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "6c3187de-45d3-4f5a-b49b-28fa420ae187",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8366553f-2952-4b4c-843e-3c55ec4aa33e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "03ca73a7-2eaa-4f1b-8cb9-c8a1f42c6ee3",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"pm.test(\"Status is Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a0a0f9c4-9542-42e9-992e-775b2aacb953",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "b5160b1f-297e-4032-81d3-8fa0b0375edf",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "bee1e48e-5e9e-4e3e-91ab-eb7348f6f41a"
						},
						{
							"name": "Upload Subscription",
							"item": [
								{
									"name": "Upload Subscriptions Copy",
									"id": "f0ad23ee-971e-452e-98a0-89b8787b86af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": {
												"username": "4453053ae3f09c1e63844967d4952ada",
												"password": "9340619471bbf3e4c1ee51fb0031182a2259543692744d080128b230ddd14650"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mandates\": [\n        {\n            \"bank\": \"Zenith Bank\",\n            \"account_number\": \"2150302690\",\n            \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n            \"phone_number\": \"08123456789\",\n            \"address\": \"Test Address\",\n            \"start_date\": \"2024-01-01\",\n            \"end_date\": \"2024-05-01\",\n            \"narration\": \"Test Narration\",\n            \"amount\": 10000,\n            \"frequency\": \"daily\",\n            \"type\": \"emandate\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions/upload"
									},
									"response": [
										{
											"id": "03926f94-5618-488b-a40e-1a986bac2ca2",
											"name": "Upload Subscriptions",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mandates\": [\n        {\n            \"bank\": \"Zenith Bank\",\n            \"account_number\": \"2150302690\",\n            \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n            \"phone_number\": \"08123456789\",\n            \"address\": \"Test Address\",\n            \"start_date\": \"2024-01-01\",\n            \"end_date\": \"2024-05-01\",\n            \"narration\": \"Test Narration\",\n            \"amount\": 10000,\n            \"frequency\": \"daily\",\n            \"type\": \"emandate\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions/upload"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-Wapt+KJVXz/ozkdDs6Md3nw7iIU\""
												},
												{
													"key": "Date",
													"value": "Sat, 30 Dec 2023 07:19:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscriptions uploaded successfully\",\n    \"data\": true\n}"
										}
									]
								}
							],
							"id": "e649d6f3-d6da-4fd9-887d-95aa5b9bb5b1"
						}
					],
					"id": "1c0b5848-e87c-464d-890a-bd76a5c0bcee",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{BillerTOKEN}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4c28de08-e6bc-41ee-a62f-7f6e08f1a294",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ba8cd52e-57b3-4928-b1aa-b3f9215f8e5a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Documents",
					"item": [
						{
							"name": "Fetch Document",
							"item": [
								{
									"name": "Fetch Documents",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "184922e6-1258-4a5c-b8a3-5e5922f7eb75",
												"exec": [
													"// var jsonData = pm.response.json();",
													"// var RequestData = JSON.parse(pm.request.body.raw)",
													"// pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"// pm.test(\"Status code is 201\", function(){",
													"//     pm.response.to.have.status(201);",
													"// })",
													"// pm.test(\"Status code is Created\", function () {",
													"//     pm.response.to.have.status(\"Created\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is 'Mandate created successfully'\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")",
													"// })",
													"// pm.test(\"Validate that an accurate account number is returned\", function(){",
													"//     pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"// })",
													"// pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"//     pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"// })",
													"// pm.test(\"Validate that an accurate email is returned\", function(){",
													"//     pm.expect(jsonData.data.email).to.contain(RequestData.email)",
													"// })",
													"// pm.test(\"Validate that an accurate amount is returned\", function(){",
													"//     pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"// })",
													"// pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"//     pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)",
													"// })"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6d3b8d79-3e25-4b42-ad05-8e66d00e4ba7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "1763bf05-87e0-4665-8f50-7d6d5dd0203f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"documents"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": [
										{
											"id": "49f74338-1a0d-4dc6-ba10-7911a802a426",
											"name": "Fetch Documents",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "ASC"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1271"
												},
												{
													"key": "ETag",
													"value": "W/\"4f7-GZqXuJsCybYE58iGLkOg9rqw2C8\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 09:29:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"CAC business registration\",\n                \"description\": \"Upload your CAC documents\",\n                \"slug\": \"cac\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":true}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"Certificate of Incorporation\",\n                \"description\": \"Upload your certificate of incorporation\",\n                \"slug\": \"incorporation-certificate\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"Regulatory license\",\n                \"description\": \"Upload your regulatory license\",\n                \"slug\": \"regulatory-license\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    }\n}"
										},
										{
											"id": "bb42cc9c-8116-4e4a-b1f5-dc54dde70f89",
											"name": "Fetch Documents",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "ASC"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1593"
												},
												{
													"key": "ETag",
													"value": "W/\"639-/aMkNmA08KnOx0cakM+L9x2GwCU\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 10:25:38 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"reference\": \"...\",\n                \"url\": \"http://test.com\",\n                \"document_meta\": null,\n                \"entity_id\": 15,\n                \"entity\": \"biller\",\n                \"extension\": \"txt\",\n                \"document_status\": \"pending\",\n                \"definition_id\": 1,\n                \"name\": \"CAC business registration\",\n                \"description\": \"Upload your CAC documents\",\n                \"slug\": \"cac\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":true}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": {\n                    \"id\": 1,\n                    \"name\": \"CAC business registration\",\n                    \"description\": \"Upload your CAC documents\",\n                    \"slug\": \"cac\",\n                    \"entity\": \"biller\",\n                    \"meta\": \"{\\\"require-reference\\\":true}\",\n                    \"status\": \"active\",\n                    \"created_on\": \"2023-12-10 08:01:55\",\n                    \"created_by\": null,\n                    \"modified_on\": \"2023-12-10 08:01:55\",\n                    \"modified_by\": null,\n                    \"deleted_on\": \"Invalid date\",\n                    \"deleted_flag\": 0,\n                    \"deleted_by\": null\n                }\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"definition_id\": 2,\n                \"name\": \"Certificate of Incorporation\",\n                \"description\": \"Upload your certificate of incorporation\",\n                \"slug\": \"incorporation-certificate\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"definition_id\": 3,\n                \"name\": \"Regulatory license\",\n                \"description\": \"Upload your regulatory license\",\n                \"slug\": \"regulatory-license\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "d66e4419-20e0-40cb-85bf-7871b5634547"
						},
						{
							"name": "Save Document",
							"item": [
								{
									"name": "Save Document",
									"id": "f29c245b-ba4b-43b7-907a-702e6e86bd76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"http://test.com\",\n    \"extension\": \"txt\",\n    \"reference\": \"...\",\n    \"document_definition_id\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/documents"
									},
									"response": [
										{
											"id": "f6059cd8-bb19-43f5-9acd-fad10fc22ee4",
											"name": "Save Document",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"url\": \"http://test.com\",\n    \"extension\": \"txt\",\n    \"reference\": \"...\",\n    \"document_definition_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/documents"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "735"
												},
												{
													"key": "ETag",
													"value": "W/\"2df-ohLvOG6NC0EFmtUqYALHJn7yqa4\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 10:29:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"url\": \"http://test.com\",\n        \"extension\": \"txt\",\n        \"reference\": \"...\",\n        \"document_definition_id\": 1,\n        \"id\": 1,\n        \"entity_id\": 15,\n        \"entity\": \"biller\",\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-10 10:19:30\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-10 10:19:30\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"definition\": {\n            \"id\": 1,\n            \"name\": \"CAC business registration\",\n            \"description\": \"Upload your CAC documents\",\n            \"slug\": \"cac\",\n            \"entity\": \"biller\",\n            \"meta\": \"{\\\"require-reference\\\":true}\",\n            \"status\": \"active\",\n            \"created_on\": \"2023-12-10 08:01:55\",\n            \"created_by\": null,\n            \"modified_on\": \"2023-12-10 08:01:55\",\n            \"modified_by\": null,\n            \"deleted_on\": \"Invalid date\",\n            \"deleted_flag\": 0,\n            \"deleted_by\": null\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "b78b74f4-6bff-49c7-acfd-be7cc8644ac0"
						}
					],
					"id": "363657f8-3faa-4a67-bc8d-9b516113e937"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Fetch User (Me)",
							"item": [
								{
									"name": "Fetch User (Me)",
									"id": "f2421b14-5208-4c58-884e-d6c88d244330",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "c77ade3a-3e18-4e9d-b12f-54eb8b434d44",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76cb529c-697e-4c62-ba69-95272782c1b6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "61224640-c68c-48d4-84c0-9ac9c3c5a099",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9a5934f5-7cdc-43fd-ab1c-8270d5ad81a1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "2c8435d1-e9cc-4d69-8f41-416a29372d8c",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be05206c-4abc-4098-876d-57eba693ee0c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "eca14d26-9dff-47a3-a4fd-2cbf26db7c53",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e7ffab46-efe8-4d83-8bb3-79144967ef64",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "d6e85f10-c096-43dc-8a79-b643c0dbafd0",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "f1dc11c2-fdc0-4777-b65a-164dece8a268"
						},
						{
							"name": "Fetch Audit Trails (Me)",
							"item": [
								{
									"name": "Fetch Audit Trails (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "867de176-9f8b-4d64-96aa-9fd5f3b313e4",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f08cb92c-9479-4aba-b7cf-b8f4a407d26f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ccbceb46-93ef-4fd5-9848-4ef869834fe6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "fb4cb84d-2cc9-4a18-9cc0-ba3008b2b450",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "80e7bd55-09df-4049-a964-2185931c055a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "252be19b-74fc-4d41-839d-4f09851f81ea",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "98e17bac-bdbe-4755-806a-7497628e88af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "20f61986-c9a5-47da-9d57-f810fc0be6bd",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7c53584-f409-40c6-9400-73dcf50aa55c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95f8ca21-56e5-48c1-a04c-c76210e09620",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "21061315-c7f6-4e8f-b550-4c4f5f42b411",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "405d97f8-2bf1-4190-bf4d-950c3b38b0e3",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "c9c0604a-9566-4aa1-b14b-7e5a0c39478f"
						},
						{
							"name": "Update User (Me)",
							"item": [
								{
									"name": "Update User (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1763d65-d145-4537-bb8f-b96bb3ed8e14",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9bd79730-57ff-439b-8ffd-357a2ac1f839",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f362ae04-9a6b-4a28-9d1e-9ba6a01ac078",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "4e911b57-e6f8-4ef4-b21e-39b065854eb0",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c64a617-ca7c-4a7f-8bf0-ff15a476d025",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ced57bc8-6fa3-4475-af15-4139e6f284ba",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0cfb8b2b-b36a-43ee-b699-9faca1cd39e4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \" \",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "b30bbd13-345f-4895-acbc-a6b66149d51a",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "534cc772-36f0-40bc-b788-d0ccba23cd85",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deecb0b1-4064-4cfb-a140-aecbb8c097a0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0a69a8f6-0861-4875-85ce-a6901e5d5a0c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\",\n    \"last_name\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "3c1c23a7-083e-4ccd-8fc7-c6c7a00a24cd",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8fe124d6-f98e-48cb-89a0-10818000e182",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the last name is returned\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2457373b-0a20-407b-a53a-79efb203fcf1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "69201a4d-014d-4097-ab04-5233f05a0db4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "c41eb4ce-ea4d-4062-b815-c0350b523ad2",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc215605-4d3c-4847-adf2-8ff607dd2247",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the last name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name is returned\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26fcbac3-7b9d-458b-a444-13b923eb1ee0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3df0cc51-f5bb-4b9c-b23a-a255c765d1ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"last_name\": \"Pascal2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "22aa7794-d7e8-4fb0-b539-6429ef260c0e",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce72363c-fc1b-42c7-a8af-f16a9b57f6f8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c45455f9-2462-44a5-ab92-bc0c61aef33d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1e72b2db-3e7a-46a6-b8d5-2e0fead7c5e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "5f36ea47-8bda-43eb-b92a-15c3f9071117",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eda6d0e9-6491-42bd-94b8-4a6dbc8b8f47",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6c49559b-9089-487f-9e79-cc5a9eae3fd9",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b25dd508-2c1c-48c8-8836-8e60ed7ed1f1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "94872664-ed6d-471d-9705-9b9890c40053",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "3bec679d-8056-4b2b-b71a-087aac0a9f87"
						},
						{
							"name": "Setup User's 2FA (Me)",
							"item": [
								{
									"name": "Setup User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2546d8e4-34ce-424c-a951-bc58d28c05c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"\r",
													"pm.test(\"Validate the backup codes are returned\", function(){\r",
													"    pm.expect(jsonData.data.backup_codes).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2c97e6b5-e37e-40fa-b52b-3c5a2b329aab",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "70c0c700-52ca-47e2-b17b-8c9da8e869c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd8a04d-1c2f-495e-8c80-dfbd2bf68294",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c5478cd1-90ee-46bd-a438-3eb37dcd001a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "24955489-37a1-4070-891f-b948ff2113e3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) -Invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68b54c5c-cdfa-41fa-8ace-6dafe973f74c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fedad155-b91a-41e3-946f-d19a47ef297e",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8e910043-fe59-405d-9430-9fb5afa68e76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								}
							],
							"id": "1e15cce1-724e-40f9-969d-d904bda83fe5"
						},
						{
							"name": "Activate/Deactivate User's 2FA (Me)",
							"item": [
								{
									"name": "Deactivate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c571015f-c9e4-4a8c-9a43-74b7be82a2d1",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea5fde35-d673-4bb8-9dce-d492cfc30ef6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f486e5e6-dd88-456a-a9d8-9d17db8f8ff1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "453edcae-1672-4136-9069-c6e890d12db0",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": [
										{
											"id": "93a072b0-9ffa-4960-90e6-7ee5b296b064",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be99fea4-da4f-4c36-8026-87840d047ca7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4ec26e6c-1c70-4f4b-89dd-2c492d56d1ab",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "300113b5-a3dd-4702-9d94-8365ccaedea8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "2221e096-e938-4fc5-98e2-c27bbfedaf4a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "734e6c84-aa9f-4dd4-aa8d-f4f7109013a8",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Invalid or Expired Auth - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49bfcbce-331b-476b-8946-f07d6427a2cf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d6945e7b-3d9c-45bb-8740-9b5bc2414b21",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "18c39ffb-75c0-46f5-aab3-bae7ec388136",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODQxNTEzLCJleHAiOjE2ODQ4NDUxMTN9.vXVMgfX2eoHvKvldVkICU_DbhqDaNhUx0k3bCaxN-fQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "442b49a9-6f64-43eb-8ec4-06ba8c2baa2a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "f02fbc7c-660f-4980-b494-47602d1c2b45",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "No Auth - Activate/Deactivate User's 2FA (Me) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2d99a24-69f8-4b9a-ac35-91dba0728b58",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c6b625d2-6df6-4a9d-bbdd-dc7ea47671ff",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1c391097-e1c4-42bd-aa42-ea180effe348",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "6bc22444-84f7-4f9a-a0aa-9f698ce7b2af",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "9f3aeeb1-33cc-4443-9b74-fb346dc8c507",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								}
							],
							"id": "24826b84-6989-4464-9d3f-8b4043bbbb08"
						},
						{
							"name": "Create User",
							"item": [
								{
									"name": "Create User - Valid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3c3c1273-6ef8-40d4-84fe-dde12b6e29fe",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "af927ba2-c376-4240-940c-00d6d4cb46b1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.environment.set(\"UserID\", jsonData.data.id)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "147c432d-2c12-4e8c-806a-82772dd06fa6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"role_id\": 1\n    // \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty email",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "517e76c2-e5ce-4450-9771-3721c5d23417"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "09841664-17d6-4b3c-8df2-a87d7de3512a"
											}
										}
									],
									"id": "622e1bf9-4c39-4596-b707-24982d1619c3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty Role Id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "dc8c9523-9da5-493d-9c26-3765cf17d835"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8e444341-de45-4740-971e-faa4ce5c38a1"
											}
										}
									],
									"id": "3280082b-975d-4e61-87ca-d0aedcfea690",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": \"\",\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "69fbf2d9-05af-4fd6-8590-093c9d08e4a6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ea6238b3-7f7f-4260-9dab-b0d1b51b1fd3",
												"exec": [
													"// var jsonData = JSON.parse(responseBody);\r",
													"// var Request = JSON.parse(pm.request.body.raw);\r",
													"// pm.test(\"Status code is 401\", function(){\r",
													"//     pm.response.to.have.status(400);\r",
													"// })\r",
													"// pm.test(\"Status code is Bad Request\", function () {\r",
													"//     pm.response.to.have.status(\"Bad Request\");\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status is error\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"error\")\r",
													"// })\r",
													"// pm.test(\"message is '2fa is required to perform the operation'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29b2b77f-a3ab-4766-a697-d67b7228ca99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": null\n\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Invalid 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4ef23212-f8bf-4d44-b5b7-d7cfeddd1974",
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7f4e78df-1028-426a-9a4c-8219a9cae8ad",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Invalid Auth Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid Auth Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"id": "92ba2bdd-b957-4fd9-af05-9b196a736241",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"908900\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No Authorization",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "40e6efeb-4452-4fe5-bf08-4a4e6319ace1"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invite sent Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "3e3348e9-d247-4b9a-85e4-bd74c165c274"
											}
										}
									],
									"id": "bfe1ec93-f6df-4877-8ba4-52641dff1dd0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "eb31781a-208a-42cc-8250-4a5179447ec9"
						},
						{
							"name": "Get Users",
							"item": [
								{
									"name": "Get Users -  valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "453d88cd-8dc4-46bc-a967-435262c1221e"
											}
										}
									],
									"id": "fc5bb796-2c59-446d-bcc6-a8010b348792",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Users - No authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "478eec89-218b-47e4-98ea-39a4c003b9c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "091d0352-bd2f-4f86-b40d-92200de03fdd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "2d9cd33a-93b9-4bf7-bab8-a7d84f4d6a52",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "0af38f47-2af0-41e4-b595-19f2466b5401"
						},
						{
							"name": "Get User",
							"item": [
								{
									"name": "Get User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce5d83d6-8033-4383-a43f-99471bd87f2a",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "106b09db-106b-4852-95cc-a5705325f87d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ae795245-21a0-4043-8099-8633ec700c9a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "7048a5b9-267b-4ab3-88f5-e26ef3ababe5",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc13032e-33b4-4e81-abf9-c5547a1f7563",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'user not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2f24ea19-7f0a-4aef-98ad-0eaf3e152c63",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b5859167-92c5-4237-9998-add733fbc52a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "99c93c84-f4e0-4b31-b302-e381327d3210",
													"key": "user_id",
													"value": "aaa"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214ed5f8-9de0-4cbf-a328-96e739d8c3a6",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "609b178d-dff0-45fb-9d3f-fb03846ee53d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "bd520995-f4c0-49c4-8687-d390f19057f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "40d82ba9-313e-4741-9490-15e257fb58b3",
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Non Existent user Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cef9983d-a8c5-410f-8082-b8f24239962f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2cd2128f-c5d1-423c-86be-f88f459dbbad",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "04d6c780-c8ba-40eb-92aa-7c6274ce5eb5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "e4b5ea3b-1939-42c2-b8b6-9ee059d3c520",
													"key": "user_id",
													"value": "10000"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "f024c2be-d865-4d3a-9e99-f937b3a1e7cc"
						},
						{
							"name": "Update User",
							"item": [
								{
									"name": "Update user role",
									"item": [
										{
											"name": "Update user role - empty field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c63ef11-a27a-47aa-a177-d10a0b4c2e48",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "03209fc0-d735-4810-886c-264ffab1f8b7",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "10569515-0396-4919-95b8-38961725345b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"\",\n    \"role_id\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "3ce629eb-3727-4f58-813f-0fb8a94caccf",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Non Existing Role Id",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "66dffa24-12d1-4d29-a724-a42ca9e996d2",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "a1620876-3e6d-4f73-b6d6-d56ec05f6d0a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 2000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "8203c5ed-1aa2-4501-b00f-669e27ba2792",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2795b44-39be-434b-b1df-06e32433d8b6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is OK\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is Success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'Success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0ae5a855-bd71-4000-8eb5-1404f767029c",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "a5ed87be-383c-40d6-b2e3-c75f8fabd6e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d26c39c3-85e0-4935-ab2a-26cf9498cc57",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "af4cae7d-d9aa-40bf-bcce-19a409c3c854",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "857ca4fc-d7a5-4862-a7ea-380457a7fd57",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													"postman"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "176eddcf-b5dd-4276-affc-2f94959dbfe6",
												"type": "text/javascript",
												"packages": {},
												"exec": [
													""
												]
											}
										}
									]
								},
								{
									"name": "Deactivate/Activate User",
									"item": [
										{
											"name": "Deactivate User - Empty user ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e45e645b-99d4-4de3-bded-e39414e73172",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'User not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "51cbfe4f-2430-4b13-8099-8b56a1e8c095",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "41b15d03-2ca0-460e-8a47-1157f6cec038",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "2bcb9588-b6ae-467a-bf38-865847d3d1ee",
															"key": "user_id",
															"value": ""
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d85b3471-1683-4c57-982f-f0a17fc1d666",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"User is Inactive'\", function(){\r",
															"    pm.expect(jsonData.data.status).to.eql(\"inactive\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "93d4d8ec-1d55-4570-bca4-25c0d7b37aca",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "53ae1f9d-5e50-40ca-a6a5-1581ea040ef2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "7eb03eae-5c98-4c24-b7be-9134883ec2d1",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - an Inactive user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c02b0f51-75e1-462a-ac7d-3aac0a9cd215",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate an inactive user'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is inactive\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "28427c90-309e-4697-8433-a6e3984a9e10",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "1bd56383-197d-4299-9106-f583d3069eb3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\",\n    \"role_id\": 2\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "aec240f5-bd7f-4338-8709-f8672018b97b",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be09b528-0bd3-4231-a573-d1178dd1868f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is pending\")\r",
															"})\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "2be71808-eec2-47b3-bf62-8e74e234e8cb",
														"exec": [
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"id": "c2531108-119e-45b6-b282-8b1255092f88",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{BillerTOKEN}}"
													}
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d73ac608-512b-4f9b-bfdf-42fd98694556",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "520926f8-4ae3-4d3d-8a82-6da83fda77b7",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is pending\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5cfd8d8f-6fd1-4893-b4dc-1e5f9595700d",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "5e3757c9-29ce-47d7-a14f-5c1170c3c3ab",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "f0032c6e-f6ab-4a22-9dc2-ea022f69ffd3",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ce215e7-bdc7-4ed6-8114-0daf1cf55633",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"User is active'\", function(){\r",
															"    pm.expect(jsonData.data.status).to.eql(\"active\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "4a0ce47b-368c-4e6f-b19a-b6442fbfc956",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "50914ddf-0fe0-4b27-bba0-9eed13b10a22",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "4fca6e5f-e4ab-482d-9e61-607f9a41c567",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Activate already active user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3a177ae-c073-4c1f-8d9c-926831bc426f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot activate an active user'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is active\")\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b98bf9dc-6e09-4514-a47b-10f02bbbe52e",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "146978ec-fb48-4081-ba55-06a697b09201",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "7e7a2532-4c53-4740-8423-240e18c0aa7d",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "413dc96d-1190-468c-8c57-da244880fa40"
								}
							],
							"id": "5f33a749-33bc-41b8-b746-b6652dbc4bc3"
						},
						{
							"name": "Change User Password",
							"item": [
								{
									"name": "Change User Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e22bee38-92f2-499b-91c5-ba2e662a11f2",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f80817b6-e79c-48e0-a48a-a9ddce9c0bd7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@\",\n    \"confirm_new_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Change Password again",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9e8915c7-39c9-4bc5-bf70-76343712cde7"
											}
										}
									],
									"id": "b3af3ec4-39be-4169-bebd-097ef1ebbabc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password- Current = New Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Old Password the same as New Password'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Old password used again. Enter a new password\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9ed52803-e320-4036-9976-a400b710e553"
											}
										}
									],
									"id": "268fa1cd-4314-4688-87f7-6cb986e3f9dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty current password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'current_password should not be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Current password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e242e4dc-8631-489d-b548-3e14cb79c36c"
											}
										}
									],
									"id": "8e9a95e6-54cc-4abf-be1e-63aaacddad71",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"\",\n    \"new_password\": \"Tester@11.\",\n    \"confirm_new_password\": \"Tester@11.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak.'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak.\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "2cafc6cd-d3d0-4428-acfc-13ce7288d431"
											}
										}
									],
									"id": "26f04fae-98ac-4d36-a0a8-274fbd867668",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password\",\n    \"confirm_new_password\": \"Password\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty New password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e0044c80-5bb4-40ee-bbba-72fdae8a1fc2",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b4711570-adfb-4883-ac94-a1dd7686b884",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "99a14b80-8a4b-46c5-8306-c6ce5120afd2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{BillerTOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty Confirm Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_new_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_new_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ec23a870-2b3c-444c-bf62-c25068321226"
											}
										}
									],
									"id": "9c84c98a-cee5-4f56-8ad0-ba3dd43c84a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password Mis-match Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "f5dd0c32-0871-4287-843a-aae98b8b4951"
											}
										}
									],
									"id": "20c74d24-181a-40b5-b1b3-b817d54f9eb7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"Password@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								}
							],
							"id": "afa4dda0-530d-499f-bcce-02d7ebc9295e"
						},
						{
							"name": "Resend User Invite",
							"item": [
								{
									"name": "Resend User Invite - Pending and Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcade068-dca6-4769-94b3-8299d80d58c7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully returned\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4b7ffa83-2223-4004-a6a7-9990e13c2b1a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "00a8848c-1285-4009-9089-a9398e1eafa0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Active",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Can only resend invite to pending users'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Can only resend invite to pending users\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "df99abfb-c8e0-4f2f-b975-783efa1faa61"
											}
										}
									],
									"id": "3d3927a4-d137-4b9b-9d3a-e54cfd4b997c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "04d969be-3af4-4c4f-8a5e-64a60fdfe95f",
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "d02e1aa8-d195-4826-b481-e90fe4bb865d"
											}
										}
									],
									"id": "a231048d-d803-475d-8ac8-d4627ee8d0ff",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "86c3e6a4-cd1d-433e-9674-c4cb4689a2bb",
													"key": "user_id",
													"value": "aa"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "ff9428a2-a97b-40af-ae11-827056b5afab"
						},
						{
							"name": "Fetch User's Stats",
							"item": [
								{
									"name": "Fetch User's Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ee6981a2-cee4-4849-8e1d-61581f71d5a3"
											}
										}
									],
									"id": "3061520b-3b40-464c-b303-9f89072c259a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								},
								{
									"name": "Fetch User's Stats - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8bc6a5b6-d542-4eeb-bedf-560ea89fa590"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "ae249165-0e53-4b90-9885-7ab948adbf9a"
											}
										}
									],
									"id": "f996a6ba-0d05-4a1e-b6f5-f9af1266df08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								}
							],
							"id": "3fa869c9-de94-4ec5-908a-3c11e2bef738"
						},
						{
							"name": "Password Reset",
							"item": [
								{
									"name": "Password Reset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ee2a36d-c66d-46f5-8e0c-68d3b2c75cc3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Password reset link successfully sent'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password reset link successfully sent, please check your email\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2059b51b-3691-40f5-b3b2-a5e200366055",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "329a8799-5f4c-47de-8266-9f37980e7ab2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"azeezbiller@mailinator.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "63974670-80f6-4256-99f5-37ec5dce3e22",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "44e581d0-2f28-450c-b5a3-d26632c554b7"
											}
										}
									],
									"id": "9fc7b503-9180-4989-9f7e-a623196526ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@mailinator\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "5ae5c342-17cf-4eb8-b704-9626b9fd364b",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8a9def5a-4354-4170-97b7-39f5e6585ea9"
											}
										}
									],
									"id": "9ee585c6-b1be-4acc-a46b-4fd40091b409",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \" \"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "f922ecea-9626-4588-8da8-05e3ec4a6eef",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Non-existing Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User does not exists or inactive'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User does not exists or inactive\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "0c5f08c2-4139-412d-975e-88659db9916f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setNextRequest('Create Mandate')"
												],
												"type": "text/javascript",
												"id": "6b5872e6-4380-4ab5-8caa-dfeb3ee699e6"
											}
										}
									],
									"id": "401d4241-20dc-447f-b7b3-88110fdce6ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@getnada.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "0c43b1d6-08ba-4389-9fca-7055786f51be",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "85721dcd-5811-4ba3-9aa4-f97a87899d88"
						},
						{
							"name": "Reset Password",
							"item": [
								{
									"name": "Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c49c958a-e177-4854-a0f4-03a35ddda6e3",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"Status code is OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"// pm.test(\"Status is success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"message is 'Password reset successful'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"Password reset successful\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4eaaaf6f-b488-4474-8f15-8a4ddcb0b1ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "32195931-0cce-47c0-a4f6-1ad0572ced2a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "ca548eae-a031-4422-a9d7-ab3f02a6690e",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "70600adb-1458-43fd-a252-208b880249cd"
											}
										}
									],
									"id": "0ccf8821-0292-4b0e-9e13-68367f7a7269",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "e00a891d-18ed-42dc-b81c-8b450d8df02b",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "2ee96bb2-bebb-498b-ab97-72858c000fc9",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Password does not match complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ff4e8e47-08aa-457c-8c95-5a1bd16588dc"
											}
										}
									],
									"id": "8b444536-f281-432c-bd2c-7fed1a8d0a66",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Passwor\",\n    \"confirm_password\": \"Passwor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "aab615eb-8ce8-41b3-957e-44e0d91527d9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "93c9cc9e-072c-42ea-8825-311cb2b31eb0",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - mismatched New Password And Confirm Password Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "1fdb6b10-f1ae-4ede-b50f-6507036483d4"
											}
										}
									],
									"id": "f556be0f-8571-4831-b449-8e54fb90911e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "4bfdc19d-315e-465a-8d6b-647ab60e2aee",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "884f59fa-97c0-45b6-a803-69369621a048",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "5dc953b5-0aab-4519-9786-613950ba9e34"
											}
										}
									],
									"id": "90b5d4fc-e015-4386-9a53-a6db6e44952b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "d4c3dd53-91b0-4641-9458-334877776148",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "8dfc34ec-104b-4a66-a430-2cd2c7d200bc",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "233d48fa-663a-4cc0-b6b1-ed1a2d990f2c"
						},
						{
							"name": "Accept Invite",
							"item": [
								{
									"name": "Accept User Invite",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9fea0004-9dff-43f1-bbce-5ab06d47f9e8",
												"exec": [
													"// var jsonData = pm.response.json();\r",
													"\r",
													"// pm.test(\"Status code is 200\", function(){\r",
													"//     pm.response.to.have.status(200);\r",
													"// })\r",
													"// pm.test(\"OK\", function () {\r",
													"//     pm.response.to.have.status(\"OK\");\r",
													"// });\r",
													"\r",
													"// pm.test(\"Status is success\", function(){\r",
													"//     pm.expect(jsonData.status).to.eql(\"success\")\r",
													"// })\r",
													"// pm.test(\"'\", function(){\r",
													"//     pm.expect(jsonData.message).to.eql(\"\")\r",
													"// })\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3b44d343-66c6-40da-8871-5aed747158f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "a07808c6-413e-4147-b3fb-99c266cbeb9a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "7128d65d-60c5-4815-bb1f-3e53f6f9eb18",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Invalid or wrong password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8436f913-ca27-469a-8274-a1bb139a50c1"
											}
										}
									],
									"id": "550f7fb8-3787-4018-94aa-cae8e37252ee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "c7ad5b53-a06c-4091-a9a4-abfb2c1f3de0",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "170d9c42-33c8-4b25-8d36-5222f9228842",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "4e4da7e1-e4d4-430d-8a92-ee5a1568f83b"
											}
										}
									],
									"id": "71b87d8a-8905-429d-989c-695330310b20",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "0e39b547-91fd-4455-8602-17d9abc35d07",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "b01639ab-da78-4ea0-8b75-d44d565b0f21",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "61ec2d18-d093-4588-af93-8535b6a91725"
											}
										}
									],
									"id": "a2963d29-06f4-42ad-ab3a-97d5b34f8f4d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "91dee3b4-625e-4d17-8d32-8eedf1db0ab9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "40d4eba2-145a-4472-a7a4-4024a5aab733",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "569e791d-36b7-4e9e-8ec0-1189065d37bb"
											}
										}
									],
									"id": "64b762d5-3f4d-4dd7-a5e8-4b586fe348e0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5b5910a6-c147-460e-886a-f9d5c9f3fa8a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "49a489cb-a692-4991-8d38-60a625f1847c",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Password field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "aec4c203-7e79-4ecd-a10b-5592604dd50f"
											}
										}
									],
									"id": "67319392-b039-444d-8acc-2d398b32ad78",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "e6382ce9-d3df-4bd9-be51-d150d979c121",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "2c21baaf-67ff-44b9-a4db-3a413f0126c6",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Doesn't meet Password Complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "6fe7e58e-7b99-4ac6-a2dd-2b36a3b79251"
											}
										}
									],
									"id": "b5e7e0a3-c642-4d57-a6c3-9bd6b2446692",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5685a7b3-f927-45e2-81cf-474bb0a4d2a4",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "5487a00b-782c-458e-9afb-40c1c463fd6a",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								}
							],
							"id": "581e9964-c9d6-4fa9-a3ac-e4ecc43cf7f8"
						},
						{
							"name": "Get User's Mandates",
							"id": "9921d7bf-807d-4592-bda7-f24554108694",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id",
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"id": "139c2219-0059-415c-a7d0-4f4db0ef56f3",
											"key": "user_id",
											"value": "{{UserID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "0f391191-f426-42c0-8f53-0e8e9a34fb0f",
									"name": "Get User's Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3847"
										},
										{
											"key": "ETag",
											"value": "W/\"f07-yRcWIhe96/5qwNoRB2DKqBCO7R0\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:10:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 7,\n                \"bank_id\": 52,\n                \"account_number\": 1780004070,\n                \"account_name\": \"vee Test\",\n                \"reference_number\": null,\n                \"frequency\": 1,\n                \"bvn\": \"33333333333\",\n                \"session_id\": \"999999230330145645170092220580\",\n                \"phone_number\": \"08139354433\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-05-10T00:00:00.000Z\",\n                \"end_date\": \"2023-05-15T00:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"workflow_status\": null,\n                \"debit_type\": \"all\",\n                \"entity\": \"user\",\n                \"created_on\": \"2023-05-11 02:20:53\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-05-11 07:58:41\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"5\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "51cdc211-502d-49e4-99f8-eff5ec506895"
				},
				{
					"name": "Banks",
					"item": [
						{
							"name": "Fetch Banks",
							"item": [
								{
									"name": "Fetch Banks - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0f0d781-d9a0-4a09-a236-db99e7929aea",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"The Bank Name and Bank ID is returned\", function () {\r",
													"    const Data = jsonData.data.data;\r",
													"    Data.forEach(function (bank) {\r",
													"        pm.expect(bank.id).to.be.a('number');\r",
													"        pm.expect(bank.name).to.be.a('string');\r",
													"        pm.expect(bank.bank_code).to.be.a('string');\r",
													"        pm.expect(bank.institution_code).to.be.a('string')\r",
													"        pm.expect(bank.institution_code.length).to.greaterThan(4);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6432ccef-4264-4a7c-b123-befd93b5f1b4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5662c75d-2c18-471b-93fc-df3e7c1bf19c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a28f5bb6-dc94-4b28-9657-f234bb7fe7ba",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1c8a2391-e620-44fc-9811-ac03f5535af6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0b7af6d2-a786-4a81-a710-7b421bc8312b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9761f057-5c2b-4436-8b88-a6c6714ac595",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0500ae4d-7f03-4e0a-a8d6-f663e82681cd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "183e21b4-aae1-4428-a4bd-000f370e3d30",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdebc88b-0e53-4c38-8055-2a84dc07fbbf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9b219601-d80a-460a-9eec-0beefe40dc03",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6f47859a-18ed-476a-b23f-8e48ba1f243b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "139eb4b7-7726-4dd3-b5a5-e4f01073fb4b"
						},
						{
							"name": "Fetch Bank",
							"item": [
								{
									"name": "Fetch Bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1eaf6c4-e93a-4482-a7b8-836f67767edc",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b322f98f-9040-455b-9ea7-5c9b3114ad75",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c6c75a70-778b-4a12-a99d-a5f799c4013c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "cf5f5359-c702-42e8-88d2-76cf1b43b7a1",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "9b23db54-cfa8-4a84-80f2-a55d2b3c38b8",
											"name": "Fetch Bank",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/banks/:bank_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"banks",
														":bank_id"
													],
													"variable": [
														{
															"key": "bank_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "365"
												},
												{
													"key": "ETag",
													"value": "W/\"16d-7QieTGIC9XbSXDesBODEj2aaqsg\""
												},
												{
													"key": "Date",
													"value": "Mon, 24 Apr 2023 20:32:09 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"status\": \"active\",\n        \"created_on\": \"2020-06-26T16:09:32.000Z\",\n        \"created_by\": null,\n        \"modified_on\": null,\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Bank - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2a0bed1-2a43-4e7a-9a5e-7044f6f80b7b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5bdb3d07-6484-48bf-a470-f1512ea77c87",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "916ad58b-256b-4948-909e-fca7b87daede",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "a03f300e-a3a9-4949-94d9-b655a279841b",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Bank - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50220dc1-ad86-4adb-96de-fa357cfede86",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a24f1c2c-1646-4fd0-b1a0-1281617376da",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "190c4d02-6ba5-4a76-9587-e4dc2b0c10a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "68d643ec-c795-4fb3-a182-bca0aac34bb8",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "abd887e3-d4d4-4fde-9017-83e06d8d33bf"
						},
						{
							"name": "Account Lookup",
							"item": [
								{
									"name": "Account Lookup",
									"id": "bbc62e88-f751-478b-9733-196dfe997984",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/banks/account-lookup"
									},
									"response": [
										{
											"id": "cc789946-9500-4d1a-b1d5-e18c1edca081",
											"name": "Account Lookup",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/banks/account-lookup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "141"
												},
												{
													"key": "ETag",
													"value": "W/\"8d-gED12kCzTHDqZpjC4M4KJhmfA8M\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:06:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160615129743771734\"\n    }\n}"
										}
									]
								}
							],
							"id": "655d9f20-ee11-46e7-8d20-a42d9e1c4131"
						},
						{
							"name": "Fetch Enquiries Stats",
							"id": "103f2317-73e5-428e-8890-7ad68fccb074",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/banks/stats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										"stats"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort_dir",
											"value": "ASC",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "0b010fae-81e6-4176-8d28-d4af93b780e6",
									"name": "Fetch Enquiries Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/stats",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												"stats"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sort_dir",
													"value": "ASC",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "208"
										},
										{
											"key": "ETag",
											"value": "W/\"d0-UXRJ7J3uI7kE1CiL+iizPIB9g7U\""
										},
										{
											"key": "Date",
											"value": "Sun, 04 Jun 2023 11:37:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ],\n        \"balance_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "bd6399b5-ebd2-44e1-9097-5a23050e88dc"
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Fetch Settings Categories",
							"item": [
								{
									"name": "Fetch Settings Categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb3d648c-095a-48a1-a173-46c7fef723b5",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "92b75223-35ae-4375-963c-c7f92f5344dc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "87303188-1941-46dc-a8ec-cf6b0770a824",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "b30175e7-47ea-44b6-8e45-6cfbce3184d0",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "edbee797-96f3-433a-bd4c-0cbd12eda810"
											}
										}
									],
									"id": "494c0403-e9ed-4756-968d-8480674a2a14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "4da45717-7e29-41be-97c3-b69ee0134225",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8980496d-1f85-4d8a-987b-60754cf51e28",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "378d7a26-dbe4-4242-bb73-fd83e15918f1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "882b7cdb-4afd-4cf7-9864-4b7b5710f65a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjQ3NzY5LCJleHAiOjE2ODQyNTEzNjl9.Hdt1k6cWyKZOBNDAHy9R9stTWLEIeELHvx2ahfdrQV4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "c0cf29d4-6074-492e-aed7-66700f56af74",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "4b1958d0-281d-4ea5-8bfd-0b28b02b4250"
						},
						{
							"name": "Fetch Settings",
							"item": [
								{
									"name": "Fetch Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "043fd8c8-4a5c-4555-b01b-fc4e81c9b2e0",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"// pm.test(\"Validate that all categories are present\", function(){\r",
													"//     pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})\r",
													"// })"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "082bd69b-c0fa-43e9-8588-7486e4cb8fb2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "500d6933-b481-4580-bbe8-b02aa98876c2",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0348e5ff-c214-495f-90ee-67521c35b61a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "453b796c-dbb0-42c0-81a9-081583420a15",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "62d6eb75-8c92-422f-ac91-c9abb6873bbe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "ec5c2b6a-1caf-438c-88ab-23ab071995f4",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - Expired authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efa1f288-5b8b-4702-b437-09888d4946a3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ebfb0b03-e827-4c80-86f6-9c08e12e4aa7",
												"exec": [
													"postman.setNextRequest(\"Logout - Invalid/expired Token\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a232ab09-0ee1-44b4-ba6e-75631dbf1212",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "af0167f6-136f-4a42-bfa2-17a46217eef5",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "0e26102b-4ff7-4c2a-949d-3ff48a41c64f"
						},
						{
							"name": "Update Settings",
							"item": [
								{
									"name": "Update Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is Created\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Settings updated successfully'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings updated successfully\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "5f939fbf-930b-4411-b0c8-c370cefdb374"
											}
										}
									],
									"id": "532ea638-721f-45c3-ac62-e9995a4cde23",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "bb6aa2ae-519e-4f1a-a86c-1100810660bf",
													"key": "settings_id",
													"value": "12"
												}
											]
										}
									},
									"response": [
										{
											"id": "ef38e93f-2f34-4c3a-956f-e750b2022656",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is 'Bad Request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Value cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "afa539ab-8174-4b05-b258-e3f5d65a99c1"
											}
										}
									],
									"id": "59e02304-433a-4a43-93a3-f6d71207a079",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "40025d61-104d-4686-9acf-a35bf4b53be0",
													"key": "settings_id",
													"value": "12"
												}
											]
										}
									},
									"response": [
										{
											"id": "4524e422-9d76-4cd0-80c3-9da117ff4bc0",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "246a13e5-077f-4552-bebb-c81b29d04dd4"
											}
										}
									],
									"id": "f04e08b0-0c2f-47fe-96c1-7ad28e6b4400",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "faa15e40-ab22-42b4-9486-4fcf0ee1b29c",
													"key": "settings_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "1e08f729-9df8-4949-9d97-97956c089a2d",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Invalid Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "66594507-f6d7-4b32-99eb-828d9f6a2a65"
											}
										}
									],
									"id": "4a4c9ba7-67cc-4174-8bce-2700c8e26988",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "6b12432b-8911-4104-b95d-cbbeb05ea3c6",
													"key": "settings_id",
													"value": "er"
												}
											]
										}
									},
									"response": [
										{
											"id": "0c84a80b-3348-4049-969d-f6df291e1003",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "2bff2361-b5ba-4813-b115-d59d200eef1b"
						},
						{
							"name": "Fetch Web Settings",
							"item": [
								{
									"name": "Fetch Web Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78ef2fd5-3b0c-4228-8dbf-a49cda305116",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that all categories are present\", function(){",
													"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0a0b8863-d5b6-4ed7-a95e-a32d63b957bf",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a0b36e37-c71c-4f76-a787-33a8947c9292",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "fb9e05c4-c74c-4d18-a05e-1132611aeb33",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63149c86-97b3-4df0-babe-23fb76209f6f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "114d1e13-d30b-4153-941e-52b81dcc433a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a6106bfc-fcb1-435e-94ad-875143472a8e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "131c4718-1b8f-439c-a930-1829ff9d49a2",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3dd98730-7226-493c-af22-c03df50f8be5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5a183273-1a47-4fb9-a377-6f09e3ac2085",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "be1b412e-a370-4e7c-b462-16ad641ff887",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSy",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "010370eb-224b-44da-97af-2e907b87a272",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab01d868-f6ad-437d-b4b2-3d3e51278d1b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c902cfb-6f3e-422b-892e-d1bfb4555157",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "fd973361-070b-47ec-9f4b-06913f5c1fcc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "4fb71f98-0cb4-4f25-8737-8d96033e4d97",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "25d6d66e-c650-4efb-936d-65a906843252"
						}
					],
					"id": "acccaec7-29e6-44eb-8e04-469de5b79843"
				}
			],
			"id": "e24462a7-8261-4f1a-9443-b2b036203e33",
			"description": "New features\n\nContains the following folder\n\n- Auth -\n    \n    - Sign Up\n    - Verify User\n    - Login\n        \n- Mandates\n    \n- Beneficiaries\n    \n- Settings\n    \n- Users\n    \n- Keys"
		},
		{
			"name": "App's Health",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1cbca17-56bc-49c6-9a8a-e7c3277056b5",
						"exec": [
							"// pm.test('Status code is 200', ()=>{\r",
							"//     pm.response.to.have.status(200)\r",
							"// })\r",
							"// pm.test('Status is Ok', ()=>{\r",
							"//     pm.response.to.have.status(\"OK\")\r",
							"// })\r",
							"// pm.test('Response body returns OK', ()=>{\r",
							"//     console.log(pm.response.text())\r",
							"//     pm.expect(pm.response.text()).to.have.contain(\"OK\")\r",
							"// })"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f4c8846a-68b1-44ee-ba9f-5d51dae4fb8a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/health"
			},
			"response": [
				{
					"id": "93c04a3c-b191-4d2c-889c-425616004f71",
					"name": "App's Health",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/health"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
						},
						{
							"key": "Cross-Origin-Embedder-Policy",
							"value": "require-corp"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "2"
						},
						{
							"key": "ETag",
							"value": "W/\"2-nOO9QiTIwXgNtWtBJezz8kv3SLc\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 08 Apr 2023 16:40:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "OK"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{TOKEN}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "f05b66a2-f89b-4a22-99b2-3b69d551a401"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "4ec7d681-04dd-4d6b-9d13-5268e0957a69"
			}
		}
	],
	"variable": [
		{
			"key": "KEY",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJ0d29fZmEiLCJpYXQiOjE2ODQ4NDE1MDgsImV4cCI6MTY4NDg0NTEwOH0.hHTjUjnT4o3FhrtLP7S2D-_SCJw8RMEeX2UlGn-JMFo"
		},
		{
			"key": "TOKEN",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODUxNjAwLCJleHAiOjE2ODQ4NTUyMDB9.dmddFGNyAG95X2XgBRq4bW6HsKNDFJxBS5KGkKGikHo"
		},
		{
			"key": "2FAToken",
			"value": "000000"
		},
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "StartDate",
			"value": ""
		},
		{
			"key": "FutureDate",
			"value": ""
		},
		{
			"key": "KEY1",
			"value": ""
		},
		{
			"key": "TOKEN1",
			"value": ""
		},
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "ImputerTOKEN",
			"value": ""
		},
		{
			"key": "BillerTOKEN",
			"value": ""
		},
		{
			"key": "BillerKEY",
			"value": ""
		}
	]
}