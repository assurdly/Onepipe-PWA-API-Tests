{
	"info": {
		"_postman_id": "69083b10-ace3-4e08-9655-18c50cc6b4e7",
		"name": "Direct Debit (Internal - Clear) - QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Valid Login with 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
										"exec": [
											"var jsonData = pm.response.json();",
											"var Request = JSON.parse(pm.request.body.raw);",
											"",
											"",
											"if(jsonData.data.two_fa === true){",
											"    var Key = jsonData.data.key",
											"    pm.environment.set(\"KEY\", Key)",
											"    pm.collectionVariables.set(\"KEY\", Key)",
											"",
											"    pm.test(\"Status code is 200\", function(){",
											"        pm.response.to.have.status(200);",
											"    })",
											"    pm.test(\"Status code is OK\", function () {",
											"        pm.response.to.have.status(\"OK\");",
											"    });",
											"    pm.test(\"Status is Success\", function(){",
											"        pm.expect(jsonData.status).to.eql(\"success\")",
											"    })",
											"    pm.test(\"message is successs\", function(){",
											"        pm.expect(jsonData.message).to.eql(\"success\")",
											"    })  ",
											"    pm.test(\"Check for two fa\", function(){",
											"    pm.expect(jsonData.data.two_fa).to.eql(true)",
											"    })",
											"}",
											"else if (jsonData.data.user.two_fa === 0){",
											"    pm.test(\"2FA is false\", function(){",
											"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
											"    })",
											"    var Token = jsonData.data.token_data.token",
											"    pm.environment.set(\"TOKEN\", Token)",
											"    pm.collectionVariables.set(\"TOKEN\", Token)",
											"    pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"    })",
											"    pm.test(\"Status code is OK\", function () {",
											"        pm.response.to.have.status(\"OK\");",
											"    });",
											"",
											"        pm.test(\"Status code is OK\", function () {",
											"        pm.response.to.have.status(\"OK\");",
											"    });",
											"    ",
											"    pm.test(\"Status is Success\", function(){",
											"        pm.expect(jsonData.status).to.eql(\"success\")",
											"    })",
											"    pm.test(\"message is successs\", function(){",
											"        pm.expect(jsonData.message).to.eql(\"success\")",
											"    })",
											"    pm.test(\"two fa is false\", function(){",
											"        pm.expect(jsonData.data.user.two_fa).to.equal(0)",
											"    })",
											"    pm.test(\"Email is accurate\", function(){",
											"        pm.expect(jsonData.data.user.email).to.eql(Request.email)",
											"    })",
											"}",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
										"exec": [
											"pm.environment.set('base_url', 'https://dd-api.bits.dev.onepipe.io/v1')"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4d4b9dd0-3f38-46a8-a646-21638fb2301b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"dev@onepipe.io\",\n    \"password\": \"Password12@@\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						},
						{
							"name": "Login Invalid Credentials",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0d81b66f-375a-4e66-a503-35eacbd9d2d9",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Login successful\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Invalid login credentials\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1e8acc21-61c0-4174-95e4-4cedfdd30cfd",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "635d4f0d-ab51-4a29-9ae0-16dcbd83cbac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"dev@onepipe.io\",\n    \"password\": \"123456789\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						},
						{
							"name": "Login - Empty Email Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Login successful\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
											"})"
										],
										"type": "text/javascript",
										"id": "9497c906-622f-4520-8433-be5a221794d7"
									}
								}
							],
							"id": "057b0304-753f-457b-ab95-0ba480345e8a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"password\": \"1234567890\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						},
						{
							"name": "Login - Invalid Email Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
											"})"
										],
										"type": "text/javascript",
										"id": "b7497d06-276f-4433-8a1c-ff4305b05fe2"
									}
								}
							],
							"id": "08ece6ab-8173-4d68-8dfc-417654d61696",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"minnie\",\n    \"password\": \"1234567890\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						},
						{
							"name": "Login - Empty Password Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4ced01e-bf3d-48da-b603-2dc12d749c54",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Password cannot be empty\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c7c9edb3-523c-46d4-ac03-b515c307859d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e5579130-9b93-46e6-951c-d711796d9ac0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"dev@onepipe.io\",\n    \"password\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						},
						{
							"name": "Valid Login wihout 2FA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67133885-8ac6-457e-a6cf-4c22ce92a409",
										"exec": [
											"var jsonData = pm.response.json();",
											"if (jsonData.data.two_fa === 0){",
											"    var Token = jsonData.data.token_data.token",
											"    pm.environment.set(\"TOKEN\", Token)",
											"    pm.collectionVariables.set(\"TOKEN\", Token)",
											"    pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"    })",
											"    pm.test(\"Status code is OK\", function () {",
											"        pm.response.to.have.status(\"OK\");",
											"    });",
											"    pm.test(\"Status is Success\", function(){",
											"        pm.expect(jsonData.status).to.eql(\"success\")",
											"    })",
											"    pm.test(\"message is successs\", function(){",
											"        pm.expect(jsonData.message).to.eql(\"success\")",
											"    }) ",
											"}",
											"else{",
											"    pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"    })",
											"    pm.test(\"Status code is OK\", function () {",
											"        pm.response.to.have.status(\"OK\");",
											"    });",
											"    pm.test(\"Status is Success\", function(){",
											"        pm.expect(jsonData.status).to.eql(\"success\")",
											"    })",
											"    pm.test(\"message is successs\", function(){",
											"        pm.expect(jsonData.message).to.eql(\"success\")",
											"    })",
											"    pm.test(\"two fa is true\", function(){",
											"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
											"    })",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ef04fa6f-7147-4588-95f3-3d9750f88499",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e6191a89-3110-4bad-8f29-1e50e157ae62",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"minniez@mailinator.com\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login"
							},
							"response": []
						}
					],
					"id": "d99cab5c-158d-4982-a757-95528aae17cb"
				},
				{
					"name": "Login 2FA",
					"item": [
						{
							"name": "Login (2FA) - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Token = jsonData.data.token_data.token\r",
											"pm.environment.set(\"TOKEN\", Token)\r",
											"pm.collectionVariables.set(\"TOKEN\", Token)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is successs\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})  \r",
											""
										],
										"type": "text/javascript",
										"id": "5c027cb0-0ac0-4349-b3c5-caf04ee06944"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "981950e5-c493-4e77-9ba0-83d7fd0c0e9e"
									}
								}
							],
							"id": "8a94ce8d-f783-477c-b9b2-036112e94f34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						},
						{
							"name": "Login (2FA) - Valid (For Approval)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Token = jsonData.data.token_data.token\r",
											"pm.environment.set(\"TOKEN1\", Token)\r",
											"pm.collectionVariables.set(\"TOKEN1\", Token)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is successs\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})  \r",
											""
										],
										"type": "text/javascript",
										"id": "de1c85cf-50d5-4ca8-a565-02a7052c260e"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "647e2119-032a-4439-81ac-49ff5fecb334"
									}
								}
							],
							"id": "29ffa150-e847-4d2e-9c2e-c7689e3ae7a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"{{KEY1}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						},
						{
							"name": "Login (2FA) - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fb002b2b-4202-4484-827f-9754e74299f6",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid 2FA Token\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4182cd77-9fa0-48df-bb48-5c9b4f43d593",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"636964\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						},
						{
							"name": "Login (2FA) - Empty Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"token should not be empty\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "419bd9de-0135-4a64-aecc-0bd6730b8df5"
									}
								}
							],
							"id": "42f83262-c80e-4564-9997-14ff7b49c1e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"{{KEY}}\",\n    \"token\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						},
						{
							"name": "Login (2FA) - Empty Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"key should not be empty\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "d5c59a04-15cc-4f1b-9155-3ffed7b9e55e"
									}
								}
							],
							"id": "57d3e675-b3b9-4fe9-bbcc-2cea867281f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"\",\n    \"token\": \"123454\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						},
						{
							"name": "Login (2FA) - Invalid Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Key\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Key\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "3550d6ab-cd0e-45ba-abb0-402eb10d8619"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setNextRequest(\"Create Role\")"
										],
										"type": "text/javascript",
										"id": "ff52000b-2277-42de-b2f7-18a2078a991e"
									}
								}
							],
							"id": "8ccb578e-35d8-4aaf-8a27-1dd9493a3861",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE2ODE4MTkyOTgsImV4cCI6MTY4MTgyMjg5OH0.24icAcu_5IA5Q_ZaDD6YziIdVYZ4vg\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/auth/login/2fa"
							},
							"response": []
						}
					],
					"id": "17dc0d75-a9ae-43f4-94a4-621a14c0c137"
				}
			],
			"id": "77a7e359-1f05-4aa8-94e1-581f3cf9222a"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Fetch User (Me)",
					"item": [
						{
							"name": "Fetch User (Me)",
							"id": "ad569261-afec-4c98-91fe-99b6341d0857",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "216adaea-a14a-42d1-a171-421dca3c9558",
									"name": "Fetch User (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "ETag",
											"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 16:34:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch User (Me) - Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76cb529c-697e-4c62-ba69-95272782c1b6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "61224640-c68c-48d4-84c0-9ac9c3c5a099",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "10a74366-c7c8-48d6-ada3-919878b762e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "a48b0f0b-3b49-48d3-9eaf-47dfa6203b23",
									"name": "Fetch User (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "ETag",
											"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 16:34:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch User (Me) - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be05206c-4abc-4098-876d-57eba693ee0c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "eca14d26-9dff-47a3-a4fd-2cbf26db7c53",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4e51343a-63f9-4ecf-a506-ad98cee81703",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "552789a9-af91-4669-a3d0-be2ed5d3784a",
									"name": "Fetch User (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "ETag",
											"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Content-Encoding",
											"value": "gzip"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 16:34:04 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "229c65c8-8139-40ed-9e5a-bab28bbbb44e"
				},
				{
					"name": "Fetch Audit Trails (Me)",
					"item": [
						{
							"name": "Fetch Audit Trails (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "867de176-9f8b-4d64-96aa-9fd5f3b313e4",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the active status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f08cb92c-9479-4aba-b7cf-b8f4a407d26f",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5a4722e0-e269-455d-b227-2f5289145222",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/users/audit-trails"
							},
							"response": [
								{
									"id": "21a2cff1-d7a5-4629-b263-7008d5b24fe1",
									"name": "Fetch Audit Trails (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me/audit-trails"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1531"
										},
										{
											"key": "ETag",
											"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 04:20:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Audit Trails (Me) - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "80e7bd55-09df-4049-a964-2185931c055a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "252be19b-74fc-4d41-839d-4f09851f81ea",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e8133cd0-6883-482f-9185-6ae6b97179ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/audit-trails"
							},
							"response": [
								{
									"id": "c8a6dd4b-45b3-4817-9f85-0846f06bd60a",
									"name": "Fetch Audit Trails (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me/audit-trails"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1531"
										},
										{
											"key": "ETag",
											"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 04:20:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Audit Trails (Me) - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c7c53584-f409-40c6-9400-73dcf50aa55c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is Unauthorized\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95f8ca21-56e5-48c1-a04c-c76210e09620",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "fc4c672a-b54f-4fc8-a287-68cbf41235c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/audit-trails"
							},
							"response": [
								{
									"id": "6e386f16-5d7b-4181-849c-4d5e22b4e3bf",
									"name": "Fetch Audit Trails (Me)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/users/me/audit-trails"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1531"
										},
										{
											"key": "ETag",
											"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 04:20:17 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "b9ed9cc0-fbb6-42d3-abb6-f4d3b8a55016"
				},
				{
					"name": "Update User (Me)",
					"item": [
						{
							"name": "Update User (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1763d65-d145-4537-bb8f-b96bb3ed8e14",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Request = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the active status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
											"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
											"})\r",
											"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
											"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9bd79730-57ff-439b-8ffd-357a2ac1f839",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "a4fd4778-fbfd-4cbd-ab15-84a2bc5feac1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"Pascal\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "ddf537b2-7016-4297-87c3-a11c8f22975f",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me) - Empty First Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c64a617-ca7c-4a7f-8bf0-ff15a476d025",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Request = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is First name cannot be empty\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ced57bc8-6fa3-4475-af15-4139e6f284ba",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "c575d64c-0320-4e27-a71d-f6394a73b127",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \" \",\n    \"last_name\": \"Pascal\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "5a1a4434-a177-4663-bc4f-f6cac286e422",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me) - Empty Last Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "534cc772-36f0-40bc-b788-d0ccba23cd85",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Request = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is First name cannot be empty\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "deecb0b1-4064-4cfb-a140-aecbb8c097a0",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "ca772093-e990-4343-8d8b-4771478d1cd4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\",\n    \"last_name\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "bb450f93-7035-4bdb-a7da-28ad959c84f4",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me) -Update only First Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8fe124d6-f98e-48cb-89a0-10818000e182",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Request = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the active status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
											"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
											"})\r",
											"pm.test(\"Validate that the last name is returned\", function(){\r",
											"    pm.expect(jsonData.data.last_name).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2457373b-0a20-407b-a53a-79efb203fcf1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "57ac8f30-fa48-444d-a80d-edf3ae173c3e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "0ad24cd9-4601-4763-adb6-b41dfeea8fcb",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me) -Update only Last Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc215605-4d3c-4847-adf2-8ff607dd2247",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var Request = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the active status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate that the last name returned is accurate\", function(){\r",
											"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
											"})\r",
											"pm.test(\"Validate that the first name is returned\", function(){\r",
											"    pm.expect(jsonData.data.first_name).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "26fcbac3-7b9d-458b-a444-13b923eb1ee0",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8aa36197-3507-4c6b-8593-f00f04a39edb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_name\": \"Pascal2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "a04d8b31-576c-4922-8439-2457e04fe1ba",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me)- Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce72363c-fc1b-42c7-a8af-f16a9b57f6f8",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c45455f9-2462-44a5-ab92-bc0c61aef33d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8af247b7-566b-4a12-b7ae-3d1ab24e0a55",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "0d71d20f-9dc3-417a-b3aa-257a9cee7c7a",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update User (Me)- No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eda6d0e9-6491-42bd-94b8-4a6dbc8b8f47",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6c49559b-9089-487f-9e79-cc5a9eae3fd9",
										"exec": [
											"postman.setNextRequest(\"Create User - Valid\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a0891977-4d6f-404f-b76f-bd16b200257d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me"
							},
							"response": [
								{
									"id": "325dbb4c-438c-41ab-aa9a-f3581e104764",
									"name": "Update User (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/me"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "346"
										},
										{
											"key": "ETag",
											"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
										},
										{
											"key": "Date",
											"value": "Sun, 16 Apr 2023 10:58:03 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "ebd424cb-d9d9-4ddd-8923-b5bb5b4af3aa"
				},
				{
					"name": "Setup User's 2FA (Me)",
					"item": [
						{
							"name": "Setup User's 2FA (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2546d8e4-34ce-424c-a951-bc58d28c05c3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"\r",
											"pm.test(\"Validate the backup codes are returned\", function(){\r",
											"    pm.expect(jsonData.data.backup_codes).to.not.be.empty\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2c97e6b5-e37e-40fa-b52b-3c5a2b329aab",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "b9a01d84-179c-435f-a50a-295ae025315d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/users/me/2fa/setup"
							},
							"response": []
						},
						{
							"name": "Setup User's 2FA (Me) - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfd8a04d-1c2f-495e-8c80-dfbd2bf68294",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c5478cd1-90ee-46bd-a438-3eb37dcd001a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e1ee3b4d-2e52-4d71-9bd8-5934231864c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me/2fa/setup"
							},
							"response": []
						},
						{
							"name": "Setup User's 2FA (Me) -Invalid Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68b54c5c-cdfa-41fa-8ace-6dafe973f74c",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fedad155-b91a-41e3-946f-d19a47ef297e",
										"exec": [
											"postman.setNextRequest(\"Create User - Valid\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b66ae95d-27a6-41e3-b046-b1b973a654ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/me/2fa/setup"
							},
							"response": []
						}
					],
					"id": "f5288e73-7422-43bb-ae4b-1535112c9be9"
				},
				{
					"name": "Activate/Deactivate User's 2FA (Me)",
					"item": [
						{
							"name": "Deactivate - Activate/Deactivate User's 2FA (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c571015f-c9e4-4a8c-9a43-74b7be82a2d1",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ea5fde35-d673-4bb8-9dce-d492cfc30ef6",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9ddecf91-caa9-486b-bb05-6b1b2b9e142f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/me/2fa/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"me",
										"2fa",
										":type"
									],
									"variable": [
										{
											"id": "453edcae-1672-4136-9069-c6e890d12db0",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": [
								{
									"id": "b43ba97f-fb22-4aa0-aded-24fb67f617b6",
									"name": "Activate/Deactivate User's 2FA (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"589802\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/me/2fa/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 17:36:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate - Activate/Deactivate User's 2FA (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be99fea4-da4f-4c36-8026-87840d047ca7",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4ec26e6c-1c70-4f4b-89dd-2c492d56d1ab",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "c08ecf3c-267c-4d8c-9b2e-61d6e98b07c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/me/2fa/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"me",
										"2fa",
										":type"
									],
									"variable": [
										{
											"id": "2221e096-e938-4fc5-98e2-c27bbfedaf4a",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "c254e414-fa87-4308-9dbe-6db6d67547e1",
									"name": "Activate/Deactivate User's 2FA (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"589802\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/me/2fa/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 17:36:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Invalid or Expired Auth - Activate/Deactivate User's 2FA (Me)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "49bfcbce-331b-476b-8946-f07d6427a2cf",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d6945e7b-3d9c-45bb-8740-9b5bc2414b21",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f055b86f-d2ba-4223-9106-9756b2fc3663",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODQxNTEzLCJleHAiOjE2ODQ4NDUxMTN9.vXVMgfX2eoHvKvldVkICU_DbhqDaNhUx0k3bCaxN-fQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/me/2fa/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"me",
										"2fa",
										":type"
									],
									"variable": [
										{
											"id": "442b49a9-6f64-43eb-8ec4-06ba8c2baa2a",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "25991dd7-0dd4-4b00-a439-be4b4211d27f",
									"name": "Activate/Deactivate User's 2FA (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"589802\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/me/2fa/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 17:36:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "No Auth - Activate/Deactivate User's 2FA (Me) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2d99a24-69f8-4b9a-ac35-91dba0728b58",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c6b625d2-6df6-4a9d-bbdd-dc7ea47671ff",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4f01ef95-4a66-491f-98fa-762687317ef6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/me/2fa/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"me",
										"2fa",
										":type"
									],
									"variable": [
										{
											"id": "6bc22444-84f7-4f9a-a0aa-9f698ce7b2af",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "fce59b01-c431-4eb3-a790-9b577f419c6c",
									"name": "Activate/Deactivate User's 2FA (Me)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"589802\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/me/2fa/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 17:36:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						}
					],
					"id": "d9b94acc-c3cc-460a-93e5-56df6f5d1fcb"
				},
				{
					"name": "Create User",
					"item": [
						{
							"name": "Create User - Valid",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3c3c1273-6ef8-40d4-84fe-dde12b6e29fe",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "af927ba2-c376-4240-940c-00d6d4cb46b1",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.environment.set(\"UserID\", jsonData.data.id)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Invite sent successfully\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e73b0bc0-1e1e-40bc-8711-032a8fa6217e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"role_id\": 4,\n    \"token\": \"{{2FAToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						},
						{
							"name": "Create User - Empty email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "517e76c2-e5ce-4450-9771-3721c5d23417"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "09841664-17d6-4b3c-8df2-a87d7de3512a"
									}
								}
							],
							"id": "1e0754b8-0027-4951-a340-dd1d7abccc52",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						},
						{
							"name": "Create User - Empty Role Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "dc8c9523-9da5-493d-9c26-3765cf17d835"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "8e444341-de45-4740-971e-faa4ce5c38a1"
									}
								}
							],
							"id": "2e2ff430-b71c-43da-b236-178458bf5614",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": \"\",\n    \"token\": \"{{2FAToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						},
						{
							"name": "Create User - No 2FA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "69fbf2d9-05af-4fd6-8590-093c9d08e4a6"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is '2fa is required to perform the operation'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ea6238b3-7f7f-4260-9dab-b0d1b51b1fd3"
									}
								}
							],
							"id": "042f5a74-742d-4a3b-98e7-f243552582ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": null\n\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						},
						{
							"name": "Create User - Invalid 2FA",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "4ef23212-f8bf-4d44-b5b7-d7cfeddd1974"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "7f4e78df-1028-426a-9a4c-8219a9cae8ad"
									}
								}
							],
							"id": "d75ee35e-8f4b-45fa-b3b8-b490810ac878",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"908900\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						},
						{
							"name": "Create User - No Authorization",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "40e6efeb-4452-4fe5-bf08-4a4e6319ace1"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invite sent Unauthorized\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "3e3348e9-d247-4b9a-85e4-bd74c165c274"
									}
								}
							],
							"id": "ac4023cd-da32-489b-85a2-f44f19c27253",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users"
							},
							"response": []
						}
					],
					"id": "0543883e-f24d-48ba-a896-f99ca3cc0ccb"
				},
				{
					"name": "Get Users",
					"item": [
						{
							"name": "Get Users -  valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"id": "453d88cd-8dc4-46bc-a967-435262c1221e"
									}
								}
							],
							"id": "17af730f-5a43-40a7-8652-98006f1332df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "5",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "email",
											"value": "akinsanyaadeoluwa21@gmail.com",
											"disabled": true
										},
										{
											"key": "role_id",
											"value": "1",
											"disabled": true
										},
										{
											"key": "search_fields",
											"value": "akin",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Users - No authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "478eec89-218b-47e4-98ea-39a4c003b9c3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "091d0352-bd2f-4f86-b40d-92200de03fdd",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "401e5226-aac1-413c-b6d6-1be2d3e08cfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "limit",
											"value": "5",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "email",
											"value": "akinsanyaadeoluwa21@gmail.com",
											"disabled": true
										},
										{
											"key": "role_id",
											"value": "1",
											"disabled": true
										},
										{
											"key": "search_fields",
											"value": "akin",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "c35f6190-3720-499a-bc52-a1761dc1bd92"
				},
				{
					"name": "Get User",
					"item": [
						{
							"name": "Get User - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ce5d83d6-8033-4383-a43f-99471bd87f2a",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "106b09db-106b-4852-95cc-a5705325f87d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d881580e-0dc2-450c-9826-2901a5d26c96",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/:user_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "{{UserID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User - Invalid User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fc13032e-33b4-4e81-abf9-c5547a1f7563",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'user not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2f24ea19-7f0a-4aef-98ad-0eaf3e152c63",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d28a9b55-3a98-4d59-bf8e-25bb0a77cf33",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/:user_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "99c93c84-f4e0-4b31-b302-e381327d3210",
											"key": "user_id",
											"value": "aaa"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "214ed5f8-9de0-4cbf-a328-96e739d8c3a6",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "609b178d-dff0-45fb-9d3f-fb03846ee53d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6ca7c3d9-a2cf-4587-9aa4-0d9514844de4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:user_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "40d82ba9-313e-4741-9490-15e257fb58b3",
											"key": "user_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User - Non Existent user Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cef9983d-a8c5-410f-8082-b8f24239962f",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Role not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2cd2128f-c5d1-423c-86be-f88f459dbbad",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3fd84d67-651f-4e44-adf0-175943e972e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:user_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id"
									],
									"variable": [
										{
											"id": "e4b5ea3b-1939-42c2-b8b6-9ee059d3c520",
											"key": "user_id",
											"value": "10000"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "327a89da-edd7-4223-922c-815158341750"
				},
				{
					"name": "Update User",
					"item": [
						{
							"name": "Update user role",
							"item": [
								{
									"name": "Update user role - empty field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6c63ef11-a27a-47aa-a177-d10a0b4c2e48",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "03209fc0-d735-4810-886c-264ffab1f8b7",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "cb2ab202-7d70-47c6-b2da-a83b2db2eaef",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\",\n    \"role_id\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "3ce629eb-3727-4f58-813f-0fb8a94caccf",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update user role - Non Existing Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "66dffa24-12d1-4d29-a724-a42ca9e996d2"
											}
										}
									],
									"id": "3da11e43-2e1e-4993-bb73-924fe06ec11f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \n    \"role_id\": 2000\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "8203c5ed-1aa2-4501-b00f-669e27ba2792",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update user role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2795b44-39be-434b-b1df-06e32433d8b6",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0ae5a855-bd71-4000-8eb5-1404f767029c",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "818a6d13-ac75-408f-ba69-11ff261813c8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n   \n    \"role_id\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "d26c39c3-85e0-4935-ab2a-26cf9498cc57",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "cf07e4a5-bc5c-43f4-86c2-689fa51029be"
						},
						{
							"name": "Deactivate/Activate User",
							"item": [
								{
									"name": "Deactivate User - Empty user ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e45e645b-99d4-4de3-bded-e39414e73172",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "51cbfe4f-2430-4b13-8099-8b56a1e8c095",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "18397738-42a7-4370-b21e-5bb090f74288",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"inactive\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d85b3471-1683-4c57-982f-f0a17fc1d666",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"User is Inactive'\", function(){\r",
													"    pm.expect(jsonData.data.status).to.eql(\"inactive\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "93d4d8ec-1d55-4570-bca4-25c0d7b37aca",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "32807065-a629-4166-8388-e02f65f85ae2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"inactive\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "7eb03eae-5c98-4c24-b7be-9134883ec2d1",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate User - an Inactive user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c02b0f51-75e1-462a-ac7d-3aac0a9cd215",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot deactivate an inactive user'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is inactive\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "28427c90-309e-4697-8433-a6e3984a9e10",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1eb86b7c-e227-415c-8f5a-e0f8fa753cc6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"inactive\",\n    \"role_id\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "aec240f5-bd7f-4338-8709-f8672018b97b",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate User - Pending User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be09b528-0bd3-4231-a573-d1178dd1868f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is pending\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2be71808-eec2-47b3-bf62-8e74e234e8cb",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "314f0d07-fc9a-4f8b-bb0d-4566ae7e4eef",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"inactive\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "d73ac608-512b-4f9b-bfdf-42fd98694556",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate User - Pending User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "520926f8-4ae3-4d3d-8a82-6da83fda77b7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is pending\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5cfd8d8f-6fd1-4893-b4dc-1e5f9595700d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "aadb795a-841c-4fe9-81b5-7f23204fb516",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "f0032c6e-f6ab-4a22-9dc2-ea022f69ffd3",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ce215e7-bdc7-4ed6-8114-0daf1cf55633",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"User is active'\", function(){\r",
													"    pm.expect(jsonData.data.status).to.eql(\"active\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4a0ce47b-368c-4e6f-b19a-b6442fbfc956",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "05c10d7a-8271-4a83-afdb-7d6fd88ae50d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "4fca6e5f-e4ab-482d-9e61-607f9a41c567",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate User - Activate already active user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b3a177ae-c073-4c1f-8d9c-926831bc426f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot activate an active user'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is active\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b98bf9dc-6e09-4514-a47b-10f02bbbe52e",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "35e943f8-6012-4095-8190-eb378cc89c49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "7e7a2532-4c53-4740-8423-240e18c0aa7d",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "8c8439e5-56cf-4c56-b702-4a7bbc6382a6"
						}
					],
					"id": "b6e6ca36-7b56-47e6-b0dc-e38a3df4892a"
				},
				{
					"name": "Change User Password",
					"item": [
						{
							"name": "Change User Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Password Success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "e22bee38-92f2-499b-91c5-ba2e662a11f2"
									}
								}
							],
							"id": "aee6abde-6fe0-4bc1-9aa7-6e9aeaa4a272",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@\",\n    \"confirm_new_password\": \"Password12@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Change Password again",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Password Success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "9e8915c7-39c9-4bc5-bf70-76343712cde7"
									}
								}
							],
							"id": "f5527f7b-b0f4-434e-ba06-e3e89ac1eeec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password- Current = New Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Old Password the same as New Password'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Old password used again. Enter a new password\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "9ed52803-e320-4036-9976-a400b710e553"
									}
								}
							],
							"id": "a587cfac-0216-4399-977b-d58920f023f5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Empty current password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'current_password should not be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Current password cannot be empty\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "e242e4dc-8631-489d-b548-3e14cb79c36c"
									}
								}
							],
							"id": "068371b0-3344-412c-9e5f-87924bbce3cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"\",\n    \"new_password\": \"Tester@11.\",\n    \"confirm_new_password\": \"Tester@11.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Password complexity",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'New password is too weak.'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"New password is too weak.\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "2cafc6cd-d3d0-4428-acfc-13ce7288d431"
									}
								}
							],
							"id": "1c9f6cc6-998d-4a32-b59e-e0e63044b226",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password\",\n    \"confirm_new_password\": \"Password\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Empty New password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "e0044c80-5bb4-40ee-bbba-72fdae8a1fc2"
									}
								}
							],
							"id": "2d269064-891d-4d91-83d5-78c943695be7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"\",\n    \"confirm_new_password\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Empty Confirm Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'confirm_new_password must be longer than or equal to 8 characters'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"confirm_new_password must be longer than or equal to 8 characters\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ec23a870-2b3c-444c-bf62-c25068321226"
									}
								}
							],
							"id": "1d23dd31-49ba-4403-bd85-37ba2580d182",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						},
						{
							"name": "Change User Password - Password Mis-match Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Password Mismatch'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Password Mismatch\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "f5dd0c32-0871-4287-843a-aae98b8b4951"
									}
								}
							],
							"id": "8ce5d3e9-73b7-44dd-b79e-361b39bde687",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"Password@12\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/passwords"
							},
							"response": []
						}
					],
					"id": "63705b0b-929e-48f6-af06-cab4dc3ccb0f"
				},
				{
					"name": "Resend User Invite",
					"item": [
						{
							"name": "Resend User Invite - Pending and Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fcade068-dca6-4769-94b3-8299d80d58c7",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Invite sent successfully returned\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4b7ffa83-2223-4004-a6a7-9990e13c2b1a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "db518fdf-e6a9-4323-8ef7-64ba85897906",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:user_id/resend-invite",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id",
										"resend-invite"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend User Invite - Active",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Can only resend invite to pending users'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Can only resend invite to pending users\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "df99abfb-c8e0-4f2f-b975-783efa1faa61"
									}
								}
							],
							"id": "d4fa21c7-7115-402a-8773-dc2275d4d7f0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										":user_id",
										"resend-invite"
									],
									"variable": [
										{
											"id": "04d969be-3af4-4c4f-8a5e-64a60fdfe95f",
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Resend User Invite - Invalid User Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'User not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "d02e1aa8-d195-4826-b481-e90fe4bb865d"
									}
								}
							],
							"id": "ecb571b1-7f7e-4492-bfc7-a89adfe1b40e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										":user_id",
										"resend-invite"
									],
									"variable": [
										{
											"id": "86c3e6a4-cd1d-433e-9674-c4cb4689a2bb",
											"key": "user_id",
											"value": "aa"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "225209e0-459e-40d7-8436-eab46f436bc5"
				},
				{
					"name": "Fetch User's Stats",
					"item": [
						{
							"name": "Fetch User's Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ee6981a2-cee4-4849-8e1d-61581f71d5a3"
									}
								}
							],
							"id": "3e10c7a1-4b0a-4646-832e-448d48078f94",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/stats"
							},
							"response": []
						},
						{
							"name": "Fetch User's Stats - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "8bc6a5b6-d542-4eeb-bedf-560ea89fa590"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "ae249165-0e53-4b90-9885-7ab948adbf9a"
									}
								}
							],
							"id": "5e1bf1d9-3c31-4775-992b-49ab7ee7efec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url_v1}}/users/stats"
							},
							"response": []
						}
					],
					"id": "42eef454-7f56-4502-ba62-414ee92243f5"
				},
				{
					"name": "Password Reset",
					"item": [
						{
							"name": "Password Reset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Password reset link successfully sent'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Password reset link successfully sent, please check your email\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "9ee2a36d-c66d-46f5-8e0c-68d3b2c75cc3"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"id": "2059b51b-3691-40f5-b3b2-a5e200366055"
									}
								}
							],
							"id": "43baa581-5453-45cf-9fb0-b8dcea28dc7d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"zeez@mailinator.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/password-reset"
							},
							"response": [
								{
									"id": "70f73a72-8cbb-4966-a5b3-f902458b4f2a",
									"name": "Password Reset",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:54:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Password Reset - Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "44e581d0-2f28-450c-b5a3-d26632c554b7"
									}
								}
							],
							"id": "a480747a-5321-4f1f-8d0d-120a65252965",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"zeez@mailinator\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/password-reset"
							},
							"response": [
								{
									"id": "2884eded-52a6-4e77-bcc6-a7c252405d0c",
									"name": "Password Reset",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:54:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Password Reset - Empty Email Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "8a9def5a-4354-4170-97b7-39f5e6585ea9"
									}
								}
							],
							"id": "42e74de7-4f79-40fc-b549-fd60554fbe77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \" \"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/password-reset"
							},
							"response": [
								{
									"id": "9923b161-cecf-4bff-8d22-e6345f7ebbc0",
									"name": "Password Reset",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:54:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Password Reset - Non-existing Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'User does not exists or inactive'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"User does not exists or inactive\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "0c5f08c2-4139-412d-975e-88659db9916f"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setNextRequest('Create Mandate')"
										],
										"type": "text/javascript",
										"id": "6b5872e6-4380-4ab5-8caa-dfeb3ee699e6"
									}
								}
							],
							"id": "a1ca75d8-2d18-4474-bfa4-47356f489540",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"zeez@getnada.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/users/password-reset"
							},
							"response": [
								{
									"id": "929c4b14-e0fd-4242-b953-61aa1a62f53a",
									"name": "Password Reset",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:54:34 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						}
					],
					"id": "58aa6d13-84e8-43f7-bc52-3f784ce1dbf7"
				},
				{
					"name": "Reset Password",
					"item": [
						{
							"name": "Reset Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Password reset successful'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Password reset successful\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "c49c958a-e177-4854-a0f4-03a35ddda6e3"
									}
								}
							],
							"id": "f2c84b2b-8f0c-4086-ba80-33092def39ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/reset-password/:token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"reset-password",
										":token"
									],
									"variable": [
										{
											"id": "32195931-0cce-47c0-a4f6-1ad0572ced2a",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
										}
									]
								}
							},
							"response": [
								{
									"id": "6d49cb8f-201f-4f95-93b2-0573cad83360",
									"name": "Reset Password",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Tue, 16 May 2023 15:44:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Reset Password - Empty New Password Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "70600adb-1458-43fd-a252-208b880249cd"
									}
								}
							],
							"id": "f3329054-3671-421d-b9c0-ff3ae307623a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"\",\n    \"confirm_password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/reset-password/:token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"reset-password",
										":token"
									],
									"variable": [
										{
											"id": "e00a891d-18ed-42dc-b81c-8b450d8df02b",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
										}
									]
								}
							},
							"response": [
								{
									"id": "42a6e02b-5e4c-4b5e-8dfa-fe3923244684",
									"name": "Reset Password",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Tue, 16 May 2023 15:44:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Reset Password - Password does not match complexity rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'New password is too weak'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"New password is too weak\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ff4e8e47-08aa-457c-8c95-5a1bd16588dc"
									}
								}
							],
							"id": "51c0c31e-af43-4caa-9929-49a3b9ce1d53",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"Passwor\",\n    \"confirm_password\": \"Passwor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/reset-password/:token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"reset-password",
										":token"
									],
									"variable": [
										{
											"id": "aab615eb-8ce8-41b3-957e-44e0d91527d9",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
										}
									]
								}
							},
							"response": [
								{
									"id": "07d2771b-7d5f-4a91-acc1-251b9a1f74d5",
									"name": "Reset Password",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Tue, 16 May 2023 15:44:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Reset Password - mismatched New Password And Confirm Password Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Password Mismatch'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Password Mismatch\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "1fdb6b10-f1ae-4ede-b50f-6507036483d4"
									}
								}
							],
							"id": "f02738c6-2e81-4be8-9bed-c8c13f8f35f3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/reset-password/:token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"reset-password",
										":token"
									],
									"variable": [
										{
											"id": "4bfdc19d-315e-465a-8d6b-647ab60e2aee",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
										}
									]
								}
							},
							"response": [
								{
									"id": "f1616ddc-7b03-41a6-b55c-727d5d60dab2",
									"name": "Reset Password",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Tue, 16 May 2023 15:44:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Reset Password - Empty New Password Field Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'confirm_password must be longer than or equal to 8 characters'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"confirm_password must be longer than or equal to 8 characters\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "5dc953b5-0aab-4519-9786-613950ba9e34"
									}
								}
							],
							"id": "78da798f-a85f-4979-a0fc-c3e7662e3edc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/reset-password/:token",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										"reset-password",
										":token"
									],
									"variable": [
										{
											"id": "d4c3dd53-91b0-4641-9458-334877776148",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
										}
									]
								}
							},
							"response": [
								{
									"id": "c40d62d4-a6f8-4fa3-99bd-8c5fb18a9889",
									"name": "Reset Password",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Tue, 16 May 2023 15:44:48 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						}
					],
					"id": "5339c53f-7473-4bc1-86e6-4f4cca6c3137"
				},
				{
					"name": "Accept Invite",
					"item": [
						{
							"name": "Accept User Invite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "9fea0004-9dff-43f1-bbce-5ab06d47f9e8"
									}
								}
							],
							"id": "02b8a1ea-c45f-41c2-994d-8873533dda9c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "a07808c6-413e-4147-b3fb-99c266cbeb9a",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "2967ee46-a5e5-4ed2-bcfb-bc53a7e650e4",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- Invalid or wrong password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "8436f913-ca27-469a-8274-a1bb139a50c1"
									}
								}
							],
							"id": "67815353-26ae-4d63-bdcf-062de122f8fb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "c7ad5b53-a06c-4091-a9a4-abfb2c1f3de0",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "114a6382-e4a3-406f-a6c8-0b90f339ebfa",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "4e4da7e1-e4d4-430d-8a92-ee5a1568f83b"
									}
								}
							],
							"id": "be321c40-1d2c-4b77-849b-706ee08ff65a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "0e39b547-91fd-4455-8602-17d9abc35d07",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "a7adb38b-1789-47ef-b666-b659cf382f6f",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- Empty First Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "61ec2d18-d093-4588-af93-8535b6a91725"
									}
								}
							],
							"id": "01d3a28c-a571-41aa-9b19-45fa3ec315a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "91dee3b4-625e-4d17-8d32-8eedf1db0ab9",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "e578fc6e-3734-41c4-afb4-f7e3e542a492",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- Empty Last Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "569e791d-36b7-4e9e-8ec0-1189065d37bb"
									}
								}
							],
							"id": "32e9a0a8-62fb-452b-b3f0-bde33629db63",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "5b5910a6-c147-460e-886a-f9d5c9f3fa8a",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "4771c16a-589e-44a3-a8bc-818d80680592",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- Empty Password field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "aec4c203-7e79-4ecd-a10b-5592604dd50f"
									}
								}
							],
							"id": "481de9b3-cadf-4cee-b4e7-f1deb06843ce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "e6382ce9-d3df-4bd9-be51-d150d979c121",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "9513f555-e24c-4571-9f65-e8eaef1d9ffc",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						},
						{
							"name": "Accept User Invite- Doesn't meet Password Complexity rule",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Bad request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"\r",
											"pm.test(\"error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "6fe7e58e-7b99-4ac6-a2dd-2b36a3b79251"
									}
								}
							],
							"id": "dd939651-1954-4687-bb27-1d80aab4b0a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url_v1}}/users/accept-invite/:token",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"users",
										"accept-invite",
										":token"
									],
									"variable": [
										{
											"id": "5685a7b3-f927-45e2-81cf-474bb0a4d2a4",
											"key": "token",
											"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
										}
									]
								}
							},
							"response": [
								{
									"id": "c4f9397c-84c8-47cc-ab0d-234c50602790",
									"name": "Accept User Invite",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"password\": \"12345678\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "48"
										},
										{
											"key": "ETag",
											"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Thu, 13 Apr 2023 00:25:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
								}
							]
						}
					],
					"id": "c23cff80-c9fd-45e6-a0f8-4543b0339cf8"
				},
				{
					"name": "Get User's Mandates",
					"id": "668c55ee-c90d-4153-8124-1345acd239bb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{TOKEN}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":user_id",
								"mandates"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "page",
									"value": "1"
								}
							],
							"variable": [
								{
									"id": "139c2219-0059-415c-a7d0-4f4db0ef56f3",
									"key": "user_id",
									"value": "{{UserID}}"
								}
							]
						}
					},
					"response": [
						{
							"id": "421b4054-50f5-4f1f-8626-22e280cd4e2c",
							"name": "Get User's Mandates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id",
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "user_id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "3847"
								},
								{
									"key": "ETag",
									"value": "W/\"f07-yRcWIhe96/5qwNoRB2DKqBCO7R0\""
								},
								{
									"key": "Date",
									"value": "Fri, 12 May 2023 09:10:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 7,\n                \"bank_id\": 52,\n                \"account_number\": 1780004070,\n                \"account_name\": \"vee Test\",\n                \"reference_number\": null,\n                \"frequency\": 1,\n                \"bvn\": \"33333333333\",\n                \"session_id\": \"999999230330145645170092220580\",\n                \"phone_number\": \"08139354433\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-05-10T00:00:00.000Z\",\n                \"end_date\": \"2023-05-15T00:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"workflow_status\": null,\n                \"debit_type\": \"all\",\n                \"entity\": \"user\",\n                \"created_on\": \"2023-05-11 02:20:53\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-05-11 07:58:41\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"5\"\n        }\n    }\n}"
						}
					]
				}
			],
			"id": "f7be05fb-2c6e-4def-bb5a-b24b6ce9b7fd"
		},
		{
			"name": "Mandates",
			"item": [
				{
					"name": "Create Mandate",
					"item": [
						{
							"name": "Create Mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2538df5d-0eba-46a7-9525-c4ad6d93c0ac",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"pm.environment.set(\"mandate_id\", jsonData.data.id)\r",
											"\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Mandate created successfully'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")\r",
											"})\r",
											"pm.test(\"Validate that an accurate account number is returned\", function(){\r",
											"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)\r",
											"})\r",
											"pm.test(\"Validate that an accurate bank ID is returned\", function(){\r",
											"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)\r",
											"})\r",
											"pm.test(\"Validate that an accurate email is returned\", function(){\r",
											"    pm.expect(jsonData.data.email).to.contain(RequestData.email)\r",
											"})\r",
											"pm.test(\"Validate that an accurate amount is returned\", function(){\r",
											"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)\r",
											"})\r",
											"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){\r",
											"    pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a7e8be96-5bcc-4020-a36b-e46ab63cd8b3",
										"exec": [
											"var StartDate = new Date()\r",
											"StartDate.setDate(StartDate.getDate() + 1)\r",
											"var StartDate = new Date().toISOString()\r",
											"\r",
											"pm.collectionVariables.set(\"StartDate\", StartDate)\r",
											"\r",
											"// ADD 7days to the current date\r",
											"var FutureDate = new Date()\r",
											"FutureDate.setDate(FutureDate.getDate() + 7)\r",
											"FutureDate = FutureDate.toISOString()\r",
											"pm.collectionVariables.set(\"FutureDate\", FutureDate)\r",
											"console.log(StartDate, FutureDate)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a49b2af1-f0cd-4342-8cd5-a0f44f0296be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"226500664\",\n    \"phone_number\": \"09055755671\",\n    \"debit_type\": \"all\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 57,\n    \"email\": \"l.adeosun.la@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"payment_start_date\": \"{{StartDate}}\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 2,\n    \"file_base64\": \"\",\n    \"file_extension\": \"pdf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": [
								{
									"id": "8b34e1ee-b795-452a-a92e-292c94551944",
									"name": "Create Mandate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2023-04-27\",\n    \"end_date\": \"2023-04-27\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/mandates"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3686"
										},
										{
											"key": "ETag",
											"value": "W/\"e66-lOeRK2GWPYFFwufb4Gf1DrADbHE\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Mandate created successfully\",\n    \"data\": {\n        \"account_number\": 112345678,\n        \"bank_id\": 52,\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"id\": 1,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Mandate - e-mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2538df5d-0eba-46a7-9525-c4ad6d93c0ac",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"pm.environment.set(\"mandate_id\", jsonData.data.id)\r",
											"\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Mandate created successfully'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")\r",
											"})\r",
											"pm.test(\"Validate that an accurate account number is returned\", function(){\r",
											"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)\r",
											"})\r",
											"pm.test(\"Validate that an accurate bank ID is returned\", function(){\r",
											"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)\r",
											"})\r",
											"pm.test(\"Validate that an accurate email is returned\", function(){\r",
											"    pm.expect(jsonData.data.email).to.contain(RequestData.email)\r",
											"})\r",
											"pm.test(\"Validate that an accurate amount is returned\", function(){\r",
											"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)\r",
											"})\r",
											"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){\r",
											"    pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a7e8be96-5bcc-4020-a36b-e46ab63cd8b3",
										"exec": [
											"var StartDate = new Date().toISOString()\r",
											"pm.collectionVariables.set(\"StartDate\", StartDate)\r",
											"\r",
											"// ADD 7days to the current date\r",
											"var FutureDate = new Date()\r",
											"FutureDate.setDate(FutureDate.getDate() + 7)\r",
											"FutureDate = FutureDate.toISOString()\r",
											"pm.collectionVariables.set(\"FutureDate\", FutureDate)\r",
											"console.log(StartDate, FutureDate)"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "07e18255-03a7-4266-9ac8-93eff69845e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"6019166011\",\n    \"phone_number\": \"08183888690\",\n    \"debit_type\": \"all\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 15,\n    \"email\": \"adelebukky150@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"payment_start_date\": \"{{StartDate}}\",\n    \"type\": \"emandate\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ojodu Berger\",\n    \"amount\": 1000,\n    \"beneficiary_id\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": [
								{
									"id": "331d3ebc-7ece-4e71-9530-b8b73d9eeeb8",
									"name": "Create Mandate",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2023-04-27\",\n    \"end_date\": \"2023-04-27\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/mandates"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3686"
										},
										{
											"key": "ETag",
											"value": "W/\"e66-lOeRK2GWPYFFwufb4Gf1DrADbHE\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Mandate created successfully\",\n    \"data\": {\n        \"account_number\": 112345678,\n        \"bank_id\": 52,\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"id\": 1,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Mandate -  Phone number Less 11digits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "717bcf14-cea2-4264-bd90-81a8eb46066c",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "250b1134-58b4-4f0a-8f58-3a22befbc0b2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "a301e12a-c796-4cac-8a36-c34d05b1289f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0112345678\",\n    \"phone_number\": \"0813935\",\n    \"debit_type\": \"all\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2023-05-29\",\n    \"end_date\": \"2023-05-30\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid Account Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c0b6cd3a-6b2a-481b-ad30-fea1cfe80d72",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"account_number must be longer than or equal to 5 characters\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0963d9ea-3ffc-4388-95d2-e124e9f9141e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8fec6962-181c-4aea-9262-7232125d7db9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0112\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"all\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2023-05-29\",\n    \"end_date\": \"2023-05-30\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92db3e0d-dc64-4340-af92-2090a7c759ed",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"account_number must be longer than or equal to 5 characters\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "60a0dc8e-beea-411a-a18f-86203ea8b526",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "dc38e709-47f5-49f2-bc17-08563ec1b754",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"all\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2023-05-29\",\n    \"end_date\": \"2023-05-30\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty Phone number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee1f14a3-8830-445f-b939-8330e3d6021c",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df161a6b-0bd7-4751-a271-2387e58a7fbb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "42adc92b-49e5-4a19-b4e5-64eb587b55a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"\",\n    \"debit_type\": \"all\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty debit_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e9f1697d-5ed0-498a-af89-702d546426e1",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"debit_type must be one of the following values: all, partial\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c54c43ff-9462-46f1-9147-171b56e98158",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9c2226eb-8d94-4def-b558-218fd2ebe501",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid Debit_type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7d6300f-bb9d-4ad4-b369-5fc2b749b4ea",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"debit_type must be one of the following values: all, partial\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "020cbdb0-3111-412a-bb1c-1d2f3b8ebebd",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "18ebd6c5-cb41-4d42-af14-faecd9269f16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"Set\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty Frequency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bebf5598-f547-49e4-af72-3abccd4ac475",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contain(\"frequency must be one of the following\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb7904c0-73e2-4114-89f3-d11beb2e32e2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf7d930a-68ba-43d2-85cc-eea4eb7dac93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": null,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid Frequency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d85cde40-8b4c-401e-8fbb-4b7c229b10c5",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contain(\"frequency must be one of the following\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0f737e40-cb9d-46fb-8761-45798cd88d42",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "99a01077-4db1-4aed-92f9-aa9358b2d5ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1.6,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty bank_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "235fc33e-0a01-45ef-be72-3c519d00ddee",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"bank_id must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6bc68669-04a5-486e-a8fd-9af5fdfaa0c5",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "430596ae-1b92-4797-b89a-3ebd4d254004",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": null,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid bank_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e55ff42-1877-42f0-b5f2-949b8524768e",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"bank_id must be an integer number\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "75bc04df-d908-4e13-bb82-b9db653b56f3",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6e6978bd-7037-4283-a4e9-c49efab66262",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 5.2,\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid email validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "668999b2-abc0-491f-8759-e8d1b16cb203",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0bbba6af-77ff-4acd-973a-01cf732e6428",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9659ae45-0643-43cd-99cb-3bea577c63ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"adeolu@\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d96414f-53a7-4b8c-93da-e92c118b09fd",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d7137516-2b9b-482f-ac36-56d04e183b46",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f7fa3487-b97a-4dc3-935b-bece12face72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Start Date in the past",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "39c1914e-d2c4-45cb-9cdf-8726dc0c6c2f",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"var slicedDate = Date().slice(0, 15)\r",
											"console.log(slicedDate)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"minimal allowed date for start_date is \", \" GMT+0000 (Coordinated Universal Time)\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "578d23c8-1146-4437-9dbf-109cf59c429e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d824c1f0-f059-4210-9bed-69124d654806",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"2023-04-29\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty Start Date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cf56678e-9dce-4fe0-b553-f6447db7b1e9",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"var slicedDate = Date().slice(0, 15)\r",
											"console.log(slicedDate)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"minimal allowed date for start_date is \", \" GMT+0000 (Coordinated Universal Time)\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c041c71d-3e74-4dd8-849e-8266550e558d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6c337399-78ea-4924-83f5-89323fe16ac9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \" \",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  End Date in the past",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1d212bf-29ef-4032-82e5-1497450c69db",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"var slicedDate = Date().slice(0, 15)\r",
											"console.log(slicedDate)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"minimal allowed date for end_date is \", \" GMT+0000 (Coordinated Universal Time)\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c7ecb31d-ec62-49c8-8d58-10571082f267",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "cdad7f6a-3d21-4c1d-8382-c54e7809923f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"2023-04-29\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty narration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "541e1aac-a42a-496d-bfee-f7c979025c39",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"var slicedDate = Date().slice(0, 15)\r",
											"console.log(slicedDate)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"narration should not be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "51d5e901-515a-46e1-872e-b47de07303f8",
										"exec": [
											"TodayDate = Date()\r",
											"console.log(TodayDate)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "549d8729-be96-4930-a649-eb1e15f8b4da",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3558c437-c11a-4c1a-8959-00cb07712123",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"address should not be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3ce11ca7-0802-435c-b39d-09b4997bdc6c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7097fb7b-7c1d-4519-b1e3-bc1946880d7c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ran\",\n    \"address\": \"\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty Beneficiary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c6800152-0562-4bda-835c-2073ef55dd5b",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"beneficiary_id must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cc539e59-7b30-4fd8-9c4c-86405626b2eb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "0c340a75-6488-41ca-b0ce-539cb8323740",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": \"\",\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  invalid  beneficiary id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8410bcc-8c5b-40ac-a4c3-c914af442d41",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"beneficiary_id must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f69611d9-2815-4d24-9e1d-c32a6a86fa8e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "30d08578-73de-4ce9-9376-ae8e8be66503",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": null,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty file/-64 field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bad0b8b9-6f13-4e92-a40c-7ab6db01c953",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"file_base64 should not be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "80c3c37e-64e8-48ca-986a-b9dc5348966d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "17b61598-fc9b-4904-8e3c-8af213b83c97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid file extension",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df9bd9dd-adfc-4d12-a050-c2b9b80e5487",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"file_extension must be one of the following values: png, jpg, jpeg, pdf\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5c77ab83-3e5d-4253-8690-23ba57a66c55",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8baed93f-cb09-49fc-ba3c-7d41a6c156ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid File Extension",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7297a28-dc0e-42e0-9439-de24fcd2d007",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate base64 fields\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"file_base64 must be base64 encoded\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ece2549c-1f7d-43e4-976a-ba5dc54acdc4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6b61c748-af15-423f-b21f-a36957259c3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"mp4\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Invalid frequency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dbea0254-1853-40b9-9de3-14cd65c25eb0",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate invalid frequency error message\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"frequency must be one of the following values: daily, weekly, monthly\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b14f50d6-2bfd-4ff1-90da-0a0f3a9341be",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6d811cbf-6172-4ac9-a3de-34227448b4a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0112345678\",\n    \"phone_number\": \"07011725397\",\n    \"debit_type\": \"all\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Rand\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Incorrect Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db309a1f-0014-4870-9fd7-9d6cd327df46",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Invalid 2FA Token\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3b47412-37a1-4f5f-9499-498dfb66501e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "2aa84208-56a9-4408-93a3-05d8d8ea03e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"all\",\n    \"frequency\": \"weekly\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"011100\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Empty Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d029732b-ecb1-4030-a1e9-673767f7ba9b",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate Invalid 2FA Token\", function(){\r",
											"    pm.expect(jsonData.message).to.contains(\"2fa is required to perform this operation.\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2755afd2-cb0f-4df1-aaad-4badee2d4d71",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f9cc5d3c-db73-431f-bdcb-b5f8c5b0b57f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"all\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"png\",\n    \"token\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83711510-1078-4b63-ac71-592e9104ad46",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9806b87-cb48-43e3-8639-a31d6f57af36",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "bb528311-da77-4d77-9fca-15a013fa2d36",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"mp4\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						},
						{
							"name": "Create Mandate -  Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "18909ee2-79ea-4726-aac5-3aabbc22e0b6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a81e8285-d495-4800-81e4-1cac4b07cd2a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "42c147ff-3b1f-4c39-af9f-ce6bfc71b246",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"011245\",\n    \"phone_number\": \"07011725297\",\n    \"debit_type\": \"All\",\n    \"frequency\": 1,\n    \"bank_id\": 52,\n    \"email\": \"minnie@getnada.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"narration\": \"Ram\",\n    \"address\": \"Ikate\",\n    \"amount\": 50,\n    \"beneficiary_id\": 1,\n    \"file_base64\": \"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\",\n    \"file_extension\": \"mp4\",\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates"
							},
							"response": []
						}
					],
					"id": "8af2c23a-1e18-4707-a6f0-e0e15c934080"
				},
				{
					"name": "Fetch Mandates",
					"item": [
						{
							"name": "Fetch Mandates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw);\r",
											"postman.setEnvironmentVariable(\"MandateId\", jsonData.data.data[0].id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "f0d2cdde-3c41-4218-9dc8-1186f3f1e17c"
									}
								}
							],
							"id": "114b1e82-d33f-4018-b8a2-da9cf5566526",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "4d741ad7-da66-4068-bf00-877a77006d4a",
									"name": "Fetch Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3735"
										},
										{
											"key": "ETag",
											"value": "W/\"e97-zAtoL8C7Df/iYmOsFXTSOKC93k8\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"bank_id\": 52,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427161009830884240110\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-04-26T23:00:00.000Z\",\n                \"end_date\": \"2023-04-26T23:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"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\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:10:09.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandates - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09b6dabb-ff7a-4376-9ae0-fcec57499a80",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7168c3aa-7e17-479e-b581-f557599c5a18",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "314730ea-fb3b-4465-b2ef-81a16be00158",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}/mandates?limit=10&page=1",
									"host": [
										"{{base_url}"
									],
									"path": [
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "5cd713e1-2454-4a51-9ca3-e437d870ab28",
									"name": "Fetch Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3735"
										},
										{
											"key": "ETag",
											"value": "W/\"e97-zAtoL8C7Df/iYmOsFXTSOKC93k8\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"bank_id\": 52,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427161009830884240110\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-04-26T23:00:00.000Z\",\n                \"end_date\": \"2023-04-26T23:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"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\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:10:09.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandates - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d00e2805-561d-478e-8fcc-498fe77d5d1d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "effca467-b56c-45de-aac4-97cab3813fa0",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ca10383-be06-48c4-a064-c94aef9ae8bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "34bca056-77a2-44a2-8ba6-ee18afb0e427",
									"name": "Fetch Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3735"
										},
										{
											"key": "ETag",
											"value": "W/\"e97-zAtoL8C7Df/iYmOsFXTSOKC93k8\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:23 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"bank_id\": 52,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427161009830884240110\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-04-26T23:00:00.000Z\",\n                \"end_date\": \"2023-04-26T23:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"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\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:10:09.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "8e10230e-316b-4ba2-84a6-477fe0888ed1"
				},
				{
					"name": "Fetch Mandate",
					"item": [
						{
							"name": "Fetch Mandate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b319ff0-2f5a-4168-8004-899247303c1d",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "25dc6ac2-cc4e-4400-807b-f71fbc174580",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6b9f4706-0bf0-4938-af9e-202255284280",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}/mandates/:mandate_id",
									"host": [
										"{{base_url}"
									],
									"path": [
										"mandates",
										":mandate_id"
									],
									"variable": [
										{
											"id": "c5a45105-a9d0-4827-850b-67465e6506e2",
											"key": "mandate_id",
											"value": "{{mandate_id}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "cc930817-45db-4b9e-bd47-f98b445b2c77",
									"name": "Fetch Mandate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3665"
										},
										{
											"key": "ETag",
											"value": "W/\"e51-AxiiIJCK3UXNe+yCNJ83oJRlOt4\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 52,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate - Non-existing mandate id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7447b8d5-e70a-46e6-b2fa-4487ec8bf9a5",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate Non-existing mandate ID\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3f823f6a-f1f1-407b-9e64-ec9358b49277",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "581b02ad-6495-4d93-a386-07c1d5ae7dab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id"
									],
									"variable": [
										{
											"id": "f78804e2-31a4-4cc9-bcb2-c05b81c8f0ab",
											"key": "mandate_id",
											"value": "180"
										}
									]
								}
							},
							"response": [
								{
									"id": "b95925c8-7d36-41e0-b2c0-5f5ea7612e21",
									"name": "Fetch Mandate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3665"
										},
										{
											"key": "ETag",
											"value": "W/\"e51-AxiiIJCK3UXNe+yCNJ83oJRlOt4\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 52,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate - Invalid mandate id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78196578-afcd-429c-8c92-39064e0f49c1",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Mandate not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ef535c53-591d-4cb3-9420-75d52c979179",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "fa2fac1f-4258-4acf-a9a0-1275b897751e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id"
									],
									"variable": [
										{
											"id": "2ec06399-2e1a-49c2-bcc7-c7d4ee9aec03",
											"key": "mandate_id",
											"value": "why"
										}
									]
								}
							},
							"response": [
								{
									"id": "96d3737e-cb1a-48e9-8ec7-842bad0c0409",
									"name": "Fetch Mandate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3665"
										},
										{
											"key": "ETag",
											"value": "W/\"e51-AxiiIJCK3UXNe+yCNJ83oJRlOt4\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 52,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3ae2bd6-57c3-481d-a322-16cbbb81bc7d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "13377ea3-f17a-4ac7-ac8c-1a3fa07e0686",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "bc8e2258-d211-466e-b219-6356e3253f3c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id"
									],
									"variable": [
										{
											"id": "4f6f9232-5d22-438e-963c-2c3e11b64c83",
											"key": "mandate_id",
											"value": "18a"
										}
									]
								}
							},
							"response": [
								{
									"id": "91accf7f-4cd2-4c6c-9514-22196114f0ea",
									"name": "Fetch Mandate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3665"
										},
										{
											"key": "ETag",
											"value": "W/\"e51-AxiiIJCK3UXNe+yCNJ83oJRlOt4\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 52,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"iVBORw0KGgoAAAANSUhEUgAAAMQAAADECAYAAADApo5rAAAAAklEQVR4AewaftIAAAi1SURBVO3BQW4ER5AgQfcC//9lX2EOiTglUOgmR5oNM/sHa63/8bDWOh7WWsfDWut4WGsdD2ut42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1jh8+pPKXKiaVqWJS+UTFjcpU8YbKJypuVN6oeENlqphU/lLFJx7WWsfDWut4WGsdP3xZxTep3FTcVEwqU8WkMqncVNyo3FRMKp9Quan4hMpU8UbFN6l808Na63hYax0Pa63jh1+m8kbFJ1SmihuVNypuVG4qJpWpYlKZKm4q3lC5qZgqJpWp4g2VNyp+08Na63hYax0Pa63jh/84lRuVqWJSmSomlUllqripuKmYVKaKSeWm4kblpuJG5f+yh7XW8bDWOh7WWscP/8dVTCo3Km+ofEJlqnijYlL5hMpNxf9lD2ut42GtdTystY4fflnFX6qYVG4qblSmikllqrhRmSomlaliqphU3qiYVG4qJpWbijcq/k0e1lrHw1rreFhrHT98mcq/WcWkMlV8k8pUMalMFZPKVHFTMam8UTGpTBWTyhsq/2YPa63jYa11PKy1DvsH/2Eq31TxhsobFTcqn6i4UflNFf9lD2ut42GtdTystQ77Bx9QmSreUJkqJpU3Km5Upoq/pPJNFTcqU8Wk8kbFpPKbKm5UpopPPKy1joe11vGw1jp++FDFpDJVTCpTxU3FpPKGyr9JxaQyVdyo3KjcqNxUTCpvVEwqU8WkMlX8b3pYax0Pa63jYa11/PAhlU+oTBWTylQxqUwqU8U3qXyi4kZlqrhRmSpuVN6ouKl4Q2WqmFTeqPimh7XW8bDWOh7WWscPX1ZxUzGp3FRMKm+oTBWTyk3FVHGjcqPyl1RuKiaVNypuKm5Ubir+0sNa63hYax0Pa63jh1+m8gmVqeJG5Y2KSeUNld+kMlW8UfGJihuVqeKNik+oTBWfeFhrHQ9rreNhrXX88KGKm4oblZuKT1RMKjcVk8onKiaVqeJG5UblN6ncVLyhclMxqUwVv+lhrXU8rLWOh7XWYf/gi1TeqJhUbip+k8pUMal8U8Wk8omKSWWqmFSmiknljYpJ5abiEypTxSce1lrHw1rreFhrHT98SOWm4kZlqrhRmSpuVKaKm4pJZaq4UXlDZaq4UZkq3lCZKiaV/5KKb3pYax0Pa63jYa112D/4gMpUMan8pYq/pDJVTCpTxaQyVUwqU8WkMlXcqLxRMam8UTGpTBWTylQxqUwV3/Sw1joe1lrHw1rr+OFDFb+p4kZlUrmpmFRuKt5QeaPipuLfpOJGZVK5UZkq3lCZKj7xsNY6HtZax8Na6/jhj1VMKlPFpDJVTBWTylQxqdxUTCpTxU3FpDKp/CaVNyo+ofJGxY3KVDFVTCrf9LDWOh7WWsfDWuuwf/BFKjcVNypTxY3KVPGGyjdVvKFyUzGpTBWTylRxozJV3KjcVEwqNxWTylTxlx7WWsfDWut4WGsd9g/+F6m8UXGj8kbFjcpU8QmVqeITKjcVb6jcVEwqNxVvqEwVf+lhrXU8rLWOh7XW8cMfU5kq3lCZKm4qJpUblaniRmWqmFSmiknlExU3Kr+p4kblN6lMFZ94WGsdD2ut42Gtdfzwy1RuVKaKSeWNipuKSeUTFZPKGxWTylQxqUwqn6i4UblRmSqmiv+Sh7XW8bDWOh7WWof9gw+oTBVvqEwVNyo3FZPKVPFNKjcVk8pUMancVEwqU8Wk8k0VNypTxaTyRsWkMlV808Na63hYax0Pa63D/sEfUvkvqZhUpopJZaqYVP5SxaTyRsUbKlPFJ1RuKr7pYa11PKy1joe11vHDh1Q+UfGGyhsVk8pNxScqJpWp4hMqU8Wk8omKN1SmiknljYo3VKaKTzystY6HtdbxsNY6fvhQxY3KJ1RuKiaVm4oblZuKSeXfpGJSuamYVKaKm4pJ5abijYpJZar4poe11vGw1joe1lrHDx9SeaNiUpkqpopvUvmEyhsVk8obFTcqU8VU8QmVqeKmYlKZVN6o+EsPa63jYa11PKy1jh++rGJS+YTKVHFTMam8UTGpTBWTyo3KVHGjMqlMFZPKGypvVNyo3FR8U8WkMlV84mGtdTystY6Htdbxw79cxaRyUzFV3KhMKp+ouFG5qXijYlK5qXhDZaqYKiaVSWWqmFTeqPhND2ut42GtdTystQ77B79IZaqYVP5SxY3Kb6qYVKaKSWWqeEPljYoblZuKSeWNijdUpopPPKy1joe11vGw1jp++GMqU8WkMlVMKlPFjcpvqphU3qiYVKaKG5WpYqp4Q+Wm4kblN6n8poe11vGw1joe1lrHDx9S+aaKSeVGZaq4UZkqpooblZuKSWVS+YTKGyo3FTcVNyp/qeI3Pay1joe11vGw1jrsH/yHqUwVk8onKj6hMlVMKr+pYlL5TRVvqHxTxSce1lrHw1rreFhrHT98SOUvVbxRMal8k8pNxaQyVbyhclPxRsWNyidUpoo3Km5UvulhrXU8rLWOh7XW8cOXVXyTyk3FpDJV3FRMKjcqb6h8QuUTKm+ofFPFf8nDWut4WGsdD2ut44dfpvJGxRsqNypTxU3FTcWkMlVMKn9J5aZiUrmpmFRuVH6TylTxTQ9rreNhrXU8rLWOH/7jKiaVG5WbiknlpmJSmSpuVG4qJpWpYlKZKiaVm4pJZaq4UZkq3lC5qfhND2ut42GtdTystY4f/j9T8UbFpDKp3KhMFW+o3Kh8k8q/icpUMalMFZ94WGsdD2ut42Gtdfzwyyr+UsUnVKaKqWJSmSreqJhUpopJ5aZiUpkqblSmihuVN1SmipuKSeU3Pay1joe11vGw1jp++DKVv6TyTRWTyk3FpPJNKlPFGxWTylTxm1SmiknlRuWm4pse1lrHw1rreFhrHfYP1lr/42GtdTystY6HtdbxsNY6HtZax8Na63hYax0Pa63jYa11PKy1joe11vGw1joe1lrHw1rreFhrHf8PLaWK0OCEAkUAAAAASUVORK5CYII=\",\n        \"file_extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2b42030-f6cd-4751-b900-1a3b34f9c93e",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8e329fc7-f6ae-4480-8a93-c34e10926c07",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1a16aec0-80a1-49c1-a29f-f782084588f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id"
									],
									"variable": [
										{
											"id": "438821a3-ac22-4e14-ac94-c148e582e525",
											"key": "mandate_id",
											"value": "18a"
										}
									]
								}
							},
							"response": [
								{
									"id": "c40f3894-947a-433d-b6f9-a5da580567a5",
									"name": "Fetch Mandate",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3665"
										},
										{
											"key": "ETag",
											"value": "W/\"e51-AxiiIJCK3UXNe+yCNJ83oJRlOt4\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:10:33 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 52,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427161009830884240110\",\n        \"email\": \"adeolu@lendsqr.com\",\n        \"start_date\": \"2023-04-26T23:00:00.000Z\",\n        \"end_date\": \"2023-04-26T23:00:00.000Z\",\n        \"narration\": \"Rand\",\n        \"address\": \"Ikate\",\n        \"amount\": \"50.00\",\n        \"beneficiary_id\": 1,\n        \"file_base64\": \"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\",\n        \"file_extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:10:09.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:10:09.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "0d094cb6-9e30-4b8b-bc8c-9a61cf1edd61"
				},
				{
					"name": "Activate/Deactivate Mandate",
					"item": [
						{
							"name": "Activate/Deactivate Mandate - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50d67432-a5fc-4b7a-aa8f-0d37c31475b4",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8d9f976e-e97c-4cc9-af66-d2e261da9bf3",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "2d20fdd3-4482-4c38-bbc8-97f0ea9f01a6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id/:type?token=00000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "00000"
										}
									],
									"variable": [
										{
											"id": "d82706b1-7ded-4239-ad7b-4594ced9673c",
											"key": "mandate_id",
											"value": "{{mandate_id}}"
										},
										{
											"id": "5248ed75-9792-472e-9b05-8cc3d1b892c4",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Mandate - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c1417abb-2074-489f-bd0d-c05c99f72321",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "78d8aca4-3b86-4722-a35b-4b98a9cc2ea3",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4c56a2ed-a79d-422f-8c3d-4a83045ac6ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "PATCH",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id/:type?token=00000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "00000"
										}
									],
									"variable": [
										{
											"id": "f0498c66-029a-47c4-b381-fac3b31a011b",
											"key": "mandate_id",
											"value": "{{mandate_id}}"
										},
										{
											"id": "b7d353a9-53e5-49cb-bae5-3f5c1fefa180",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve Mandate",
							"id": "7b5b3c08-404e-4637-8eca-88970ced979c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN1}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "f8432ac4-d3ff-4fc6-ac9e-52bc2f2c65e5",
											"key": "mandate_id",
											"value": "{{mandate_id}}"
										},
										{
											"id": "4a6df080-ea5e-46e7-a557-b8ee9077cc8a",
											"key": "type",
											"value": "approve"
										}
									]
								}
							},
							"response": [
								{
									"id": "1fb5eac6-fc48-42ca-a6a1-4b347788d1b0",
									"name": "Activate/Deactivate Mandate",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\",\n    \"token\": \"777958\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												":type"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "3"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Sat, 29 Apr 2023 15:35:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate/Deactivate Mandate - Deactivate",
							"id": "102c15a7-759a-4258-b9c9-967199a1f867",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "690727d8-26ea-4c13-9b13-a3b162b409ca",
											"key": "mandate_id",
											"value": "6"
										},
										{
											"id": "65115c97-7d91-4ed9-9b8e-98c1ecdd3065",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": [
								{
									"id": "687a3324-8061-4bde-bad7-be2d9f4a965c",
									"name": "Activate/Deactivate Mandate",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\",\n    \"token\": \"777958\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												":type"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "3"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Sat, 29 Apr 2023 15:35:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate/Deactivate Mandate - Activate",
							"id": "40511b44-4ee0-4e7f-8386-7707cd019d15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/:mandate_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										":mandate_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "40474fb9-67b8-44a4-b4fc-f347cec69c7c",
											"key": "mandate_id",
											"value": "6"
										},
										{
											"id": "0d507ab5-be15-4381-b8d6-31c1a80d2a97",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "dc2412ea-7ff5-46de-85f7-b3bf318f3b1f",
									"name": "Activate/Deactivate Mandate",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"active\",\n    \"token\": \"777958\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/mandates/:mandate_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												":type"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "3"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Sat, 29 Apr 2023 15:35:52 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						}
					],
					"id": "783090e8-c4ff-46dd-8ab3-2a664c2e4cdb"
				},
				{
					"name": "Fetch Mandate Stats",
					"item": [
						{
							"name": "Fetch Mandate Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ecc8ca56-f43f-4c0d-be02-db59facdc210",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw);\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"// pm.test(\"Validate the sum total of Pending, Active and Inactive stats\", function(){\r",
											"//     var Pending = jsonData.data[2].count\r",
											"//     var Inactive = jsonData.data[1].count\r",
											"//     var Active = jsonData.data[0].count\r",
											"//     var MandateID = pm.environment.get(\"mandate_id\")\r",
											"//     var Total = Pending + Inactive + Active \r",
											"//     console.log(Pending, Inactive, Active, Total, MandateID)\r",
											"//     pm.expect(Total).to.eql(MandateID)\r",
											"// })"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b82b18b6-1f48-4710-8dd6-8f2db6f47e7c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6e004f15-ddde-458e-9862-3bcb99422065",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/stats"
							},
							"response": [
								{
									"id": "204f8a34-182f-4bdd-8306-2de71498ea71",
									"name": "Fetch Mandate Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/mandates/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-NX0rWFZ1fj9AeXvnwhIaQmF1P4c\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:28:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 3\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate Stats - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2dbe3866-c16c-41cd-822c-33a8086cb594",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "544248c1-3e5f-4bc0-83ee-5bf38ba27cc5",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8c3dc49c-6352-4969-ac37-4db8cffdc950",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/stats"
							},
							"response": [
								{
									"id": "d3b63f4d-d226-4243-b1e4-4e2ca0190100",
									"name": "Fetch Mandate Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/mandates/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-NX0rWFZ1fj9AeXvnwhIaQmF1P4c\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:28:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 3\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate Stats - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "276d3ff2-5f56-46fc-9b30-d7da26785f6f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "819aefe8-7d99-4dcd-a670-571748788974",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "03a1410c-2eca-40d0-b650-676ea26803de",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/stats"
							},
							"response": [
								{
									"id": "ad1defc6-2902-4049-85df-e45e583494fd",
									"name": "Fetch Mandate Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/mandates/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "111"
										},
										{
											"key": "ETag",
											"value": "W/\"6f-NX0rWFZ1fj9AeXvnwhIaQmF1P4c\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:28:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 3\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 1\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "03e52482-d473-43e7-8411-90b042d26c98"
				},
				{
					"name": "Fetch Mandate Transaction",
					"item": [
						{
							"name": "Fetch Mandate Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "5458ab2d-a589-4f74-b6f3-315488bc9350"
									}
								}
							],
							"id": "cffd5581-a749-4cda-947d-1f9c6f916a22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": {
										"password": "{{SecretKey}}",
										"username": "{{PublicKey}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "00138497-04e8-415f-80ef-17a2ab21f57b",
									"name": "Fetch Mandate Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/mandates/:mandate_id/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "7"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6258"
										},
										{
											"key": "ETag",
											"value": "W/\"1872-o+lizvTnFAX44fP31a0jk4mMQLQ\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 08:58:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:07:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:07:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:06:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:06:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:05:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:05:05\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:04:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:04:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:03:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:03:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:02:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:02:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:01:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:01:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:00:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:00:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:59:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:59:01\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:58:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:58:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate Transactions - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "9c5b1dcd-31c2-4b7e-996d-dbd3364150c8"
									}
								}
							],
							"id": "078fc610-88f5-4078-b7e0-31b08b8f1934",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "ebeef014-46d6-4fe8-8469-37319b392482",
									"name": "Fetch Mandate Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/mandates/:mandate_id/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "7"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6258"
										},
										{
											"key": "ETag",
											"value": "W/\"1872-o+lizvTnFAX44fP31a0jk4mMQLQ\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 08:58:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:07:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:07:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:06:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:06:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:05:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:05:05\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:04:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:04:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:03:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:03:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:02:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:02:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:01:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:01:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:00:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:00:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:59:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:59:01\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:58:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:58:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate Transactions - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "b7fe2716-4642-48cc-bf5c-371abb3809c0"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setNextRequest(\"Create Beneficiary - No Token\")"
										],
										"type": "text/javascript",
										"id": "4bdfb042-d275-4b9a-9650-2563e757bf62"
									}
								}
							],
							"id": "0fc8d407-92a4-4c70-bd63-592a3e3a6e12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "7719fa2f-6fc7-4b33-8cde-78c385d6facd",
									"name": "Fetch Mandate Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/mandates/:mandate_id/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"mandates",
												":mandate_id",
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "7"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6258"
										},
										{
											"key": "ETag",
											"value": "W/\"1872-o+lizvTnFAX44fP31a0jk4mMQLQ\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 08:58:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:07:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:07:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:06:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:06:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11 08:05:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:05:05\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:04:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:04:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:03:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:03:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:02:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:02:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:01:04\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:01:04\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 08:00:02\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 08:00:02\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:59:01\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:59:01\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11 07:58:03\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11 07:58:03\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "5d7e8a91-4a10-431e-8919-580ff01cfca1"
				},
				{
					"name": "Export Mandate",
					"item": [
						{
							"name": "Export Mandates",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b924fa9f-b02a-445a-a7a3-b828f9045ea6",
										"exec": [
											"var jsonData = pm.response.json();",
											"var RequestData = JSON.parse(pm.request.body.raw);",
											"pm.environment.set(\"mandate_export_data\", jsonData.data.data)",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f711c0cd-62a3-4997-b25a-1c5ae6cbcbcb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "da1deced-0d2a-4cf2-aed2-5c3e72a7a080",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/export"
							},
							"response": [
								{
									"id": "15c5a511-ce1b-4cd6-bf33-28a567c2163e",
									"name": "Export Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/mandates/export"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2735"
										},
										{
											"key": "ETag",
											"value": "W/\"aaf-9GrRYJQ4T+I0Vih6XJoxVqfAiGY\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 06:47:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": \"TWFuZGF0ZSBSZWZlcmVuY2UsQWNjb3VudCBOYW1lLEJhbmsgTmFtZSxTdGFydCBEYXRlLEVuZCBEYXRlLEZyZXF1ZW5jeSxBbW91bnQgdG8gRGViaXQsU3RhdHVzCjAwMDAwMDQvMDAxLzAwMDAwNzM3NDMsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAosdmVlIFRlc3QsVGVzdCBCYW5rIDEsU2F0IE1heSAyNyAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDEwMDAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzQyLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksTW9uIEp1biAyNiAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCix2ZWUgVGVzdCxUZXN0IEJhbmsgMSxTYXQgTWF5IDI3IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFdlZCBNYXkgMzEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksMTAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzM2LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3Mzc0MSx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxXZWQgTWF5IDI0IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFN1biBKdW4gMTEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksd2Vla2x5LDEwMDAwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzMxLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCjAwMDAwMDQvMDAxLzAwMDAwNzM3MzAsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzI5LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3MzcyNyx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxNb24gTWF5IDI5IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFR1ZSBNYXkgMzAgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksNTAuMDAsaW5pdGlhdGVkCg==\",\n        \"meta\": {\n            \"records\": 71,\n            \"page\": \"1\",\n            \"pages\": 8,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Export Mandates - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cd0d8892-d0e2-45f3-9232-bab4bd516435",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var Request = JSON.parse(pm.request.body.raw);",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'jwt expired'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1fad2cbb-0724-4b62-9303-5444fcfec706",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3cc43df9-e314-4f3c-84d5-0c1c054b76c3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/export"
							},
							"response": [
								{
									"id": "03f04e19-25d6-49fa-b9ce-17ebb72cdae9",
									"name": "Export Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/mandates/export"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2735"
										},
										{
											"key": "ETag",
											"value": "W/\"aaf-9GrRYJQ4T+I0Vih6XJoxVqfAiGY\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 06:47:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": \"TWFuZGF0ZSBSZWZlcmVuY2UsQWNjb3VudCBOYW1lLEJhbmsgTmFtZSxTdGFydCBEYXRlLEVuZCBEYXRlLEZyZXF1ZW5jeSxBbW91bnQgdG8gRGViaXQsU3RhdHVzCjAwMDAwMDQvMDAxLzAwMDAwNzM3NDMsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAosdmVlIFRlc3QsVGVzdCBCYW5rIDEsU2F0IE1heSAyNyAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDEwMDAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzQyLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksTW9uIEp1biAyNiAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCix2ZWUgVGVzdCxUZXN0IEJhbmsgMSxTYXQgTWF5IDI3IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFdlZCBNYXkgMzEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksMTAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzM2LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3Mzc0MSx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxXZWQgTWF5IDI0IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFN1biBKdW4gMTEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksd2Vla2x5LDEwMDAwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzMxLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCjAwMDAwMDQvMDAxLzAwMDAwNzM3MzAsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzI5LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3MzcyNyx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxNb24gTWF5IDI5IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFR1ZSBNYXkgMzAgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksNTAuMDAsaW5pdGlhdGVkCg==\",\n        \"meta\": {\n            \"records\": 71,\n            \"page\": \"1\",\n            \"pages\": 8,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Export Mandates- No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0943f027-93ca-46b4-afc3-baf3d6be2fae",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var Request = JSON.parse(pm.request.body.raw);",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "471b8c47-ff81-4480-94fd-fea99312a4b4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "263e4ade-9df3-4eac-85ce-cfe32a7e0e6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/export"
							},
							"response": [
								{
									"id": "b12ac6bd-ca56-4eaa-a1f4-034ddd915e0b",
									"name": "Export Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/mandates/export"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2735"
										},
										{
											"key": "ETag",
											"value": "W/\"aaf-9GrRYJQ4T+I0Vih6XJoxVqfAiGY\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 06:47:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": \"TWFuZGF0ZSBSZWZlcmVuY2UsQWNjb3VudCBOYW1lLEJhbmsgTmFtZSxTdGFydCBEYXRlLEVuZCBEYXRlLEZyZXF1ZW5jeSxBbW91bnQgdG8gRGViaXQsU3RhdHVzCjAwMDAwMDQvMDAxLzAwMDAwNzM3NDMsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAosdmVlIFRlc3QsVGVzdCBCYW5rIDEsU2F0IE1heSAyNyAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDEwMDAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzQyLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksTW9uIEp1biAyNiAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCix2ZWUgVGVzdCxUZXN0IEJhbmsgMSxTYXQgTWF5IDI3IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFdlZCBNYXkgMzEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksMTAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzM2LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3Mzc0MSx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxXZWQgTWF5IDI0IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFN1biBKdW4gMTEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksd2Vla2x5LDEwMDAwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzMxLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCjAwMDAwMDQvMDAxLzAwMDAwNzM3MzAsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzI5LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3MzcyNyx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxNb24gTWF5IDI5IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFR1ZSBNYXkgMzAgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksNTAuMDAsaW5pdGlhdGVkCg==\",\n        \"meta\": {\n            \"records\": 71,\n            \"page\": \"1\",\n            \"pages\": 8,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Export Mandates- Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f0ab4d03-a9a6-4462-bb84-8f5309a52ca6",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var Request = JSON.parse(pm.request.body.raw);",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Invalid Signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "dbad7bcd-7ef9-4c6e-95e5-8e07f8ef4991",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f862b01b-6a21-4b7a-bb74-a8486eee68ed",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/mandates/export"
							},
							"response": [
								{
									"id": "bc954cb0-75a7-422b-9c65-70143733feb9",
									"name": "Export Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/mandates/export"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "2735"
										},
										{
											"key": "ETag",
											"value": "W/\"aaf-9GrRYJQ4T+I0Vih6XJoxVqfAiGY\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 06:47:38 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": \"TWFuZGF0ZSBSZWZlcmVuY2UsQWNjb3VudCBOYW1lLEJhbmsgTmFtZSxTdGFydCBEYXRlLEVuZCBEYXRlLEZyZXF1ZW5jeSxBbW91bnQgdG8gRGViaXQsU3RhdHVzCjAwMDAwMDQvMDAxLzAwMDAwNzM3NDMsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAosdmVlIFRlc3QsVGVzdCBCYW5rIDEsU2F0IE1heSAyNyAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDEwMDAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzQyLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksTW9uIEp1biAyNiAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCix2ZWUgVGVzdCxUZXN0IEJhbmsgMSxTYXQgTWF5IDI3IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFdlZCBNYXkgMzEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksMTAwMDAuMDAscGVuZGluZwowMDAwMDA0LzAwMS8wMDAwMDczNzM2LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3Mzc0MSx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxXZWQgTWF5IDI0IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFN1biBKdW4gMTEgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksd2Vla2x5LDEwMDAwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzMxLHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSx3ZWVrbHksNTAuMDAsaW5pdGlhdGVkCjAwMDAwMDQvMDAxLzAwMDAwNzM3MzAsdmVlIFRlc3QsVGVzdCBCYW5rIDEsTW9uIE1heSAyOSAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxUdWUgTWF5IDMwIDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLGRhaWx5LDUwLjAwLGluaXRpYXRlZAowMDAwMDA0LzAwMS8wMDAwMDczNzI5LHZlZSBUZXN0LFRlc3QgQmFuayAxLE1vbiBNYXkgMjkgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksVHVlIE1heSAzMCAyMDIzIDAwOjAwOjAwIEdNVCswMTAwIChXZXN0IEFmcmljYSBTdGFuZGFyZCBUaW1lKSxkYWlseSw1MC4wMCxpbml0aWF0ZWQKMDAwMDAwNC8wMDEvMDAwMDA3MzcyNyx2ZWUgVGVzdCxUZXN0IEJhbmsgMSxNb24gTWF5IDI5IDIwMjMgMDA6MDA6MDAgR01UKzAxMDAgKFdlc3QgQWZyaWNhIFN0YW5kYXJkIFRpbWUpLFR1ZSBNYXkgMzAgMjAyMyAwMDowMDowMCBHTVQrMDEwMCAoV2VzdCBBZnJpY2EgU3RhbmRhcmQgVGltZSksZGFpbHksNTAuMDAsaW5pdGlhdGVkCg==\",\n        \"meta\": {\n            \"records\": 71,\n            \"page\": \"1\",\n            \"pages\": 8,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "f4a49099-38e8-46e9-b25e-0542b81c3c63"
				},
				{
					"name": "Fetch Mandate File",
					"item": [
						{
							"name": "Fetch Mandate File",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63ab843c-5406-423e-a508-27371d698584",
										"exec": [
											"  var jsonData = pm.response.json();",
											"var RequestData = JSON.parse(pm.request.body.raw);",
											"pm.environment.set(\"Mandate_file_base64\", jsonData.data.base64)",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e1b0f2ae-a47e-4fd2-b3de-a078093ad0a1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9723e85e-4762-41fe-94f5-86197e927ad8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/file?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										"file"
									],
									"query": [
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "1102a807-fd21-468c-bc97-5a435ad0ced2",
									"name": "Fetch Mandate File",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/v1/mandates/file?mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"v1",
												"mandates",
												"file"
											],
											"query": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3348"
										},
										{
											"key": "ETag",
											"value": "W/\"d14-bIFLFw+zPaQsP2PWJ8/7xfcSe7s\""
										},
										{
											"key": "Date",
											"value": "Wed, 21 Jun 2023 16:11:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"base64\": \"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\",\n        \"extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-06-21 16:08:41\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-06-21 16:08:41\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate File - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ada5f83c-5d82-42b0-b3b9-594713b60cda",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var Request = JSON.parse(pm.request.body.raw);",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'jwt expired'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0fb46ee6-0ca6-4f67-b8fb-eef97d2596aa",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8dfca138-128b-44d6-85ea-ebc99e5b8a59",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/file?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										"file"
									],
									"query": [
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "a921ac26-3f1f-400d-938c-dceda2f5312c",
									"name": "Fetch Mandate File",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/v1/mandates/file?mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"v1",
												"mandates",
												"file"
											],
											"query": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3348"
										},
										{
											"key": "ETag",
											"value": "W/\"d14-bIFLFw+zPaQsP2PWJ8/7xfcSe7s\""
										},
										{
											"key": "Date",
											"value": "Wed, 21 Jun 2023 16:11:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"base64\": \"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\",\n        \"extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-06-21 16:08:41\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-06-21 16:08:41\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate File - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c3c3a22-76e3-449e-b2cf-d24ec0ba57cf",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"var Request = JSON.parse(pm.request.body.raw);",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "056dbb75-0ea7-4e28-937b-c6aaaef2666c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "98cbb307-cd01-48cd-9210-f3fb0738ccc3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/file?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										"file"
									],
									"query": [
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "2082aef9-1eb2-4e3e-8577-ac5ac42a33b8",
									"name": "Fetch Mandate File",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/v1/mandates/file?mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"v1",
												"mandates",
												"file"
											],
											"query": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3348"
										},
										{
											"key": "ETag",
											"value": "W/\"d14-bIFLFw+zPaQsP2PWJ8/7xfcSe7s\""
										},
										{
											"key": "Date",
											"value": "Wed, 21 Jun 2023 16:11:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"base64\": \"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\",\n        \"extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-06-21 16:08:41\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-06-21 16:08:41\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Mandate File - Invalid Auth",
							"id": "bd7fa213-13dd-47e8-81ee-a35ba4f7de13",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/mandates/file?mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"mandates",
										"file"
									],
									"query": [
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "6d43608b-5677-45ee-96d2-8f03b4bb603e",
									"name": "Fetch Mandate File",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/v1/mandates/file?mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"v1",
												"mandates",
												"file"
											],
											"query": [
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3348"
										},
										{
											"key": "ETag",
											"value": "W/\"d14-bIFLFw+zPaQsP2PWJ8/7xfcSe7s\""
										},
										{
											"key": "Date",
											"value": "Wed, 21 Jun 2023 16:11:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"base64\": \"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\",\n        \"extension\": \"png\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-06-21 16:08:41\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-06-21 16:08:41\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "06d35f03-1ee4-4c4e-87aa-b37d3e3d8d69"
				}
			],
			"id": "98fd064b-582a-4664-ae54-10bdf943658a"
		},
		{
			"name": "Beneficiaries",
			"item": [
				{
					"name": "Create Beneficiary",
					"item": [
						{
							"name": "Create Beneficiary",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81bf4091-b204-42b3-9cfd-a6fe6a5a5732",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"pm.environment.set(\"beneficiaryId\", jsonData.data.id)\r",
											"\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate message is 'Beneficiary created successfully'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Beneficiary created successfully\")\r",
											"})\r",
											"pm.test(\"Validate that an accurate account number is returned\", function(){\r",
											"    pm.expect(jsonData.data.account_number.toString()).to.contain(RequestData.account_number)\r",
											"})\r",
											"pm.test(\"Validate that an accurate bank ID is returned\", function(){\r",
											"    pm.expect(jsonData.data.bank_id.toString()).to.contain(RequestData.bank_id)\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a48eb888-3ec2-49c1-bda8-157060910ea2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "ff9c9c3e-b3a1-402a-9327-bdcf8669bd45",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "044bcd03-1d7e-4121-b771-a9d358ddaa20",
									"name": "Create Beneficiary",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/beneficiaries"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "431"
										},
										{
											"key": "ETag",
											"value": "W/\"1af-/ERSKy+lnrfgyT3k6n/IavX29bE\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:06:58 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Beneficiary created successfully\",\n    \"data\": {\n        \"account_number\": 112345678,\n        \"bank_id\": 52,\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"id\": 1,\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Beneficiary - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30b66b79-ad6f-4049-8827-8817e1b78937",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9940452f-2770-4b89-8b0b-e53ab7ce22bb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "48a6851a-340d-4c93-bda4-ccaf2fb471ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6441b796-005f-4c6c-8d59-c83bc1f196c0",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "87fcccfc-8cbf-4a1a-ad8d-4d1168390305",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "407450d1-0064-49e7-9eac-4c52faa0b700",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Empty Account Number Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bbe75b6-6d33-4506-a3dc-f5069d32df32",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"account_number must be longer than or equal to 5 characters\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "545b8df3-744a-4a68-b14b-47517ec2ade2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "0323d3dc-cdb7-4727-a89d-f1da64326674",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Empty Bank ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ac2e4ed-8a8d-43bf-a1d2-a79081035d5d",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"bank_id must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2a8081c7-59f3-4145-8a9c-e5ffa3cc5655",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b67d934-236c-42cb-aa3f-8f16ea63b5ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": null,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Mismatched Bank Id and Account No",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7d6bc1c-d119-4cd8-a657-813dc5b42a0b",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate error message\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid Account\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "13240981-0ed7-4fb5-a788-1935725cd7f1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7e1b099d-734e-43ab-a63c-bf15e7e0ce31",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 1,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Non - existing Bank Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "465af980-fdd2-43bd-8955-329365afb107",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Bank not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "534fcd7b-4bb0-4c78-a67e-dd06d4ba1fee",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6a2188ad-d2c3-4c8b-963f-6b246c36c1d7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 44,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Invalid Bank ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e106bae-7c05-4b5f-b84f-4c2ded4d33bc",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate invalid bank field\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"bank_id must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e40e98df-da44-4cc2-adc9-26a555928f05",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3f6c3b41-5ad9-47ad-b3ed-ff0ce5c18c8e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": \"54\",\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Non-existing account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1734ce39-0a85-4d54-bc76-dcaddfb0a42f",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate error message\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid Account\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "56d97c5f-6b25-45c5-9c5b-c5915c43a54c",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8377a7e5-9079-4d4f-8d77-a16da6468c8d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"0112345079\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Account No less than 10digits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b709c9f1-a430-48ab-994b-ce0925319034",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate valid system\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Account Number can not be greater or less than 10\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "286b7dff-2e86-4f6a-b882-b3781abd53f9",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9f15deb0-4303-4148-a340-38f2173db77b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"315964377\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Account No more than 10digits",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d4ed220-88da-4ed3-a970-c1b37dec9a7a",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Account Number can not be greater or less than 10\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d8c76898-1d97-4cb4-9781-69c64bd8c552",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "69584793-6a6b-43ac-8263-042a86730c89",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"31596437790\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Invalid Account No",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d44fadc-ddd6-4377-a092-cb1537dac15b",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate Accorunt number\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Account Number can only be numbers\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f8266949-37e6-4776-b68a-581678fb289a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "411d5b19-4587-416a-ad9a-b20d5b147fd8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Invalid/Wrong 2FA Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d36af77-1f42-4fd6-b21a-7ffa1b4f6c95",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate 2FA field\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "651d0f41-1caa-40ae-ac02-1ef33c1588fc",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7079259b-ac8a-4db4-84a3-47db9b7b8cda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"address\" : \"Ikeja, Lagos\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - No Address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d36af77-1f42-4fd6-b21a-7ffa1b4f6c95",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate error message\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"address must be a string\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "651d0f41-1caa-40ae-ac02-1ef33c1588fc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "67de4875-bc7b-45fa-8ca0-c10c08a95303",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						},
						{
							"name": "Create Beneficiary - Address is numeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d36af77-1f42-4fd6-b21a-7ffa1b4f6c95",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate error message\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"address must be a string\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "651d0f41-1caa-40ae-ac02-1ef33c1588fc",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bc410f9e-b82e-4a9b-9634-3735e6373dba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"315964377e\",\n    \"bank_id\": 11,\n    \"address\" : 2,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/beneficiaries"
							},
							"response": []
						}
					],
					"id": "e15bbd3a-ab71-46b3-bbd9-43ba25287510"
				},
				{
					"name": "Fetch Beneficiaries",
					"item": [
						{
							"name": "Fetch Beneficiaries",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "904f8c8f-0992-4bea-a6be-e93b2312aa2f"
									}
								}
							],
							"id": "ac81d885-2ec8-454b-96f2-f543e46b8cad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "280d1142-6583-47e2-9f2e-0c79941f1aa5",
									"name": "Fetch Beneficiaries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "476"
										},
										{
											"key": "ETag",
											"value": "W/\"1dc-B7QMNqYBTuqfSHmor2PVFSnpwuM\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bank_id\": 52,\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427160655421826470232\",\n                \"last_transaction_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:06:57.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiaries - Imputer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "904f8c8f-0992-4bea-a6be-e93b2312aa2f",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1294b063-b76a-436c-b300-f6b393fe96de",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1df5470a-24ed-48b8-805a-a93d92099170",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{ImputerTOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "27034cce-cff8-4154-a761-6911e444071d",
									"name": "Fetch Beneficiaries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "476"
										},
										{
											"key": "ETag",
											"value": "W/\"1dc-B7QMNqYBTuqfSHmor2PVFSnpwuM\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"account_number\": 112345678,\n                \"account_name\": \"vee Test\",\n                \"bank_id\": 52,\n                \"bvn\": \"33333333332\",\n                \"session_id\": \"999999230427160655421826470232\",\n                \"last_transaction_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-27T14:06:57.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiaries - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "942f54ee-3ecc-4300-8016-3e1032628ddc",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5b73205e-01b5-4de8-ba66-3279e340832e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "62ac6d43-382e-4f88-85b0-a5660ffda8c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Beneficiaries - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c017c4c0-bc4d-4fa5-acbe-618573e3fb22",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "959376f5-cd20-4738-8c03-9d425ee25f7e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "35785265-106e-4f64-aac7-12fa15791aad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/beneficiaries?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "e6f9a8ab-b5a1-4ce9-87f4-12a6b913c166"
				},
				{
					"name": "Fetch Beneficiary",
					"item": [
						{
							"name": "Fetch Beneficiary",
							"id": "1a191743-f608-4bc0-8eaf-1ebf5b7fa11c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id/",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										""
									],
									"variable": [
										{
											"key": "beneficiary_id",
											"value": "{{beneficiaryId}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "947e9b2d-2017-4ebc-a4b9-efe9ab0b4c2e",
									"name": "Fetch Beneficiary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "406"
										},
										{
											"key": "ETag",
											"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary - Invalid Beneficiary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5580baef-1dc8-4d5d-b33a-38018978f9fa",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate invalid Beneficiary ID\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Beneficiary not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "15642701-3910-4cc2-90cc-e3cd43879dde",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "535d740e-17c6-4117-91bd-b6538233a50e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id"
									],
									"variable": [
										{
											"id": "8e448a68-14d6-4cd6-8d2f-9d0eba58da63",
											"key": "beneficiary_id",
											"value": "t"
										}
									]
								}
							},
							"response": [
								{
									"id": "ac023211-444c-4a61-8913-a40bea5878df",
									"name": "Fetch Beneficiary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "406"
										},
										{
											"key": "ETag",
											"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary - Non-existing  Beneficiary ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c8391a0f-1ccf-4409-a269-54aef68bed50",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate empty fields\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Beneficiary not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c64a646a-fce5-4f93-86d5-3639ebe859c4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "aecb63f8-e394-4a63-b501-bbdc6281817d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id"
									],
									"variable": [
										{
											"id": "ef4fd9b6-afcf-4592-b8c0-c8340f45dd73",
											"key": "beneficiary_id",
											"value": "20"
										}
									]
								}
							},
							"response": [
								{
									"id": "1b8634f0-7d42-4684-9331-891536d8fd19",
									"name": "Fetch Beneficiary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "406"
										},
										{
											"key": "ETag",
											"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "40774723-7aaa-4ae2-ba3a-ba40708d1116",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5058f715-df56-4827-8e70-3778227c232e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f862f5b-4a81-4895-bf0c-8d40030190dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id"
									],
									"variable": [
										{
											"id": "fa6b630a-7b68-468a-a1dc-abf7ab374932",
											"key": "beneficiary_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "7bb992e4-c156-4565-a94e-df9ee3868daa",
									"name": "Fetch Beneficiary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "406"
										},
										{
											"key": "ETag",
											"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "182541b5-41d2-4fe9-ac30-fcbe9eb5fb48",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a3ea4f9-6ef9-4864-b9de-15345a661c22",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "db9c8139-3af1-4cfa-9fb5-ed3b1ee842ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id"
									],
									"variable": [
										{
											"id": "98fec5de-ffee-40d5-9f66-bae8147a4f3d",
											"key": "beneficiary_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "21236d0d-4f97-4286-beb5-de8e55935f62",
									"name": "Fetch Beneficiary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"beneficiaries",
												":beneficiary_id"
											],
											"variable": [
												{
													"key": "beneficiary_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "406"
										},
										{
											"key": "ETag",
											"value": "W/\"196-HKVmeTNSPTRm83TxIsPKxR2CLQg\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:07:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"account_number\": 112345678,\n        \"account_name\": \"vee Test\",\n        \"bank_id\": 52,\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160655421826470232\",\n        \"last_transaction_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-27T14:06:57.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-27T14:06:57.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "5b54b7f6-fcf9-4324-8fe1-616308b4f34c"
				},
				{
					"name": "Activate/Deactivate Beneficiary",
					"item": [
						{
							"name": "Activate/Deactivate Beneficiary - Activate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bac9f1f5-91d9-46b5-82a9-f3d44c1284bf",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2a6760b8-7ce5-4034-97d4-cad2bf896625",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d674b45d-65e2-4c89-85bc-cbc97b8e5d24",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										":type"
									],
									"variable": [
										{
											"key": "beneficiary_id",
											"value": "{{beneficiaryId}}"
										},
										{
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Beneficiary - Deactivate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5e2bacc6-37c5-46ae-884b-8400ddd4c613",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0ff45987-1ba8-4dcf-8b31-69539351aa80",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "a05cbf2d-61fa-4a22-8935-b1fa79d5d38a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"inactive\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										":type"
									],
									"variable": [
										{
											"key": "beneficiary_id",
											"value": "{{beneficiaryId}}"
										},
										{
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Beneficiary - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5235d27a-ff6d-407b-97d2-4df58a08d89d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "72c7febd-2491-4e1a-a0ea-ef30161d87a3",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8f81976b-95fa-47f3-9ecd-4558d3bb1fb7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										":type"
									],
									"variable": [
										{
											"id": "e34d9f69-6f17-439e-9b61-efd5d864889c",
											"key": "beneficiary_id",
											"value": null
										},
										{
											"id": "5cac122e-20e2-4c5c-bce1-64cb6e21f0e8",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Beneficiary - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "462c093e-a528-4de5-b864-5a53b0bae9d3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1282c9b4-5a3b-41af-b972-022f189e9891",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "276e7d27-0530-49eb-8b57-0c0a5c927810",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"status\": \"active\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/beneficiaries/:beneficiary_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										":type"
									],
									"variable": [
										{
											"id": "25fae0c7-8eec-4f23-9e97-f4c5d4a32715",
											"key": "beneficiary_id",
											"value": null
										},
										{
											"id": "2613d0a1-2253-48ab-ad10-71b3a03e9751",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "3ceffab5-dbdf-4971-97d0-af9764190abe"
				},
				{
					"name": "Fetch Beneficiary Stats",
					"item": [
						{
							"name": "Fetch Beneficiary Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76c4dc81-2170-42b6-93fe-6343798b424d",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"/**pm.test(\"Validate the sum total of Pending, Active and Inactive stats\", function(){\r",
											"    var Pending = jsonData.data[2].count\r",
											"    var Inactive = jsonData.data[1].count\r",
											"    var Active = jsonData.data[0].count\r",
											"    var MandateID = pm.environment.get(\"mandate_id\")\r",
											"    var Total = Pending + Inactive + Active \r",
											"    console.log(Pending, Inactive, Active, Total, MandateID )\r",
											"    pm.expect(Total).to.eql(MandateID)\r",
											"})**/"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a7370520-52b1-4166-9522-9f4fccf947fb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "28249c07-93fb-4ec7-882b-83a128afed14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/beneficiaries/stats"
							},
							"response": [
								{
									"id": "f2160b55-6753-4d95-88b0-85d5cf3d49db",
									"name": "Fetch Beneficiary Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/beneficiaries/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "79"
										},
										{
											"key": "ETag",
											"value": "W/\"4f-xOIaF6pNOAGaSQbwDT069F8uyKs\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:26:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary Stats by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"/**pm.test(\"Validate the sum total of Pending, Active and Inactive stats\", function(){\r",
											"    var Pending = jsonData.data[2].count\r",
											"    var Inactive = jsonData.data[1].count\r",
											"    var Active = jsonData.data[0].count\r",
											"    var MandateID = pm.environment.get(\"mandate_id\")\r",
											"    var Total = Pending + Inactive + Active \r",
											"    console.log(Pending, Inactive, Active, Total, MandateID )\r",
											"    pm.expect(Total).to.eql(MandateID)\r",
											"})**/"
										],
										"type": "text/javascript",
										"id": "69a3fe7f-35d8-42b0-b178-4d6476dc63e8"
									}
								}
							],
							"id": "a600dc9f-deaa-419f-bc4f-649d005cb887",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url_v1}}/beneficiaries/:beneficiary_id/stats",
									"host": [
										"{{base_url_v1}}"
									],
									"path": [
										"beneficiaries",
										":beneficiary_id",
										"stats"
									],
									"variable": [
										{
											"id": "cf39b891-6d95-404f-80b5-45e05522e517",
											"key": "beneficiary_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "504373b3-a659-4f43-b092-bba66370e711",
									"name": "Fetch Beneficiary Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/beneficiaries/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "79"
										},
										{
											"key": "ETag",
											"value": "W/\"4f-xOIaF6pNOAGaSQbwDT069F8uyKs\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:26:26 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 1\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Beneficiary Stats - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7765b3af-41ea-4713-810d-54323ee6986b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d14cb449-8a9d-4cfd-8760-8bd5c14988ed",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "0357d29a-c0b5-4add-9415-1c9a2929767e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"url": "{{base_url}}/beneficiaries/stats"
							},
							"response": []
						},
						{
							"name": "Fetch Beneficiary Stats - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22606418-f8dc-4e5e-889b-3bcbe941e1ad",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "76982c8d-ffa4-47d6-b4eb-8b29337799d9",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "c62e7e58-cb5c-4ac8-ac60-655a86dc035a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": "{{base_url}}/beneficiaries/stats"
							},
							"response": []
						}
					],
					"id": "ef8cacc6-3867-4dd2-9744-846d647d86b7"
				}
			],
			"id": "d3bc67ba-6e00-42b5-b0f1-6374388d0084"
		},
		{
			"name": "Banks",
			"item": [
				{
					"name": "Fetch Banks",
					"item": [
						{
							"name": "Fetch Banks - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b0f0d781-d9a0-4a09-a236-db99e7929aea",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function () {\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"The Bank Name and Bank ID is returned\", function () {\r",
											"    const Data = jsonData.data.data;\r",
											"    Data.forEach(function (bank) {\r",
											"        pm.expect(bank.id).to.be.a('number');\r",
											"        pm.expect(bank.name).to.be.a('string');\r",
											"        pm.expect(bank.bank_code).to.be.a('string');\r",
											"        pm.expect(bank.institution_code).to.be.a('string')\r",
											"        pm.expect(bank.institution_code.length).to.greaterThan(4);\r",
											"    });\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6432ccef-4264-4a7c-b123-befd93b5f1b4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6ab978c3-0e17-4014-9650-4c1bce707b0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Banks - No Token Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a28f5bb6-dc94-4b28-9657-f234bb7fe7ba",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1c8a2391-e620-44fc-9811-ac03f5535af6",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8a982e5-ce86-4f76-ac6d-536902fe80f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Banks - No Token Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9761f057-5c2b-4436-8b88-a6c6714ac595",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0500ae4d-7f03-4e0a-a8d6-f663e82681cd",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "4ed3cfa2-e7b9-4b99-acdd-d1a60780ff7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Banks - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bdebc88b-0e53-4c38-8055-2a84dc07fbbf",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9b219601-d80a-460a-9eec-0beefe40dc03",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "eefcaf58-ab04-451b-ac44-e5afbb202c77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "ASC"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "e94de19a-9507-4286-9a4b-2e40799e91f7"
				},
				{
					"name": "Fetch Bank",
					"item": [
						{
							"name": "Fetch Bank",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1eaf6c4-e93a-4482-a7b8-836f67767edc",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b322f98f-9040-455b-9ea7-5c9b3114ad75",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d685586d-0076-45fb-8801-edf52e6572b4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/banks/:bank_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										":bank_id"
									],
									"variable": [
										{
											"id": "cf5f5359-c702-42e8-88d2-76cf1b43b7a1",
											"key": "bank_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "6f430f43-b5d4-4f8b-8076-5fba4fe7bb7f",
									"name": "Fetch Bank",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/banks/:bank_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "365"
										},
										{
											"key": "ETag",
											"value": "W/\"16d-7QieTGIC9XbSXDesBODEj2aaqsg\""
										},
										{
											"key": "Date",
											"value": "Mon, 24 Apr 2023 20:32:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"status\": \"active\",\n        \"created_on\": \"2020-06-26T16:09:32.000Z\",\n        \"created_by\": null,\n        \"modified_on\": null,\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Bank - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2a0bed1-2a43-4e7a-9a5e-7044f6f80b7b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5bdb3d07-6484-48bf-a470-f1512ea77c87",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6bb6e82c-0643-465f-afdc-4c23f0d687b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks/:bank_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										":bank_id"
									],
									"variable": [
										{
											"id": "a03f300e-a3a9-4949-94d9-b655a279841b",
											"key": "bank_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Bank - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50220dc1-ad86-4adb-96de-fa357cfede86",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a24f1c2c-1646-4fd0-b1a0-1281617376da",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "06942a4b-9f83-4313-b42d-9aeae62dbc13",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks/:bank_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										":bank_id"
									],
									"variable": [
										{
											"id": "68d643ec-c795-4fb3-a182-bca0aac34bb8",
											"key": "bank_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "cac3a9de-a114-4d8d-82e8-3108a14d6945"
				},
				{
					"name": "Account Lookup",
					"item": [
						{
							"name": "Account Lookup",
							"id": "ee4db5e3-fb40-45f3-b657-8094e9ae10df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/banks/account-lookup"
							},
							"response": [
								{
									"id": "f89a7b1e-96ad-41ee-8da1-e7d5edb76d93",
									"name": "Account Lookup",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/banks/account-lookup"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "141"
										},
										{
											"key": "ETag",
											"value": "W/\"8d-gED12kCzTHDqZpjC4M4KJhmfA8M\""
										},
										{
											"key": "Date",
											"value": "Thu, 27 Apr 2023 15:06:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160615129743771734\"\n    }\n}"
								}
							]
						}
					],
					"id": "ae322382-045a-436f-9f89-2ba397a7135a"
				},
				{
					"name": "Fetch Enquiries Stats",
					"id": "60a45fde-45ae-44a9-8e76-c0fe4df8beca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{TOKEN}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/banks/stats",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"banks",
								"stats"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sort_dir",
									"value": "ASC",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "6df8c8c9-67a6-4202-98a2-f03c2dabed1d",
							"name": "Fetch Enquiries Stats",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/banks/stats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										"stats"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort_dir",
											"value": "ASC",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Resource-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "208"
								},
								{
									"key": "ETag",
									"value": "W/\"d0-UXRJ7J3uI7kE1CiL+iizPIB9g7U\""
								},
								{
									"key": "Date",
									"value": "Sun, 04 Jun 2023 11:37:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ],\n        \"balance_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ]\n    }\n}"
						}
					]
				}
			],
			"id": "0239048a-b9c4-45ef-b05b-abaea092ae35"
		},
		{
			"name": "Keys",
			"item": [
				{
					"name": "Create Key",
					"item": [
						{
							"name": "Create Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"pm.environment.set(\"KeyID\", jsonData.data.id)\r",
											"pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
											"pm.environment.set(\"SecretKey\", jsonData.data.secret_key)\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Status is displayed as success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'API keys created successfully'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"API keys created successfully\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "38f20989-45bf-4336-8966-aab750a88125"
									}
								}
							],
							"id": "dec1b51f-4838-4f37-bdfc-e9f261dfa167",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}}\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\" : \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": [
								{
									"id": "a16c3bf7-62c8-4548-8084-7c07a0e35067",
									"name": "Create Key",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/keys"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "503"
										},
										{
											"key": "ETag",
											"value": "W/\"1f7-Ys8+7Iw1w9rH0dItFAYiu17o9kQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"API keys created successfully\",\n    \"data\": {\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"secret_key\": \"246e4ab2be56e90c2e9913fc35f2b9f60e56c29abadc80d1bcc8ede22ada5a52\",\n        \"id\": 1,\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Key - Already Existing Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'API key name exists'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"API key name exists. Use a new API key name.\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "9a0beed7-ffce-4853-b1a7-a1afba85948f"
									}
								}
							],
							"id": "1069adea-e506-4021-ba6c-c0a39c6200cb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty Name Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Name cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Name cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "18a7600c-3a85-4e91-ac76-60e32d3dc114"
									}
								}
							],
							"id": "adc4e6df-241f-420e-8ed0-dd005275f19f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty Description Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Description cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "a1f5c939-50cc-4cb1-bb38-da857792c724"
									}
								}
							],
							"id": "68d02a71-2225-4dd3-b501-5bd1d40c7c81",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty Webhook Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'webhook must be a URL address;\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "638218bf-0ffd-4715-b60e-9fc5ad7352a1"
									}
								}
							],
							"id": "eb3f5805-2e8c-44fb-be5e-103060acbd46",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"\",\n    \"timeout\": 10,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty Invalid Webhook Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'webhook must be a URL address'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "d7574e5b-4d61-49fc-80ae-0b7e9b82f3a6"
									}
								}
							],
							"id": "2d402708-5e02-420c-b346-455d126be77a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty TimeOut",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "15b12a99-af4a-41cb-b9a4-ab6ff44d1bbd"
									}
								}
							],
							"id": "751c42f1-1390-4d62-8b46-a3ae08584c48",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": null,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Invalid TimeOut",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "4c478795-a58e-41a6-903f-99bd0d324ae1"
									}
								}
							],
							"id": "0e4434ed-9f98-412f-9049-e17294bbc58a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": \"ee\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - TimeOut Lesser  than 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'timeout must not be less than 5'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 5\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "81cebdbf-a6e9-4dad-a768-a2a48a9f682f"
									}
								}
							],
							"id": "d6d1c8bf-3bd6-46a2-b037-755a753f5d0a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 4.9,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Empty Token Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c0c6b84-bd9f-4058-98a2-9ce69e66ec6e",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "469a2e0f-ef47-4243-8085-508ea183798f",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "049e3a6f-afb0-4d24-8711-fa9855038e59",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomFirstName}}Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "4164c9e0-3d5f-4d21-9538-c7128666f014"
									}
								}
							],
							"id": "6e15d519-0ac6-48d1-8812-29b9a3801035",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"0000ab\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Wrong Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "5c49303f-0c82-40cd-9224-d3494261eb37"
									}
								}
							],
							"id": "a37cdf19-bf63-42f2-bb88-833c64704593",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"000033\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Less than 6 digits Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "b150cf39-4ed2-40db-a8ee-33563764f400"
									}
								}
							],
							"id": "b0ad6e2f-9373-4351-ba70-6e9f7eaa0435",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"0000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						},
						{
							"name": "Create Key - Greater than 6 digits Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "d9a3c723-4485-4a2d-b6a9-74755a4ba52a"
									}
								}
							],
							"id": "ec328eed-ef8f-4bbc-8ebf-32381748d333",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lendsqr\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"00003367\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys"
							},
							"response": []
						}
					],
					"id": "0d483f1f-f1ab-4d5c-9996-cc5ee1709206"
				},
				{
					"name": "Fetch Keys",
					"item": [
						{
							"name": "Fetch Keys",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(pm.request.url.query)\r",
											"\r",
											"\r",
											"QueryParams = (pm.request.url.query)\r",
											"console.log(QueryParams.get('limit'))\r",
											"\r",
											"var limit = QueryParams.get('limit')\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate Page Size\", function(){\r",
											"    pm.expect(jsonData.data.meta.page_size).to.eql(limit)\r",
											"})\r",
											"pm.test(\"Validate Page Size\", function(){\r",
											"    console.log(parseInt(limit))\r",
											"    console.log(jsonData.data.data.length)\r",
											"    pm.expect(jsonData.data.data.length).to.lessThan(parseInt(limit)+1)\r",
											"})"
										],
										"type": "text/javascript",
										"id": "1ea6e3ee-b990-4ba8-a5e0-94cb626e20e8"
									}
								}
							],
							"id": "fe9ffc62-1a1a-4620-a77c-c552f08ec1a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "search",
											"value": "",
											"disabled": true
										},
										{
											"key": "search_fields",
											"value": "date",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "5b11bebb-0fce-4fca-99f6-3373f0a4902e",
									"name": "Fetch Keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "471"
										},
										{
											"key": "ETag",
											"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Keys - Check Page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(pm.request.url.query)\r",
											"\r",
											"QueryParams = (pm.request.url.query)\r",
											"console.log(QueryParams.get('page'))\r",
											"\r",
											"var page = QueryParams.get('page')\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate Page number\", function(){\r",
											"    pm.expect(jsonData.data.meta.page).to.eql(page)\r",
											"})"
										],
										"type": "text/javascript",
										"id": "1d3f5ebe-01f4-46e0-834c-41019072a577"
									}
								}
							],
							"id": "f9f05b6e-2ae6-4ac7-976f-0b8cc7558494",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "79b9d6f7-3240-4556-bc37-77ddf20314b5",
									"name": "Fetch Keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "471"
										},
										{
											"key": "ETag",
											"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Keys - Check Limit per Page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"console.log(pm.request.url.query)\r",
											"pm.environment.set(\"TotalKeys\", jsonData.data.meta.records)\r",
											"\r",
											"QueryParams = (pm.request.url.query)\r",
											"console.log(QueryParams.get('limit'))\r",
											"\r",
											"var limit = QueryParams.get('limit')\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})\r",
											"pm.test(\"Validate Page Size\", function(){\r",
											"    pm.expect(jsonData.data.meta.page_size).to.eql(limit)\r",
											"})\r",
											"pm.test(\"Validate Page Size\", function(){\r",
											"    console.log(parseInt(limit))\r",
											"    console.log(jsonData.data.data.length)\r",
											"    pm.expect(jsonData.data.data.length).to.lessThan(parseInt(limit)+1)\r",
											"})"
										],
										"type": "text/javascript",
										"id": "61911756-d5ff-476b-a682-c77c9b5346dd"
									}
								}
							],
							"id": "5c085295-cffe-4d97-a45d-cedc94be6f05",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys?limit=10&page=4",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "4"
										}
									]
								}
							},
							"response": [
								{
									"id": "f301d229-ef76-4c51-bd53-d750a4de37e9",
									"name": "Fetch Keys",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "471"
										},
										{
											"key": "ETag",
											"value": "W/\"1d7-sCUplEG4QxLfv/FbQUDM37/vNYQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"webhook\": \"https://lendsqr.com\",\n                \"timeout\": 10,\n                \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n                \"last_activity_date\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-17T03:28:13.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Keys - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "151c5da1-9fa7-498e-9b20-23c8f688de8d"
									}
								}
							],
							"id": "a948798b-002b-45d8-8aa4-e4eed567d35b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Keys - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "dadeb5f6-b43e-414a-94fb-7a0e072b01fb"
									}
								}
							],
							"id": "c7651881-9450-4248-9957-acf0e22eec1c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0OTE0NzI3LCJleHAiOjE2ODQ5MTgzMjd9.qrgElm97xxZ_W7qlOZp4zPohW7vt8JUprPEl2NMQfqp"
									}
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "7fa3ba34-2253-46d5-9193-95e44ff3a991"
				},
				{
					"name": "Fetch Key",
					"item": [
						{
							"name": "Fetch Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "7fbae32e-a3d0-4afa-b0a5-ab336d1ee6e8"
									}
								}
							],
							"id": "03e99560-8c86-4c19-b2da-7f177edea1b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "3c7f70a2-bae8-4a17-ad30-5833bd35e33e",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "6d026a31-bf23-4075-a0e2-aedf53465de0",
									"name": "Fetch Key",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "401"
										},
										{
											"key": "ETag",
											"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Key - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid token\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "5a741061-fe82-445b-837b-5ec38ecbfcc1"
									}
								}
							],
							"id": "72c410ae-560d-4b65-aa82-fbda39454804",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiSIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "41d36ff5-ad91-421c-9fba-c61cdb583c93",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "696b276e-cc50-4468-8552-4183e3d40913",
									"name": "Fetch Key",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "401"
										},
										{
											"key": "ETag",
											"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Key - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "bc583cf9-741c-43ee-9eb8-6dc389c13822"
									}
								}
							],
							"id": "5655ae54-a73e-417f-b4c3-818a29fff4ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "2e3c21e9-ecc7-4987-90ea-18814752b651",
											"key": "key_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "0d203f44-9e1a-417f-a352-ddf7c16f8bc4",
									"name": "Fetch Key",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "401"
										},
										{
											"key": "ETag",
											"value": "W/\"191-2ew6aEI8WHPujIuZLfnliGv6oEU\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:28:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "aeba5417-c4df-4dfb-b09d-4553fa3d2fde"
				},
				{
					"name": "Update Key",
					"item": [
						{
							"name": "Update Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"pm.test(\"Setting Environment variables\", ()=>{\r",
											"    pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
											"    pm.environment.set(\"KeyID\", jsonData.data.id)\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"\r",
											"pm.test(\"Validate that an accurate webhook is returned\", function(){\r",
											"    pm.expect(jsonData.data.webhook).to.contain(RequestData.webhook)\r",
											"})\r",
											"\r",
											"console.log(RequestData)"
										],
										"type": "text/javascript",
										"id": "36c15924-34fa-498a-968c-61c7f591f8be"
									}
								}
							],
							"id": "1ce5805d-28df-4628-a786-c57a12b6134e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"webhook\": \"https://webhook.site/688e8a2e-8d39-4622-9b90-a3f91e1c239e\",\n    \"token\": \"{{2FAToken}}\",\n    \"external_encryption_public_key\" : \"-----BEGIN RSA PUBLIC KEY-----MIIBCgKCAQEAtA0cGzgNtMgLibR6BTBzCODx2yrZgnOoTwEG3drWHYCymaJPZ/qVCV1OzjA+NQlCuPatRUVQ4n/K5vymu44OXPeBQFbxjaDIMZ4FnmvQEmdqrJkrVxODPH2Se0WvZm2jd/k7OQPR1J0h93rWzpkk6u600BYggOOASFcnmN7LVm8Ef8OeKBSZuqFsnUtIFL1+vbcY9zvWdxrB+v4gIMrkhsN9Wr3S+FucFM+MkeduX3bCKbgGanZlBbHmskQwzibKdAZmndwxwADBqzSN799+sdabgBVb3xNPWr00VqQyVeIS9vLHXxk0mS80ZIWCMxu7vesBlTKzdthxE641cBmJBQIDAQAB-----END RSA PUBLIC KEY-----\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "1cf25b67-f724-4287-b167-e2d042645952",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "ca780ffa-bfbb-4ce0-b35b-f7c1a9a65ec1",
									"name": "Update Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Admin\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "401"
										},
										{
											"key": "ETag",
											"value": "W/\"191-LzJJQggEmaDs/MiJBdIHe15bRwY\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:29:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"id\": 1,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:28:13.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update Key - Empty Name Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Name is required'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"property name should not exist\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "47688ede-d98b-4957-88b0-2fc7b5722b92"
									}
								}
							],
							"id": "ed2e23e2-4b73-430d-a27d-a165751076a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"\",\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "3ff67c94-4cd5-4a72-9ddd-d96710e4910e",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - Empty description Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Description is required'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "85f7adfd-d357-4b44-aa98-8a5353ec2787"
									}
								}
							],
							"id": "2f24c83b-5c09-4316-b891-f2dfa6d40b5f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n    \"description\": \"\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "8b45b9e6-31f8-41a4-bf66-ba042ae63b81",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - Empty timeout field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Timeout is required'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"timeout must not be less than 1\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "43bf5c36-b665-4f26-a955-d494d771d5bc"
									}
								}
							],
							"id": "96a7e150-0345-44a3-9f1d-20afd18c7d74",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": \"1a!0\",\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "27f41974-85f8-466a-beec-ac9c0409ecad",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - Empty webhook field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Webhook is required'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"webhook must be a URL address\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "3de82d80-49ee-4735-8a33-20bb6f354322"
									}
								}
							],
							"id": "3106657c-abe1-4bb8-9208-7a53efa73c80",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "55af7015-3c18-4f32-a5a9-af06e1bd4ddf",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - Empty 2FA Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "591ab999-c5ad-4b39-aa5c-87c9426e8b41"
									}
								}
							],
							"id": "fea82357-7f45-445d-b342-22afdc0523a4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "8209080b-57bc-44d2-a463-d9e15345ae78",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - Invalid 2FA Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "13df5ad9-acba-4da3-843f-b66efc162959",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3fe69966-6f44-4bd1-a565-2b44cf3cc6b7",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "b526dff2-82c6-461b-b5c8-022815b2acda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"189789\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5722f52f-de99-4d49-af2b-cf22ae47a9ba",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "558778ad-65ca-4dbf-8e55-1cd823ef7198",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "b3355344-c375-45d3-8d24-925468560340",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Key -  Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c9f86c64-e795-466c-924b-08f36cdf0075",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aa773cce-0487-44d6-9fc1-74e91db722a2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "afbe8eef-1498-465f-a83e-627bdeb98943",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Admin\",\n    \"webhook\": \"https://lendsqr.com\",\n    \"timeout\": 10,\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "bd356390-eac9-4a8f-a879-0312b2a511aa"
				},
				{
					"name": "Reset Key",
					"item": [
						{
							"name": "Reset Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"var RequestData = JSON.parse(pm.request.body.raw)\r",
											"pm.test(\"Setting Environment variables\", ()=>{\r",
											"    pm.environment.set(\"KeyName\", jsonData.data.name)\r",
											"    pm.environment.set(\"PublicKey\", jsonData.data.public_key)\r",
											"    pm.environment.set(\"SecretKey\", jsonData.data.secret_key)\r",
											"    pm.environment.set(\"KeyID\", jsonData.data.id)\r",
											"})\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that an accurate API Key Name is returned\", function(){\r",
											"    pm.expect(jsonData.data.name).to.not.empty\r",
											"})\r",
											"pm.test(\"Validate that an Description is returned\", function(){\r",
											"    pm.expect(jsonData.data.description).to.not.empty\r",
											"})\r",
											"pm.test(\"Validate that an accurate webhook is returned\", function(){\r",
											"    pm.expect(jsonData.data.webhook).to.not.empty\r",
											"})\r",
											"pm.test(\"Validate that an accurate timeout is returned\", function(){\r",
											"    pm.expect(jsonData.data.timeout).to.not.eql(null)\r",
											"})"
										],
										"type": "text/javascript",
										"id": "2c32df75-8ee6-442f-9b7f-63904de197bd"
									}
								}
							],
							"id": "852a38e7-6bae-4bcd-8c01-aef4807cf959",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"variable": [
										{
											"id": "a10d595e-90c0-483d-bf39-8299841a2877",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "901e6475-13b0-471e-a40a-a4bc0a184265",
									"name": "Reset Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/reset",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "478"
										},
										{
											"key": "ETag",
											"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:29:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Reset Key - No Key_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "4224da96-529f-4b60-9b2b-82e7b130f150"
									}
								}
							],
							"id": "82593bd4-aeab-4108-bbda-02fd40e19863",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"variable": [
										{
											"id": "fabf07a7-5955-4cd0-a4a5-60848613187c",
											"key": "key_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "29ed0494-dee0-4e24-9ca8-94fe4210a180",
									"name": "Reset Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/reset",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "478"
										},
										{
											"key": "ETag",
											"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:29:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Reset Key - No 2FA Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "366221a5-18e7-47cc-8275-d681f21ff1e9",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8c5c9b24-c5ad-4c0a-8d28-d4dabe7492fb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5e0809ee-7482-466c-aa35-55ea6bed62d8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"172454\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "229b6dbf-68e8-4ea0-8abf-d1d830c87f1a",
									"name": "Reset Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/reset",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "478"
										},
										{
											"key": "ETag",
											"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:29:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Reset Key - No Invalid Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c77d4f6b-7e19-449b-a696-8cbeee66954b",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Invalid 2FA Token'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9f55c957-2db1-4273-ada1-3d9c16039e6f",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "778ec10c-ba67-4535-b2a0-d62cb681a534",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"172\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "1a1a6d0e-e6c3-4354-8828-8db7b55d6b99",
									"name": "Reset Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/reset",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												"reset"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "478"
										},
										{
											"key": "ETag",
											"value": "W/\"1de-D/YKfPa7JnZuQMWLjC08Dxr9BkM\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:29:37 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"modified_by\": 1,\n        \"secret_key\": \"2951ce5d9efe9eb9f2ce3bb4eb85e599b221efdfb2a56ec98234e9e8f6d88a65\",\n        \"id\": 1,\n        \"name\": \"Admin\",\n        \"description\": \"Admin\",\n        \"webhook\": \"https://lendsqr.com\",\n        \"timeout\": 10,\n        \"public_key\": \"fd2dbde53bb2b0e74326df9a6a27c187\",\n        \"last_activity_date\": null,\n        \"status\": \"active\",\n        \"created_on\": \"2023-04-17T03:28:13.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-17T03:29:37.000Z\",\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Reset Key - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ea1d97e9-71ac-42f5-b870-e76b73c94aea"
									}
								}
							],
							"id": "9760e939-04fd-4bc0-becb-2f921a6ca35a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"172454\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"variable": [
										{
											"id": "05d16a87-c7e5-4d5c-a5b0-0b34eb8edc6b",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reset Key - Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "19e80e9e-ca23-4031-a3f1-1096ab5a7faf"
									}
								}
							],
							"id": "4e8edf55-92c1-4148-9ca1-c3c01cbb55fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{base_url}}/keys/:key_id/reset?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										"reset"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "8b1bc514-55cd-48b3-a117-bb03803c7e9a",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "64f4a072-5b45-4929-bbff-c5f538c3599b"
				},
				{
					"name": "Activate/Deactivate Key",
					"item": [
						{
							"name": "Activate/Deactivate Key - Deactivate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e31977fc-f8a0-47d4-ab7b-a8db9e896b54",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a0896dc4-5871-4a0e-84be-886cea47fa2e",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3c6a661a-1ffc-4c96-a471-cb51e552265e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "6324beef-ac4b-433e-8f62-7b5c802da334",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "1aa697d4-f06d-4fca-b4b9-787f69270f22",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": [
								{
									"id": "d401534d-457d-4c83-b621-b67b23a51ebf",
									"name": "Activate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:30:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								},
								{
									"id": "8584df58-7347-40e9-9513-178922dc3384",
									"name": "Deactivate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate/Deactivate Key - deactivated Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "930bef45-17b1-4516-93b5-76680acef75e",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Cannot deactivate an inactive key'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate an inactive key\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d986dc31-ec7a-4b3f-9240-cb062aba4556",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1b6ec2ae-384c-41cb-9297-020018b72a18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "0e64b5b9-f01f-4013-954a-3b7ec0821522",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "8b4b00fd-8772-4602-854b-bd06f63bb6ee",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": [
								{
									"id": "874d5e11-84cb-4a76-9774-2758fb517231",
									"name": "Activate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:30:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								},
								{
									"id": "df58dd0f-9f3a-4b20-9ae5-f12aef3e99d3",
									"name": "Deactivate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate/Deactivate Key - Invalid Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f571005-b24b-4702-96db-82b4edb78244",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'type must be one of the following values: activate, deactivate, approve'\", function(){\r",
											"    pm.expect(jsonData.message).to.include(\"type must be one of the following values: activate, deactivate, cancel, approve, decline\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "254a71c8-5dc0-42c9-a6f7-376c899a1056",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "8649fdbf-3e7c-4367-8b8e-35db43cef8ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"980999\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "54bc5fdc-12fb-47fa-9cd7-c361a02bc03b",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "03cffc34-3c8c-4bc8-817f-4f496ff11d00",
											"key": "type",
											"value": "deac"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Key - Invalid Key_id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1bec7dfb-95f2-4531-9bf2-1247a53b27bc",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "57bcaa91-5416-4d08-b859-e27549fe37f1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d1689773-d282-4f1a-808a-6cd9d075ddcc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "0e19b98a-6358-4a92-9b56-ef11324abdaf",
											"key": "key_id",
											"value": "as"
										},
										{
											"id": "b4d7e154-12a5-4f07-94f5-52679216ed97",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Key - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c73d636a-1a02-4ea3-a89f-f31fa68c8f2a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c6d8afd6-007c-454c-9c67-c701ee172dbd",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9a488cbc-1760-4b9f-b4ec-83bbf7aa109b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "7779a26d-848b-4bad-a915-d9d9e4d6af14",
											"key": "key_id",
											"value": "1"
										},
										{
											"id": "2317529e-8c00-414e-a1dd-5c3ffd309f94",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Key - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9ba5328b-8c78-4f07-9954-35bacfd934f3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5924492d-e2e0-4151-a325-065ffd622efb",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "0bedd37b-bcb9-4514-8992-c4ba993d5291",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1MiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "2d77bfc8-5bb9-4fb8-b897-f8d9ba21101e",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "b8fb6e6d-1a77-41a4-8349-b09ca3d15b77",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Activate/Deactivate Key - Activate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8b5373cb-e618-449c-b684-af3f2e051ab3",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "431c8e28-5d20-43c6-b9de-13f0883f7384",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d7e780dc-c8ad-4ea6-b90a-33930ed7ba7d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "dc7489db-b24f-4761-9871-bdd801d85139",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "9d9e93bb-9587-43e5-a222-f7999f1c0692",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "e1e1b102-a1fa-41e2-b38b-f7ce12b20f24",
									"name": "Activate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:30:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								},
								{
									"id": "ac78f13a-66ee-475b-adf0-66c9d1e9e5fd",
									"name": "Deactivate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						},
						{
							"name": "Activate/Deactivate Key -Activated Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d551b8ec-ea71-4176-a389-52554beb9c24",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is Bad Request\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Cannot activate an active key'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Cannot activate an active key\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2db4e847-7a31-4aa2-a5b1-a6877d00b6a2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e92e1f1d-0ed7-4023-9d61-e513ebcee545",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"token\": \"{{2FAToken}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id/:type",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id",
										":type"
									],
									"variable": [
										{
											"id": "7213bf16-a19c-4f92-bbd0-1213a73adc38",
											"key": "key_id",
											"value": "{{KeyID}}"
										},
										{
											"id": "18f2d06f-e2c0-4e81-9525-2a77a6ba4a7d",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": [
								{
									"id": "bf473913-dffb-4ce9-8dd7-3800839d2a11",
									"name": "Activate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:30:45 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								},
								{
									"id": "948158a4-d722-48ba-8a92-2b3246ee520f",
									"name": "Deactivate Key",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id/:type",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id",
												":type"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												},
												{
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "40"
										},
										{
											"key": "ETag",
											"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:11 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
								}
							]
						}
					],
					"id": "02181a12-31cb-4fda-91b4-879bd0479b9a"
				},
				{
					"name": "Delete Key",
					"item": [
						{
							"name": "Delete Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "839650dc-2f9e-4bfd-99d6-341b69094c93",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"data is 'null'\", function(){\r",
											"    pm.expect(jsonData.data).to.eql(null)\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0fd340c9-7cf1-4310-9e8d-3a9f337fbffd",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "dbb462f8-ee84-4afa-ac55-ebd79641c3b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "c9972e34-4323-4147-a57f-128689ba2119",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "fe5aeadf-f744-459a-82ff-e3a9f6cccda4",
									"name": "Delete Key",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Delete Key - Already Deleted Key",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "739ca533-3d0e-4674-8016-09f94d479823",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Key not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e86f91c9-0784-4d90-b60e-8a4aa97b2922",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "549c1a52-4ad2-4fa1-9a4d-d76c85941a2d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "09348492-4bb3-456e-8fdf-bf2587417f58",
											"key": "key_id",
											"value": "{{KeyID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "bf574bb2-d0da-4ecb-994a-1fb963086d84",
									"name": "Delete Key",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/keys/:key_id",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "key_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "52"
										},
										{
											"key": "ETag",
											"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
										},
										{
											"key": "Date",
											"value": "Mon, 17 Apr 2023 04:31:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
								}
							]
						},
						{
							"name": "Delete Key - Invalid Key_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7452f367-d83f-42d4-b142-c5a183cdcb1c",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2a089518-e6f8-458e-90e7-6c09f0692702",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "fac93710-5743-4d5d-939c-5ea3b47483d3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "238b12e1-389e-475f-8c72-3fff3b552bd7",
											"key": "key_id",
											"value": "re"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Key - Empty Key_ID field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a698202f-ef82-46fc-bef0-79706a9c33a1",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Key not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Key not found\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c2518cd2-a8b9-428b-82d9-e3d2a4c43a0d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "0be598df-9624-435e-b983-653fb5a9beaa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "b2ac4abf-ae03-4fa3-9481-f14e24ea8a09",
											"key": "key_id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Key - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a6fb34fc-bbbd-476d-ab52-0d7d029963ab",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ef124c99-b336-4e6d-b47f-9fdf11253fe2",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3674d2e8-f757-4640-a237-71a9f1c9e5aa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "bd49114f-d0e0-4f53-b564-fc50d43e73fd",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Key - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9c945b0c-60c0-4d00-b978-52520d6bc703",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "feb4d71c-f345-4bc7-8d88-5b602663e834",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f72cbd79-d50a-49ea-8d3a-b2b6cf3b100f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/keys/:key_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"keys",
										":key_id"
									],
									"variable": [
										{
											"id": "c691651d-cb1a-4af5-b412-a4f17504e5ac",
											"key": "key_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "49c46854-1006-42c3-a42b-9ea3337b41e6"
				},
				{
					"name": "Fetch Key Logs",
					"item": [
						{
							"name": "Fetch Key Logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a4156dc-21ab-4b7c-9637-e6f57d478f7a",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7519694b-6225-4e0a-a8eb-bb5a372eb519",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6ed74c6d-0b5a-4369-a013-61a8a0fc3ce9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/logs"
							},
							"response": []
						},
						{
							"name": "Fetch Key Logs - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dee9277f-5757-421f-92b7-7d23fffd4072",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d1f9781f-094d-4100-a372-f11cfd870739",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "f3ffee66-e666-4302-a865-6dfa94d8c3e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/logs"
							},
							"response": []
						},
						{
							"name": "Fetch Key Logs - Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1d227afd-4258-4465-98fa-3fa645808bff",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "14828cd7-6a81-474d-8bc2-db31c49891be",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "c72744d9-06bb-4ec3-8fe9-4fbba064f550",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzp"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/logs"
							},
							"response": []
						},
						{
							"name": "Fetch Key Logs- Expired Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "934ea306-2fc1-406a-ad49-384475cbd752",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'jwt expired'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68d70f0d-c573-4a75-bfe2-885b3b24b9b4",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b51f5dc-1d4d-472a-af75-f88f0cfc6af4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/logs"
							},
							"response": []
						}
					],
					"id": "015f482a-48dc-4284-8835-66f87392c4e8"
				},
				{
					"name": "Fetch Webhook Logs",
					"item": [
						{
							"name": "Fetch Webhook Logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e84ab357-041e-4cdb-a47b-89afd91dd7d1",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "be5c19e8-1546-4ef2-9e6d-7089981e1c0d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "bf9d4aa7-6710-4153-a4b6-4a6f4cfeab84",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/webhook-logs"
							},
							"response": []
						},
						{
							"name": "Fetch Webhook Logs - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "689b1d6b-043b-4fac-bca9-cb20bed214a8",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "43f60604-0e1b-481f-92b8-e158b982445d",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b50ad68-8fe4-48f5-a776-92be304c91b1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/webhook-logs"
							},
							"response": []
						},
						{
							"name": "Fetch Webhook Logs - Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "213cf15f-5af1-4664-832b-9b313153166a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "af36b65c-0ed7-45c7-b57d-29e35ef719ea",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "79b01125-4a44-479b-b139-96eb5e3ceb77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzp"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/webhook-logs"
							},
							"response": []
						},
						{
							"name": "Fetch Webhook Logs - Expired Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69900801-a0f8-410e-adb0-b5664f3b2f7d",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'jwt expired'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5abb1028-6d40-4409-8bd7-a9affbfea538",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "859bf171-cd83-4e05-8857-ca5309c58739",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/keys/webhook-logs"
							},
							"response": []
						}
					],
					"id": "45ca6d01-a4aa-4e35-9d96-fd0b25b31c5c"
				}
			],
			"id": "76c0c1b9-77a6-4b45-a344-20599348fd83"
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Create Subscription",
					"item": [
						{
							"name": "Create Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json();",
											"var RequestData = JSON.parse(pm.request.body.raw)",
											"pm.environment.set(\"subscription_id\", jsonData.data.id)",
											"",
											"pm.test(\"Status code is 201\", function(){",
											"    pm.response.to.have.status(201);",
											"})",
											"pm.test(\"Status code is Created\", function () {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'Mandate created successfully'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")",
											"})",
											"pm.test(\"Validate that an accurate account number is returned\", function(){",
											"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
											"})",
											"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
											"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
											"})",
											"pm.test(\"Validate that an accurate email is returned\", function(){",
											"    pm.expect(jsonData.data.email).to.contain(RequestData.email)",
											"})",
											"pm.test(\"Validate that an accurate amount is returned\", function(){",
											"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
											"})",
											"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
											"    pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e594953c-19e3-4391-a46b-8b3684c88e5d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "64536fe7-1a29-40de-a1de-6a4b213d2dc3",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No account No",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "1765b5d4-9509-4aa4-b974-56b159dde0f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "d1dfce51-c934-4510-844f-24b3b786a6fc",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - Invalid account No",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7c4baea9-5961-439b-ab65-b2ab94a2034d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "2c407605-3db5-4ccd-909f-ac8573b3b1a5",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No frequency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "013b6c6a-c526-4832-87de-ac156c632eb5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "013c9767-8681-48e7-9123-317fdcf3192b",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription -Invalid frequency",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0bbefb07-004a-4fa9-869d-1ba76ceb52be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "c7871aec-0eae-47e3-b301-8ee04b278ac9",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No bank code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "36b93817-5bec-49a9-b268-a12fb0ba6dc2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "36a17475-d2eb-4267-84c7-d688c70b01ae",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - invalid bank code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "5ab2d10b-69cd-45c2-9e4e-f42abf7729c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "5d6604fb-be71-4509-8647-84ac549a894f",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - mismatched bank code and account number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8be66b24-fa2f-41de-8353-9a2370a663c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "05978f58-75f2-4308-8881-67dbf1253058",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - Non-existing bank code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e1f9a415-2038-46d3-81fb-dc9ca86dc5f8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "f1eb322d-f88c-4a8f-89e8-adf37e2cf28d",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7e32ca93-14b4-4f4a-aeb6-3e6ffc91210d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "d00548ed-116a-4df3-a831-b8f5a75f3e10",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - Invalid email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bc969bfd-cb49-4525-91d8-8014bfad806d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "2479c811-3fef-4024-8bb5-e7b99e928f45",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "a99b3447-bf45-4310-bedc-b0075016ac2b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "58a75fe7-5146-47f0-855f-5fd59845cc0d",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - start date in Past",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4893104e-a81f-4c79-a4ec-a95b6bc93c3a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "7dd6b772-3dcf-4778-9942-2f4805472ab9",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No end date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "392b192f-9f94-48fd-967c-34f153a95e03",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "30d379e2-8411-4b58-a79d-afd57db04cc7",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - End date in past",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b6d417b1-8c59-4992-a83d-c6842132c44d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "f787ec80-a2bc-4596-a83b-8c28be18389e",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - End date greater than start date",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c5da367e-0914-45ab-82a5-968b5dd7092c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "83dff4c9-6013-4e2e-9e1f-9b592680cfde",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No narration",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4e0c9bd0-60dd-4631-bf7a-794c125023ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "9792d42e-96ef-4db5-a168-2f72124ca78e",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "36a50ae4-560b-4c77-bf24-72878958fb22",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "c84d7dea-a230-4ca1-86e3-96cd1f495f8b",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - invalid amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8821a74e-14f2-4829-8319-5423d606b6ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "0a2701cf-1dd1-4f14-88fa-a68fcf392702",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - negative amount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c0b09a63-b0c7-41a1-b2b3-f3c17f3e8209",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "42c5f79a-2701-49f2-88ab-7523cf986d1f",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - Amount lesser than system threshhold",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6582ae1d-195e-4e09-8be1-6d1d55790145",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "e8defa74-d903-41e2-80ec-cbd8a1a2a4dd",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Subscription - No token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
										"exec": [
											"var jsonData = pm.response.json()",
											"",
											"pm.test(\"Status code is 400\", function(){",
											"    pm.response.to.have.status(400);",
											"})",
											"pm.test(\"Status code is Bad Request\", function () {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											"pm.test(\"Status is displayed as Error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"Validate empty fields\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "42244855-842c-4e84-8f0b-b6c3bd8af0d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/subscriptions"
							},
							"response": [
								{
									"id": "3435f928-a75c-4dd4-a50c-7075b2836a97",
									"name": "Create Subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "725"
										},
										{
											"key": "ETag",
											"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:49:40 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
								}
							]
						}
					],
					"id": "7b805bfe-3bd7-4609-87df-a1bad42c6203"
				},
				{
					"name": "Fetch Subscriptions",
					"item": [
						{
							"name": "Fetch Subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "0ce76c86-86f6-45a1-bb9e-5dcceb165c6a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=44",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "mandate_id",
											"value": "44"
										}
									]
								}
							},
							"response": [
								{
									"id": "cc9afad3-8b08-4165-914b-d8aa7f9cdb82",
									"name": "Fetch Subscriptions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "785"
										},
										{
											"key": "ETag",
											"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:50:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscriptions - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "bdcd2218-8c50-44e5-8c9e-6d7ef3aaddb7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "8b37e4c0-0d7f-4711-a875-5e9922c941a7",
									"name": "Fetch Subscriptions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "785"
										},
										{
											"key": "ETag",
											"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:50:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscriptions - Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d2c64104-444d-4450-a4e2-9370c13dafdf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "d8aa6dbb-c935-460e-8100-bd0fe94cb550",
									"name": "Fetch Subscriptions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "785"
										},
										{
											"key": "ETag",
											"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:50:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscriptions - Expired Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "065bf775-35ba-4290-9fcf-6e1ef3cca0fa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "mandate_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "132fd32a-12b0-41a1-8d1d-45d1f130eb69",
									"name": "Fetch Subscriptions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "785"
										},
										{
											"key": "ETag",
											"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:50:46 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "954ca577-fef8-4818-a0e4-80958ea9427c"
				},
				{
					"name": "Fetch Subscription",
					"item": [
						{
							"name": "Fetch Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "d5a62b62-2701-497c-97fe-9e97114ce5dd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
											"key": "subscription_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "793ecbd8-457e-4843-9509-52c7783c64d9",
									"name": "Fetch Subscription",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:51:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "17d732b5-a27c-418c-8ff7-bcf340a100a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
											"key": "subscription_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "c229976d-acf3-4e0e-9d3d-74a3194d9273",
									"name": "Fetch Subscription",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:51:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription - Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "686ef10a-ccea-4dc4-99e5-60bf3e10fb68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
											"key": "subscription_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "d955b0d8-7b85-4798-b43f-52eef8d480eb",
									"name": "Fetch Subscription",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:51:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription - Expired Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "442f5e5c-3315-4d1f-b065-93d7bdefb2c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id"
									],
									"variable": [
										{
											"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
											"key": "subscription_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "22512bb4-3ef8-4530-ae9d-a0385b7bc965",
									"name": "Fetch Subscription",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:51:43 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "97c51d8e-fda0-43df-b0f8-19ca30f5c2bd"
				},
				{
					"name": "Fetch Subscription Stats",
					"item": [
						{
							"name": "Fetch Subscription Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5f44890c-04e7-4b5e-832c-076fa69b3faa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										"stats"
									],
									"query": [
										{
											"key": "start_date",
											"value": "2023-05-1"
										},
										{
											"key": "end_date",
											"value": "2024-05-1"
										}
									]
								}
							},
							"response": [
								{
									"id": "e3b9f8bf-ab6e-46dc-b639-0a5097d26548",
									"name": "Fetch Subscription Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "ETag",
											"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:52:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription Stats - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "5400fea0-6e63-468d-96ab-0a67fbbd3dee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										"stats"
									],
									"query": [
										{
											"key": "start_date",
											"value": "2023-05-1"
										},
										{
											"key": "end_date",
											"value": "2024-05-1"
										}
									]
								}
							},
							"response": [
								{
									"id": "910297c6-ace5-4bc8-8679-d64d574a11c2",
									"name": "Fetch Subscription Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "ETag",
											"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:52:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription Stats - Invslid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "6286999d-9218-4257-acaf-ee6ad38d1132",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										"stats"
									],
									"query": [
										{
											"key": "start_date",
											"value": "2023-05-1"
										},
										{
											"key": "end_date",
											"value": "2024-05-1"
										}
									]
								}
							},
							"response": [
								{
									"id": "d6a6614a-484c-4779-9a8c-d1756dedc13c",
									"name": "Fetch Subscription Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "ETag",
											"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:52:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Subscription Stats - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e703f489-8469-4a13-8505-318b33f0a002",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										"stats"
									],
									"query": [
										{
											"key": "start_date",
											"value": "2023-05-1"
										},
										{
											"key": "end_date",
											"value": "2024-05-1"
										}
									]
								}
							},
							"response": [
								{
									"id": "8c6a2f86-3275-4c86-a76c-3b22670280e7",
									"name": "Fetch Subscription Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-encryption-key,x-encryption-iv"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "80"
										},
										{
											"key": "ETag",
											"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
										},
										{
											"key": "Date",
											"value": "Sat, 16 Dec 2023 10:52:39 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "d1abf57f-c8f5-4e54-b5f1-74a7a8af3697"
				},
				{
					"name": "Activate/Deactivate Subscription",
					"item": [
						{
							"name": "emandate Activate - Activate/Deactivate Subscription",
							"id": "00b678ea-a546-4fdb-a046-4ca1e0b27cb8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "12"
										},
										{
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "manual mandate Activate - Activate/Deactivate Subscription",
							"id": "6f3cadac-09fc-488f-8286-a44e79344200",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"signature\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"key": "subscription_id",
											"value": "13"
										},
										{
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate - Activate/Deactivate Subscription",
							"id": "65bd3fdc-724b-472e-a954-e41302e35f2c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"narration\": \"test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
											"key": "subscription_id",
											"value": "1"
										},
										{
											"id": "512923a2-db54-4169-8a08-85071a378c4f",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "No Auth - Activate/Deactivate Subscription",
							"id": "ab97c582-4933-4cb6-91fc-c3b0fa1a7fda",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"narration\": \"test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
											"key": "subscription_id",
											"value": "1"
										},
										{
											"id": "512923a2-db54-4169-8a08-85071a378c4f",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invalid Auth - Activate/Deactivate Subscription",
							"id": "88d473ad-0e3a-496a-b3e7-8e74d874db85",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"narration\": \"test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
											"key": "subscription_id",
											"value": "1"
										},
										{
											"id": "512923a2-db54-4169-8a08-85071a378c4f",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Expired Auth - Activate/Deactivate Subscription",
							"id": "20c204e5-4b11-48a1-820a-9cec003add93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"narration\": \"test\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"subscriptions",
										":subscription_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
											"key": "subscription_id",
											"value": "1"
										},
										{
											"id": "512923a2-db54-4169-8a08-85071a378c4f",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "0311ecc6-6a09-48a8-8b86-86093fd3ac9c"
				}
			],
			"id": "21966969-e2df-44f1-a66c-f0431b6c8f57"
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Fetch Roles",
					"item": [
						{
							"name": "Fetch Roles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5297646f-c04f-4725-a7c3-75389b780301",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a38f5a21-9f7e-417f-acb9-b6b232b6dd5f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3b1ee93f-76e0-4f03-8331-e4b265d982b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "sort_dir",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "inactive",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "461bfe4d-cad4-449b-bea7-f5f51c5637b5",
									"name": "Fetch Roles",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/roles?limit=10&page=1",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "633"
										},
										{
											"key": "ETag",
											"value": "W/\"279-KO0JgYx63xRZJcd9OsLykVv98x4\""
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Apr 2023 07:08:35 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T07:00:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T07:00:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 1,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T06:47:54.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T06:47:54.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								},
								{
									"id": "59f6b02d-c800-486f-a31f-6fe879402992",
									"name": "Fetch Roles (Active)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=active",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "DESC"
												},
												{
													"key": "status",
													"value": "active"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "15768"
										},
										{
											"key": "ETag",
											"value": "W/\"3d98-QraPIS0OewPMi8aG2WiTggjPx5s\""
										},
										{
											"key": "Date",
											"value": "Mon, 08 May 2023 09:42:13 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 46,\n                \"name\": \"Inverstors\",\n                \"description\": \"Demo\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-07T08:54:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T08:54:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 45,\n                \"name\": \"TestRoleBE4\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T15:35:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T15:35:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 44,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T10:15:35.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T10:15:35.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 35,\n                \"name\": \"TestRoleBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T12:25:29.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T12:25:29.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 34,\n                \"name\": \"Another one\",\n                \"description\": \"Dj khaled\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T11:23:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T11:23:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    }\n                ]\n            },\n            {\n                \"id\": 33,\n                \"name\": \"TestFromFE3\",\n                \"description\": \"TestFromFE3\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:23:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T14:39:34.000Z\",\n                \"modified_by\": 8,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 32,\n                \"name\": \"TestFromBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:14:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:14:51.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 31,\n                \"name\": \"TestFromBE2\",\n                \"description\": \"TestFromBE2\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:01:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:01:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 30,\n                \"name\": \"Test Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:05:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:05:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 29,\n                \"name\": \"ccvhbbbn vhcnncc\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:04:45.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:04:45.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 35,\n            \"page\": \"1\",\n            \"pages\": 4,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								},
								{
									"id": "0e69354f-b476-4f28-9001-775f9bcc975b",
									"name": "Fetch Roles (Inactive)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=inactive",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "DESC"
												},
												{
													"key": "status",
													"value": "inactive"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "1071"
										},
										{
											"key": "ETag",
											"value": "W/\"42f-VZeJR4rs+neVJgSZD9sx0Y5CcaQ\""
										},
										{
											"key": "Date",
											"value": "Mon, 08 May 2023 09:43:00 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 26,\n                \"name\": \"UpdatedRoleName\",\n                \"description\": \"UpdatedRoleName\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-05-02T14:34:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:51:58.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 13,\n                \"name\": \"Super Admin1\",\n                \"description\": \"Super Admgin\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-29T14:16:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T11:36:12.000Z\",\n                \"modified_by\": 28,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 10,\n                \"name\": \"TestRoleNew\",\n                \"description\": \"TestRole\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-27T22:35:47.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-28T03:51:31.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "fbf5d595-38c6-4f74-a3e2-18e75cc64ac5"
				},
				{
					"name": "Fetch Roles with ID",
					"item": [
						{
							"name": "Fetch Role - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3472c5a-0994-469a-9c94-ed688059ec79",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Role not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e739fb17-3334-40c9-9a75-4bb715115aab",
										"exec": [
											"//console.log(pm.request.url.variables)\r",
											"//console.log(pm.request.url.variables.value)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c9fc8818-944b-47c5-a02d-6330af984016",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles/:role_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":role_id"
									],
									"variable": [
										{
											"key": "role_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Role - Invalid Role_Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b658781-9cea-41cc-8f65-9fcb5d6051fc",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Role not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d1d18659-04d4-4765-b0f0-c78753c21516",
										"exec": [
											"//console.log(pm.request.url.variables)\r",
											"//console.log(pm.request.url.variables.value)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "72f06e94-4849-4ba1-a3cd-b00b957fbea2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles/:role_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":role_id"
									],
									"variable": [
										{
											"id": "6eb45cfb-aa5f-444d-8377-6f5da5ee2462",
											"key": "role_id",
											"value": "ab"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Roles - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ff223af-0c2a-47dd-ad68-268dbf8676b1",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9496d29a-3937-4e26-8320-35cc8df717e9",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e91731a3-3d88-47df-bf1f-b6a76ffd79bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles?limit=10&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "limit",
											"value": "10"
										},
										{
											"key": "page",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Roles - Invalid or Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bff8f291-860f-4339-b948-a1ec1491b220",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is invalid signature\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a3f72ea2-22e2-4d3f-b4e3-1ad52f6e331b",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "59a14e5f-9f84-4824-ad86-7a2648a7abfe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ5MjMxLCJleHAiOjE2ODM2NTI4MzF9.Wk77pTneq8D0YIP9qY5r7T8TSKkOtTF8aL4moDd-F3Q",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "2822255b-76c2-451b-9ed9-890688628356"
				},
				{
					"name": "Get Permissions",
					"item": [
						{
							"name": "Fetch Permissions - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "133dc355-c940-49f0-92d7-6ce18505c761",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"\r",
											"\r",
											"    \r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b2c2657a-464b-4b5d-b74d-5cfd0cd4310c",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "4d31f881-0b96-4963-9376-ab4637902ff7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/roles/permissions"
							},
							"response": []
						},
						{
							"name": "Fetch Permissions - Invalid/ Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b31a14b6-9e69-49c5-862d-f781b7a105d7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bfa4e4b-b7ae-40c5-83fb-06a510f68b49",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e98ac1c5-7e79-4598-98c5-8cd8251910d9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles/permissions"
							},
							"response": []
						},
						{
							"name": "Fetch Permissions - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6068f14f-327e-4c69-9c76-6923442b1405",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "aef700b5-553f-408a-80c0-8a57d347d8cc",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7d9934ce-1d27-473a-a858-887f433411c6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"url": "{{base_url}}/roles/permissions"
							},
							"response": []
						}
					],
					"id": "90cdd0c2-af08-44e9-8b05-3955a814c36f"
				},
				{
					"name": "Fetch Role Stats",
					"item": [
						{
							"name": "Fetch Role Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f7237f11-8c32-4b86-9942-32b9d195fd6d",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate the active status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data[0].status).to.contain(\"active\")\r",
											"})\r",
											"pm.test(\"Validate the inactive status is present with the count\", function(){\r",
											"    pm.expect(jsonData.data[1].status).to.contain(\"inactive\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d81dc585-6df4-4d82-9cc0-8fa8ce8835f3",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "f5a81d0b-5fbb-43ad-b655-31403c49f562",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"url": "{{base_url}}/roles/stats"
							},
							"response": [
								{
									"id": "72d96700-39da-496a-9d0b-0188e5fcb270",
									"name": "Fetch Role Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/roles/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "ETag",
											"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:25:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Role Stats - Expired Tken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a575d1b-2dc2-436b-b2d4-8a76ff8ab84a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "4d4cefd9-57ec-4999-b2db-a8c03db16b02",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "195139a4-1aca-47db-9c15-085eaf97bc99",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles/stats"
							},
							"response": [
								{
									"id": "bf2c89e7-bc6e-41f2-85f8-db26be08f38e",
									"name": "Fetch Role Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/roles/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "ETag",
											"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:25:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Role Stats - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a8ab8c80-ecb5-434d-b63d-4485d9ac0cda",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"var Request = JSON.parse(pm.request.body.raw);\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9f06972b-6b26-4183-ae73-a2861b3ef2ad",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "52ba1ffe-0c88-4166-a2e1-3ed7740fde8c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles/stats"
							},
							"response": [
								{
									"id": "0285dd56-3cee-46e3-82a2-a8510c30ac99",
									"name": "Fetch Role Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url_v1}}/roles/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "112"
										},
										{
											"key": "ETag",
											"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
										},
										{
											"key": "Date",
											"value": "Tue, 09 May 2023 06:25:12 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "d1b3abe9-630f-4927-ae82-7e82148e0423"
				},
				{
					"name": "Create Role",
					"item": [
						{
							"name": "Create Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2570f15-2942-44e6-bbe2-c4802b92e714",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"pm.test(\"Statu is success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Error message should be 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Role created successfully\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9257463f-cd93-471e-88d0-9da28d37bc15",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "30466f58-c2d9-4570-8ddb-325d104d68c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/roles"
							},
							"response": []
						}
					],
					"id": "678f85d6-6a03-4e63-a327-5dba2f860363"
				},
				{
					"name": "Activate Role",
					"item": [
						{
							"name": "Activate Role - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a2caf89c-e053-415b-97ce-d556bf0090b8",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Statu is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Error message should be 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c1dd8c10-9b6d-4305-81fa-3205870fcbce",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "dadadb74-2b86-43d2-b439-231ffb1bf13e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":role_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "59159db6-efbb-4564-a9c7-8187ef7ab66d",
											"key": "role_id",
											"value": "{{RoleID}}"
										},
										{
											"id": "ceeb7caa-6201-440b-a346-8a594dad51c0",
											"key": "type",
											"value": "activate"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "cf871a86-f34f-45f7-be99-1120fb197571"
				},
				{
					"name": "Deactivate Role",
					"item": [
						{
							"name": "Deactivate Role - Valid",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eaca73ed-fff9-4e6c-b6c3-ab062a688a36",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Statu is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Error message should be 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30097c5d-9dba-43c7-bb91-4f96373f0b26",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "666872ce-ffd4-4bb8-aa0c-076c108dc62c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":role_id",
										":type"
									],
									"query": [
										{
											"key": "token",
											"value": "000000"
										}
									],
									"variable": [
										{
											"id": "69e4b959-52a0-48f0-ae66-0887f26bdbdd",
											"key": "role_id",
											"value": "{{RoleID}}"
										},
										{
											"id": "48d40d4e-ae61-4e34-9f7b-345f4a9512cc",
											"key": "type",
											"value": "deactivate"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "ec5bc4a3-10dd-42a1-bfac-5a3068594dd2"
				},
				{
					"name": "Update Role",
					"item": [
						{
							"name": "Update Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "22916151-4215-41d0-bdc6-3a606e931df3",
										"exec": [
											"var jsonData = pm.response.json()\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Statu is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Error message should be 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "76b3b84c-ee31-47fc-a95d-45eb710f03e2",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "d43117d8-3b50-4f03-bdba-dbe12aa09fce",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{BillerTOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"permissions\": [\"add_users\", \"view_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/roles/:role_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"roles",
										":role_id"
									],
									"variable": [
										{
											"id": "526e3bc2-d9ab-4a97-be55-ad4fd6821817",
											"key": "role_id",
											"value": "{{RoleID}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "9c7afe3c-9eae-4df8-ad7d-f6e6863bf20e"
				}
			],
			"id": "6b1c6178-c808-4c7d-99a2-685a90721021"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Fetch Transactions",
					"item": [
						{
							"name": "Fetch Transactions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"transactionID = jsonData.data.data[0].id\r",
											"pm.collectionVariables.set(\"transactionID\", transactionID)\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "71c38537-bbc9-4223-ae2b-4f36f2a857ca"
									}
								}
							],
							"id": "cce0e627-7b1e-4bb1-b7a3-d0288554e028",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "d91396e7-2874-411a-b2f3-9897a88ad838",
									"name": "Fetch Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6358"
										},
										{
											"key": "ETag",
											"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 19:57:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transactions - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ca65b72a-46ec-4746-9417-37a0db14b17b"
									}
								}
							],
							"id": "4003b41c-d0cd-42d0-aec5-b782dfd3524c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "9923460c-b02f-4c57-a023-6a96abf6ddf7",
									"name": "Fetch Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6358"
										},
										{
											"key": "ETag",
											"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 19:57:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transactions - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee04bee9-5861-48c6-b312-f652cfd8c8b7",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6b0b7e17-1c70-4ad8-870e-98d55d59bdda",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "12a7b8b1-9e9c-4861-95d7-bc2b244cc70c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "9e38dc94-9c5d-42f2-af85-1076ec17c31c",
									"name": "Fetch Transactions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6358"
										},
										{
											"key": "ETag",
											"value": "W/\"18d6-N+2vmcejoT1bkmPrKAQjv5OB1S8\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 19:57:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 15,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-cU26qsO05mGCSGn\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:07:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:07:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 14,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-3o2GiHnia6jN6Pr\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:06:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:06:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 13,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Cjjff5HuLHhMJ8e\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": \"{\\\"responseMessage\\\":\\\"Your IP address is not allowed\\\"}\",\n                \"meta\": \"Your IP address is not allowed\",\n                \"status\": \"successful\",\n                \"created_on\": \"2023-05-11T06:05:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:05:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 12,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-Gsug1bGS6CwaHdM\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:04:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:04:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-TKi1rQyKR6vOC6G\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:03:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:03:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-2l2v98435xmTPoO\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:02:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:02:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 9,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-OxcbmRTEUU3M68D\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:01:04.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:01:04.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-uCQcSPb6uURUVlD\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T06:00:02.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T06:00:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 1780004070,\n                \"mandate_bvn\": \"33333333333\",\n                \"reference\": \"SDD-WaU58rspfvjJ4Rq\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:59:01.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:59:01.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"type\": \"debit\",\n                \"mandate_id\": 7,\n                \"mandate_account_name\": \"vee Test\",\n                \"mandate_bank_id\": 52,\n                \"mandate_account_number\": 112345678,\n                \"mandate_bvn\": \"33333333332\",\n                \"reference\": \"SDD-V94egQMN7JMFkPo\",\n                \"session_id\": \"\",\n                \"narration\": \"Direct Debit Transfer\",\n                \"beneficiary_account_name\": \"vee Test\",\n                \"beneficiary_bank_id\": 52,\n                \"beneficiary_account_number\": 112345678,\n                \"beneficiary_bvn\": \"33333333332\",\n                \"extra_data\": null,\n                \"meta\": null,\n                \"status\": \"pending\",\n                \"created_on\": \"2023-05-11T05:58:03.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-11T05:58:03.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 15,\n            \"page\": \"1\",\n            \"pages\": 2,\n            \"page_size\": \"10\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "a410a0f5-96bb-45a2-a80f-ddf670671b52"
				},
				{
					"name": "Fetch Transaction",
					"item": [
						{
							"name": "Fetch Transaction",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that a data is returned\", function(){\r",
											"    pm.expect(jsonData.data).to.not.be.empty\r",
											"})"
										],
										"type": "text/javascript",
										"id": "3fc1fe31-10f5-4376-81ed-f8327ae876a7"
									}
								}
							],
							"id": "ddf642a7-5b7f-4143-8c47-b551d48ad49c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"id": "6d24c5d4-b015-42e0-87d9-11be0b9d15a1",
											"key": "transaction_id",
											"value": "{{transactionID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "ea1a13ce-372f-4d95-aab0-f9ec56b15ea9",
									"name": "Fetch Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "644"
										},
										{
											"key": "ETag",
											"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:00:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction - Invalid ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Transaction not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Transaction not found\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "7cb1cf80-ab71-46f2-bb3b-a6bc2590a436"
									}
								}
							],
							"id": "2b8b2b8e-f071-4a43-89cc-58f1cce5c6b7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"id": "14f8003c-c0be-45d5-abf6-81b68a89d551",
											"key": "transaction_id",
											"value": "ee"
										}
									]
								}
							},
							"response": [
								{
									"id": "af82d1ec-3227-4369-b1d4-8f1339bc3e90",
									"name": "Fetch Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "644"
										},
										{
											"key": "ETag",
											"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:00:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction - No ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is displayed as Error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"Validate that error message is 'Transaction not found'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Transaction not found\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "9dae946f-b4d4-4399-902d-f99d1a52d65a"
									}
								}
							],
							"id": "91d228f4-0d14-4d0b-bd14-49a1c6f46505",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"id": "a89359c7-5c18-443d-aeeb-ae3c86bb2a4d",
											"key": "transaction_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "6f7faeb9-fcb4-469d-aa0a-7b7ae1ca1e40",
									"name": "Fetch Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "644"
										},
										{
											"key": "ETag",
											"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:00:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "80300fb8-ec87-462d-93c0-e0806426efc3"
									}
								}
							],
							"id": "943560d2-a254-4ada-8780-f47f1773da15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"id": "acb11cbf-6968-4fd2-8c5c-213c68105705",
											"key": "transaction_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "8d21d87a-8811-4bd7-889d-a5982cceaf8c",
									"name": "Fetch Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "644"
										},
										{
											"key": "ETag",
											"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:00:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "a11359a8-baa7-4492-add9-d7023de2c9ed"
									}
								}
							],
							"id": "39fe6ae3-8961-4136-b96c-87848f17ddb9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/transactions/:transaction_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"transactions",
										":transaction_id"
									],
									"variable": [
										{
											"id": "9cf19d58-4632-42a1-b8fe-dc4fd1ccacfe",
											"key": "transaction_id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"id": "c4cbf8fe-ccaa-4725-a904-8fd236497b15",
									"name": "Fetch Transaction",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/transactions/:transaction_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"transactions",
												":transaction_id"
											],
											"variable": [
												{
													"key": "transaction_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "644"
										},
										{
											"key": "ETag",
											"value": "W/\"284-opO87nL3VaVjn8v6iQc5o6D9NN4\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:00:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"type\": \"debit\",\n        \"mandate_id\": 7,\n        \"mandate_account_name\": \"vee Test\",\n        \"mandate_bank_id\": 52,\n        \"mandate_account_number\": 112345678,\n        \"mandate_bvn\": \"33333333332\",\n        \"reference\": \"SDD-V7zcguSiF0uGm9L\",\n        \"session_id\": \"\",\n        \"narration\": \"Direct Debit Transfer\",\n        \"beneficiary_account_name\": \"vee Test\",\n        \"beneficiary_bank_id\": 52,\n        \"beneficiary_account_number\": 112345678,\n        \"beneficiary_bvn\": \"33333333332\",\n        \"extra_data\": null,\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-05-11T05:50:04.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-11T05:50:04.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "f7e0b755-7819-484c-af36-5ae39ac52a6d"
				},
				{
					"name": "Fetch Transaction Stats",
					"item": [
						{
							"name": "Fetch Transaction Stats",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "ff1b4141-9d71-4dba-a3d6-ebf955d44f81"
									}
								}
							],
							"id": "181f53c8-ba2e-4908-bf0b-f9cb58b8174e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/transactions/stats"
							},
							"response": [
								{
									"id": "7b299843-9a1a-4e07-8d89-3fcf99b658ff",
									"name": "Fetch Transaction Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/transactions/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "115"
										},
										{
											"key": "ETag",
											"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:01:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction Stats - No Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "40edeaaa-04a2-4fe9-8bdc-be9e11745deb"
									}
								}
							],
							"id": "1657dd0c-86a5-4f83-b3a6-5100c18629a3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/transactions/stats"
							},
							"response": [
								{
									"id": "12451490-7c21-423f-865b-b27dac06fc71",
									"name": "Fetch Transaction Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/transactions/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "115"
										},
										{
											"key": "ETag",
											"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:01:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Fetch Transaction Stats - Expired Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'jwt expired'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "57f4ae18-4ca4-4f48-bb4a-d17ca0587612"
									}
								}
							],
							"id": "227e4210-3da0-404f-beab-9116d8307845",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjMzMDkwLCJleHAiOjE2ODQyMzY2OTB9.9wKNfcBDtlimuyov9rKuWa4JeL7gAgkLZx9VPCcKSb8",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/transactions/stats"
							},
							"response": [
								{
									"id": "05d16fb9-1da6-4e04-9595-fdab6625b208",
									"name": "Fetch Transaction Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/transactions/stats"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "115"
										},
										{
											"key": "ETag",
											"value": "W/\"73-MO8o09IDEzi6K086/nATgTZCrbk\""
										},
										{
											"key": "Date",
											"value": "Thu, 11 May 2023 20:01:05 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 12\n        },\n        {\n            \"status\": \"successful\",\n            \"count\": 3\n        }\n    ]\n}"
								}
							]
						}
					],
					"id": "80a1c487-f6f8-44dd-bedd-8b3aedb54b13"
				}
			],
			"id": "73320124-b2db-4a9b-8545-37877a500114"
		},
		{
			"name": "Settings",
			"item": [
				{
					"name": "Fetch Settings Categories",
					"item": [
						{
							"name": "Fetch Settings Categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "eb3d648c-095a-48a1-a173-46c7fef723b5",
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that all categories are present\", function(){\r",
											"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"Email Service\"})\r",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "92b75223-35ae-4375-963c-c7f92f5344dc",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7929040b-1399-4823-b99f-12c0e2da7cf7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings/categories"
							},
							"response": [
								{
									"id": "d67ef8bb-2d34-4f99-b7fd-ea2c8ab0f7c3",
									"name": "Fetch Settings Categories",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6215"
										},
										{
											"key": "ETag",
											"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:07:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Settings Categories - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript",
										"id": "edbee797-96f3-433a-bd4c-0cbd12eda810"
									}
								}
							],
							"id": "e3ab2182-cee8-4623-bafd-d809810a08f7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings/categories"
							},
							"response": [
								{
									"id": "257f7663-0ae2-40cc-8942-e01484b9ccb6",
									"name": "Fetch Settings Categories",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6215"
										},
										{
											"key": "ETag",
											"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:07:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Settings Categories - Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8980496d-1f85-4d8a-987b-60754cf51e28",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "378d7a26-dbe4-4242-bb73-fd83e15918f1",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "7bbeaae9-5408-4692-bb76-bf188d572168",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjQ3NzY5LCJleHAiOjE2ODQyNTEzNjl9.Hdt1k6cWyKZOBNDAHy9R9stTWLEIeELHvx2ahfdrQV4",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/settings/categories"
							},
							"response": [
								{
									"id": "ea2a0a66-6489-4b1d-836e-0d809fe1ba9a",
									"name": "Fetch Settings Categories",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/categories"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "6215"
										},
										{
											"key": "ETag",
											"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:07:20 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "873ffdfd-4e1b-47ff-8763-3377ab0f8cdf"
				},
				{
					"name": "Fetch Settings",
					"item": [
						{
							"name": "Fetch Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'success'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"Validate that all categories are present\", function(){\r",
											"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})\r",
											"})"
										],
										"type": "text/javascript",
										"id": "043fd8c8-4a5c-4555-b01b-fc4e81c9b2e0"
									}
								}
							],
							"id": "2d80c3e7-7f12-4bcd-bb18-d1b584c831ba",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings?limit=25",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"response": [
								{
									"id": "8da8f4cd-4952-4db5-8161-9c770e078a65",
									"name": "Fetch Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5315"
										},
										{
											"key": "ETag",
											"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:09:47 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Settings - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0348e5ff-c214-495f-90ee-67521c35b61a",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Unauthorized'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "453b796c-dbb0-42c0-81a9-081583420a15",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "55b15baf-ad0a-4baf-a783-098925fdab18",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings?limit=25",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"response": [
								{
									"id": "e74e60b2-9947-4655-a1c2-253d7eb14d89",
									"name": "Fetch Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5315"
										},
										{
											"key": "ETag",
											"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:09:47 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Settings - Expired authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "efa1f288-5b8b-4702-b437-09888d4946a3",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 401\", function(){\r",
											"    pm.response.to.have.status(401);\r",
											"})\r",
											"pm.test(\"Status code is Unauthorized\", function () {\r",
											"    pm.response.to.have.status(\"Unauthorized\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'invalid signature'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ebfb0b03-e827-4c80-86f6-9c08e12e4aa7",
										"exec": [
											"postman.setNextRequest(\"Logout - Invalid/expired Token\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "b016873f-9643-4005-b426-68c2f5e734cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings?limit=25",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings"
									],
									"query": [
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"response": [
								{
									"id": "8414f805-3dc0-4b06-9bda-6532e837075f",
									"name": "Fetch Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "5315"
										},
										{
											"key": "ETag",
											"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:09:47 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "443182fe-753e-4bab-86e7-9f34404bd42f"
				},
				{
					"name": "Update Settings",
					"item": [
						{
							"name": "Update Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 201\", function(){\r",
											"    pm.response.to.have.status(201);\r",
											"})\r",
											"pm.test(\"Status code is Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"pm.test(\"Status is Success\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"success\")\r",
											"})\r",
											"pm.test(\"message is 'Settings updated successfully'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Settings updated successfully\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "5f939fbf-930b-4411-b0c8-c370cefdb374"
									}
								}
							],
							"id": "13108f7d-f30e-410d-b1bd-729684e3e307",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/:settings_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										":settings_id"
									],
									"variable": [
										{
											"id": "bb6aa2ae-519e-4f1a-a86c-1100810660bf",
											"key": "settings_id",
											"value": "12"
										}
									]
								}
							},
							"response": [
								{
									"id": "e46e7934-f6ba-41c1-9187-ec84578e6e19",
									"name": "Update Settings",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"sendgrid\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"key": "settings_id",
													"value": "6"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "576"
										},
										{
											"key": "ETag",
											"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:12:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update Settings - Empty Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 400\", function(){\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"pm.test(\"Status code is 'Bad Request'\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Value cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "afa539ab-8174-4b05-b258-e3f5d65a99c1"
									}
								}
							],
							"id": "0e096fba-fc2b-4dbe-8310-428e6e561a70",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/:settings_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										":settings_id"
									],
									"variable": [
										{
											"id": "40025d61-104d-4686-9acf-a35bf4b53be0",
											"key": "settings_id",
											"value": "12"
										}
									]
								}
							},
							"response": [
								{
									"id": "c91ab523-6fc0-423d-a454-5fe2962d872e",
									"name": "Update Settings",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"sendgrid\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"key": "settings_id",
													"value": "6"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "576"
										},
										{
											"key": "ETag",
											"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:12:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update Settings - Empty Settings ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is 'Not Found'\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "246a13e5-077f-4552-bebb-c81b29d04dd4"
									}
								}
							],
							"id": "0230f137-7ebd-4812-b9a8-9d6d473e4f9a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/:settings_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										":settings_id"
									],
									"variable": [
										{
											"id": "faa15e40-ab22-42b4-9486-4fcf0ee1b29c",
											"key": "settings_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"id": "0f87ef00-5cc6-4916-b607-c2cc7d6d7195",
									"name": "Update Settings",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"sendgrid\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"key": "settings_id",
													"value": "6"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "576"
										},
										{
											"key": "ETag",
											"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:12:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Update Settings - Invalid Settings ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 404\", function(){\r",
											"    pm.response.to.have.status(404);\r",
											"})\r",
											"pm.test(\"Status code is 'Not Found'\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});\r",
											"pm.test(\"Status is error\", function(){\r",
											"    pm.expect(jsonData.status).to.eql(\"error\")\r",
											"})\r",
											"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
											"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
											"})"
										],
										"type": "text/javascript",
										"id": "66594507-f6d7-4b32-99eb-828d9f6a2a65"
									}
								}
							],
							"id": "5cdee36f-c5f0-4cfa-8bf5-0c2fbd78952b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/:settings_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										":settings_id"
									],
									"variable": [
										{
											"id": "6b12432b-8911-4104-b95d-cbbeb05ea3c6",
											"key": "settings_id",
											"value": "er"
										}
									]
								}
							},
							"response": [
								{
									"id": "2286f44c-5c01-4924-b56e-9b855de77d6a",
									"name": "Update Settings",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"sendgrid\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"key": "settings_id",
													"value": "6"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "576"
										},
										{
											"key": "ETag",
											"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
										},
										{
											"key": "Date",
											"value": "Sun, 14 May 2023 06:12:51 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
								}
							]
						}
					],
					"id": "ffeec313-143e-4c31-8268-daab4b57de80"
				},
				{
					"name": "Fetch Web Settings",
					"item": [
						{
							"name": "Fetch Web Settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "78ef2fd5-3b0c-4228-8dbf-a49cda305116",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that all categories are present\", function(){",
											"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a0b8863-d5b6-4ed7-a95e-a32d63b957bf",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "88821e85-2213-454c-aaac-87bb467377ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"web",
										"78900"
									],
									"query": [
										{
											"key": "qu",
											"value": "uhhh"
										}
									]
								}
							},
							"response": [
								{
									"id": "f0f6f8b2-f213-4e12-bd25-252c84e24c77",
									"name": "Fetch Web Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/web"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 20:02:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Web Settings - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "63149c86-97b3-4df0-babe-23fb76209f6f",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "114d1e13-d30b-4153-941e-52b81dcc433a",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9a67c252-d739-48ae-8990-52d1d46cfd01",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"web",
										"78900"
									],
									"query": [
										{
											"key": "qu",
											"value": "uhhh"
										}
									]
								}
							},
							"response": [
								{
									"id": "8bf7f4dc-20b2-4d8a-9c6d-ab3445dde6b2",
									"name": "Fetch Web Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/web"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 20:02:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Web Settings - Invalid Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3dd98730-7226-493c-af22-c03df50f8be5",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5a183273-1a47-4fb9-a377-6f09e3ac2085",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e79b855f-982c-44c8-946f-ed6626bf7617",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSy",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"web",
										"78900"
									],
									"query": [
										{
											"key": "qu",
											"value": "uhhh"
										}
									]
								}
							},
							"response": [
								{
									"id": "3cc66f56-e342-43b3-93d9-bbd124c0c539",
									"name": "Fetch Web Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/web"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 20:02:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Fetch Web Settings - Expired Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab01d868-f6ad-437d-b4b2-3d3e51278d1b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'jwt expired'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0c902cfb-6f3e-422b-892e-d1bfb4555157",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "1c1305df-4a1d-4ee9-b35f-3d28e23b06e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"settings",
										"web",
										"78900"
									],
									"query": [
										{
											"key": "qu",
											"value": "uhhh"
										}
									]
								}
							},
							"response": [
								{
									"id": "5a6b032d-67c1-4757-aaab-c95244f86907",
									"name": "Fetch Web Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/settings/web"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "381"
										},
										{
											"key": "ETag",
											"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
										},
										{
											"key": "Date",
											"value": "Sat, 27 May 2023 20:02:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "af95dfb8-a8ee-4264-8d93-2fb833b89db6"
				}
			],
			"id": "1bea46be-1449-466e-9d07-cb79f9150002"
		},
		{
			"name": "Billers",
			"item": [
				{
					"name": "Fetch All Billers",
					"item": [
						{
							"name": "Fetch All Billers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"pm.test(\"Status is success\", function () {",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function () {",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"The right data type for Billers Name, Billers ID, rc and email is returned\", function () {",
											"    const Data = jsonData.data.data;",
											"    Data.forEach(function (biller) {",
											"        pm.expect(biller.id).to.be.a('number');",
											"        pm.expect(biller.name).to.be.a('string');",
											"        pm.expect(biller.rc_number).to.be.a('string');",
											"        pm.expect(biller.email).to.be.a('string')",
											"        pm.expect(biller.code).to.be.a('string');",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "2534a59f-5d99-43a0-b4db-51f584aa9f16",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/billers"
							},
							"response": []
						},
						{
							"name": "Fetch All Billers - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "bbefac03-ecee-4a89-af0f-a0c1786679af",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": ""
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/billers"
							},
							"response": []
						},
						{
							"name": "Fetch All Billers - Invalid Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "395ebcb4-cc93-4c5f-83f0-9a3812bce699",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1i"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/billers"
							},
							"response": []
						},
						{
							"name": "Fetch All Billers - Expired Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f84b2ef-d675-409e-a6e1-7d2a413e3215",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2aa96f5a-d938-4329-bb35-00e5d952106f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3e5f34bc-6609-4681-b119-366fe3e19732",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/billers"
							},
							"response": []
						}
					],
					"id": "37ed0258-28cd-4882-8917-db0f96138971"
				},
				{
					"name": "Fetch Biller",
					"item": [
						{
							"name": "Fetch Biller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5de178c0-9753-4881-b609-b21eb6564354",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "9745b6d4-887b-4c16-bf11-6f71aa15bf56",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Biller - Invalid Biller ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function(){",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test(\"Status code is OK\", function () {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"message is 'success'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate that a data is returned\", function(){",
											"    pm.expect(jsonData.data).to.not.be.empty",
											"})"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5de178c0-9753-4881-b609-b21eb6564354",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "e537fe6d-5c27-481c-811e-3114929e5761",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"id": "97771218-0c25-439b-8aa3-eadba9be598d",
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Biller - No Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'Unauthorized'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5de178c0-9753-4881-b609-b21eb6564354",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c8b97dc7-2e61-4548-afcf-a878cca20f72",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"id": "97771218-0c25-439b-8aa3-eadba9be598d",
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch Biller - Invalid Authorization",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "69ebbfbf-abb6-48d4-ad6c-752d2b3dfe64",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 401\", function(){",
											"    pm.response.to.have.status(401);",
											"})",
											"pm.test(\"Status code is Unauthorized\", function () {",
											"    pm.response.to.have.status(\"Unauthorized\");",
											"});",
											"",
											"pm.test(\"Status is error\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"error\")",
											"})",
											"pm.test(\"message is 'invalid signature'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5de178c0-9753-4881-b609-b21eb6564354",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "8dbfe1fa-5e18-489c-9946-1dbcd948e25f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"id": "97771218-0c25-439b-8aa3-eadba9be598d",
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "73d3eb2d-f9b3-433c-b82f-c9c6e97ba6ea"
				},
				{
					"name": "Update Biller",
					"item": [
						{
							"name": "Update Biller",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cbf75f57-4b7a-44df-b76e-29c4feab70a8",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code is 201\", function(){",
											"    pm.response.to.have.status(201);",
											"})",
											"pm.test(\"Status code is Created\", function () {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"pm.test(\"Status is Success\", function(){",
											"    pm.expect(jsonData.status).to.eql(\"success\")",
											"})",
											"pm.test(\"Validate message is 'Beneficiary created successfully'\", function(){",
											"    pm.expect(jsonData.message).to.eql(\"Beneficiary created successfully\")",
											"})",
											"pm.test(\"Validate that an accurate account number is returned\", function(){",
											"    pm.expect(jsonData.data.account_number.toString()).to.contain(RequestData.account_number)",
											"})",
											"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
											"    pm.expect(jsonData.data.bank_id.toString()).to.contain(RequestData.bank_id)",
											"})",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0a6d3e76-0c7a-4d38-893e-2bb7df0095ef",
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"id": "fe48cca5-9d77-4cd2-8389-7cfa47fba39e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "2220e2cb-172d-4204-8f51-de714551919c"
				},
				{
					"name": "Fetch Biller Settlement",
					"item": [
						{
							"name": "Fetch Biller Settlement",
							"id": "cd1e5764-9aa8-4ff8-bea3-e8b3478d1049",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id/settlement",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id",
										"settlement"
									],
									"variable": [
										{
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "8631f0fa-dadb-476f-b269-349970d48740"
				},
				{
					"name": "Update Biller Settlement",
					"item": [
						{
							"name": "Update Biller Settlement",
							"id": "692dca10-a164-4e73-b3ac-2016ab6f8dc2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/billers/:biller_id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"billers",
										":biller_id"
									],
									"variable": [
										{
											"key": "biller_id",
											"value": "11"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "ab619795-6bdd-43cd-b33a-57a3588cdb2e"
				}
			],
			"id": "0bceabd7-d6eb-4970-97aa-ae9aae5844f1"
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "Logout - Invalid/expired Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})\r",
									"pm.test(\"Status code is Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status is error\", function(){\r",
									"    pm.expect(jsonData.status).to.eql(\"error\")\r",
									"})\r",
									"pm.test(\"message is 'Invalid Token'\", function(){\r",
									"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "4e898905-f519-42eb-9cb1-defe86683d76"
							}
						}
					],
					"id": "402c9e34-86f5-47e8-94ed-f3ee98b2a02b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ1MzU0LCJleHAiOjE2ODM2NDg5NTR9.b1pE85sjyVbCkh4plM_NwyYLucErCRB2ExcL4PlVB7E",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/auth/logout"
					},
					"response": []
				},
				{
					"name": "Logout -No Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 401\", function(){\r",
									"    pm.response.to.have.status(401);\r",
									"})\r",
									"pm.test(\"Status code is Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status is error\", function(){\r",
									"    pm.expect(jsonData.status).to.eql(\"error\")\r",
									"})\r",
									"pm.test(\"message is 'Unauthorized'\", function(){\r",
									"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "47bc7945-7e38-4ab0-8ecd-ea28bdb7873e"
							}
						}
					],
					"id": "398e3800-920d-493a-9220-341a2cd7099a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/auth/logout"
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"pm.test(\"Status code is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status is Success\", function(){\r",
									"    pm.expect(jsonData.status).to.eql(\"success\")\r",
									"})\r",
									"pm.test(\"message is 'Logout successful'\", function(){\r",
									"    pm.expect(jsonData.message).to.eql(\"Logout successful\")\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"id": "108b557f-b87f-49db-935d-d1251b5d7417"
							}
						}
					],
					"id": "a2d0059b-e2d9-4ad9-b3d9-3688ce3c2fd8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/auth/logout"
					},
					"response": []
				}
			],
			"id": "5a4bc331-69ac-4a45-af86-6d5668c95896"
		},
		{
			"name": "Platform - Biller",
			"item": [
				{
					"name": "Biller Auth",
					"item": [
						{
							"name": "Biller - Sign Up",
							"item": [
								{
									"name": "Sign Up",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"// tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"",
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"var email = jsonData.data.email",
													"pm.environment.set('BillerEmail', email)",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"",
													"pm.test(\"Verify User's First Name\", function(){",
													"    pm.expect(jsonData.data.first_name).to.equal(Request.first_name)",
													"})",
													"pm.test(\"Verify user's last name\", function(){",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)",
													"})",
													"",
													"pm.test(\"Verify User's Email\", function(){",
													"    pm.expect(jsonData.data.email).to.eql(Request.email)",
													"})",
													"pm.test(\"Verify user's phone number\", function(){",
													"    pm.expect(jsonData.data.phone_number).to.eql(Request.phone_number)",
													"})",
													"pm.test(\"Verify that the user's type is called Biller\", function(){",
													"    pm.expect(jsonData.data.type).to.eql(\"biller\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4227db0c-62c9-413e-bf82-4fc756d83233",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "97f1bf97-5f6d-4943-bbc7-496844402ac0",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"// tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"",
													"// var jsonData = pm.response.json();",
													"// var Request = JSON.parse(pm.request.body.raw);",
													"// // var Token = jsonData.data.token_data.token",
													"// var email = jsonData.data.email",
													"// pm.environment.set(\"BillerEmail\", email)",
													"// // pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"// pm.test(\"Status code is 200\", function(){",
													"// pm.response.to.have.status(200);",
													"// })",
													"// pm.test(\"Status code is OK\", function () {",
													"//     pm.response.to.have.status(\"OK\");",
													"// });",
													"// pm.test(\"Status is Success\", function(){",
													"//     pm.expect(jsonData.status).to.eql(\"success\")",
													"// })",
													"// pm.test(\"message is successs\", function(){",
													"//     pm.expect(jsonData.message).to.eql(\"success\")",
													"// })",
													"// pm.test(\"Verify User's First Name\", function(){",
													"//     pm.expect(jsonData.data.first_name).to.equal(Request.first_name)",
													"// })",
													"// pm.test(\"Verify user's last name\", function(){",
													"//     pm.expect(jsonData.data.last_name).to.eql(Request.last_name)",
													"// })",
													"",
													"// pm.test(\"Verify User's Email\", function(){",
													"//     pm.expect(jsonData.data.email).to.eql(Request.email)",
													"// })",
													"// pm.test(\"Verify user's phone number\", function(){",
													"//     pm.expect(jsonData.data.phone_number).to.eql(Request.phone_number)",
													"// })",
													"// pm.test(\"Verify that the user's type is called Biller\", function(){",
													"//     pm.expect(jsonData.data.type).to.eql(\"biller\")",
													"// })"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "0974ae13-f273-4710-ae5b-dbd06d44a637",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "52d7dd11-98fd-49c1-940c-923f0551bcad",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field- first namne",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e4944e3e-5e53-49b2-b1d8-e28aa91e6548",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111110\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "590614a6-d72e-4879-b40e-cbf5f56aa9dd",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - last name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5324f695-098a-4461-9de3-7f862f74c602",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "218f660c-7e32-44b5-aeea-6c8b1d11285c",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - phone number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "bf27b7c4-8908-4d53-aeb0-589296d84184",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomLastName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "ea17fcdf-2192-42c6-94a4-3224ae976de6",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - company number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e959fb58-4401-4e62-9dc6-211f3b566c77",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "3af72819-9c48-4568-943f-12c67f7a36f3",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - rc number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"RC number cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c6f3ee85-b83e-4889-9ef2-347c31f3dc1c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomFirstName}} {{$randomLastName}} LTD\",\n    \"rc_number\": \"\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "ae366013-25a4-4839-a218-7d49f7084d3c",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field -Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "48809ef6-0866-4b2f-ba81-ec16b631a5b6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"$randomFirstName\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "a2692375-15a9-470f-b463-974a7e187ff7",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up- Empty Field - Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "312e5373-aa16-4a64-80a7-b95b893194ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "d910cd06-21de-4bf4-85c8-b89779dab25d",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Biller with RC number exists\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "88a3fda9-3764-4ee3-bbb4-9d39aab05c46",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "374e5fe7-cbfa-4166-a59b-bf5dc2794a74",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Already Existing Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "81278a6d-3d11-4840-86a9-cb222bc781be",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "80535b14-dda4-40f5-94e3-4ef57ff2b980",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid phone number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													"const random = Math.floor(Math.random() * 9999999999)",
													"pm.environment.set('randomRc', random)",
													"console.log(random)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "72914176-33e2-43a5-a732-14730d51d495",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011er4569\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"{{randomRc}}\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "4842d49e-420a-47f0-ab25-f8712afa9cd7",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Phone number lesser than 10",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c4c44b81-f79f-44c9-ab3a-bac93f8d73a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "2c7df29b-1d53-4797-a6a3-0a3a5b0ef697",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Phone number more than 13 digits",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be shorter than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c04d052f-f422-474e-9d01-b585473859d6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"234701172529700\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "b66585f3-e65c-48e2-8c77-8af2609913ee",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Password not meeting complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"New password is too weak. Enter a strong password greater than 8 characters that also contains a capital letter, small letter, number and special characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "99821c38-8e1b-42e8-811e-a3898e448ef1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "72c91cfd-8f21-42b9-82dc-7037c891fbb8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"{{$randomLastName}}\",\n    \"phone_number\": \"07011725297\",\n    \"company_name\": \"{{$randomLastName}} {{$randomFirstName}} LTD\",\n    \"rc_number\": \"RC1111111\",\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"password\": \"Teste\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/signup"
									},
									"response": [
										{
											"id": "03ef5af2-fa24-46dd-989a-8562b147354d",
											"name": "Sign Up",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"Adeoluwa\",\n    \"last_name\": \"Akinsanya\",\n    \"phone_number\": \"08139354433\",\n    \"company_name\": \"Tridax\",\n    \"rc_number\": \"RC0000124\",\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n    \"password\": \"Tester@12\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/signup"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "455"
												},
												{
													"key": "ETag",
													"value": "W/\"1c7-RXDFljf04GU8UjDvKtvnj3epZP8\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:34:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"Adeoluwa\",\n        \"last_name\": \"Akinsanya\",\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"phone_number\": \"08139354433\",\n        \"type\": \"biller\",\n        \"role_id\": 1,\n        \"id\": 9,\n        \"status\": \"pending\",\n        \"blacklist_reason\": null,\n        \"two_fa\": 0,\n        \"system\": 0,\n        \"allowed_ip\": null,\n        \"created_on\": \"2023-12-08 10:34:10\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-08 10:34:11\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "ec997b5c-3b1a-4720-821a-34d6a4d557d2"
						},
						{
							"name": "Biller - Verify User",
							"item": [
								{
									"name": "Verify User",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var Token = jsonData.data.token_data.token",
													"var email = jsonData.data.email",
													"pm.environment.set(\"BillerEmail\", email)",
													"pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
													"tests[\"Status code is 200\"] = responseCode.code === 200;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9848c7a1-bc04-49bf-ae3f-3b2e152bf6c8",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3d168df1-29d2-4139-8f83-ff77981d2ff2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsInR5cGUiOiJ2ZXJpZmljYXRpb24iLCJpYXQiOjE3MDI2MjU2MDUsImV4cCI6MTcwMjYyOTIwNX0.-9RbOZj92aB2j6k8X_zi7T9ZzXc0dxYruCLWq4MKOuw\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "0ec65383-d404-4d06-9231-d664fa0f38cc",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Already Used Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "75e64d15-0763-42cd-8f3e-de7a571d607c",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9c5d511b-3a0f-430c-85f4-5fa7e2e91c47",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTYsInR5cGUiOiJ2ZXJpZmljYXRpb24iLCJpYXQiOjE3MDI2MjU2MDUsImV4cCI6MTcwMjYyOTIwNX0.-9RbOZj92aB2j6k8X_zi7T9ZzXc0dxYruCLWq4MKOuw\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "e342d656-856a-4794-a5d0-b12083203ede",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e95f05ee-9b26-4ff1-9baa-e702b3c33a85",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4f4608e0-d8ff-425f-9b5b-7a26b7a0e488",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "c5f6b805-351e-4d8f-bd55-574080efa69a",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Token\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a61faf5e-2e7c-4a30-9db0-7420bfa82b42",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8ad040d1-4769-41f8-bb43-a9e911ea47db",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9fzE6WPqgepAmVQ2G08\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "edfb894d-d47f-4021-9b72-88519896a64d",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Verify User - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7c77a71a-19b1-4ea1-8f34-bdd20818bfc1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate Error Message\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2884474d-0856-4ed6-bc48-16e76a7609c6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d72c9e25-dadc-4b49-a451-93aea37e5482",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/verify-user"
									},
									"response": [
										{
											"id": "86f6a16f-ed98-496b-96ce-17e49ea64b1e",
											"name": "Verify Email",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6OSwidHlwZSI6InZlcmlmaWNhdGlvbiIsImlhdCI6MTcwMjAzMjg0OCwiZXhwIjoxNzAyMDM2NDQ4fQ.E-cOCi-TQPK86nALB1xrME9rtfzE6WPqgepAmVQ2G08\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/auth/verify-user"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Fri, 08 Dec 2023 10:55:50 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "a833e59a-404b-41d3-a486-c5ec98a67ad7"
						},
						{
							"name": "Biller - Login",
							"item": [
								{
									"name": "Valid Login with 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"if(jsonData.data.two_fa === true){",
													"    var Key = jsonData.data.key",
													"    pm.environment.set(\"BillerKEY\", Key)",
													"    pm.collectionVariables.set(\"BillerKEY\", Key)",
													"",
													"    pm.test(\"Status code is 200\", function(){",
													"        pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })  ",
													"    pm.test(\"Check for two fa\", function(){",
													"    pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    })",
													"}",
													"else if (jsonData.data.user.two_fa === 0){",
													"    pm.test(\"2FA is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"    })",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"BillerTOKEN\", Token)",
													"    pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"    })",
													"    pm.test(\"Email is accurate\", function(){",
													"        pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"    })",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a9465866-1c9f-482d-9d71-b3cc23fb45cb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login with 2FA - Bukola",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a53793c7-4a00-4bd6-97c9-7bb7b59d63cb",
												"exec": [
													"var jsonData = pm.response.json();",
													"var Request = JSON.parse(pm.request.body.raw);",
													"if(jsonData.data.two_fa === true){",
													"    var Key = jsonData.data.key",
													"    pm.environment.set(\"BillerKEY\", Key)",
													"    pm.collectionVariables.set(\"BillerKEY\", Key)",
													"",
													"    pm.test(\"Status code is 200\", function(){",
													"        pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })  ",
													"    pm.test(\"Check for two fa\", function(){",
													"    pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    })",
													"}",
													"else if (jsonData.data.user.two_fa === 0){",
													"    pm.test(\"2FA is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.eql(0)",
													"    })",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"BillerTOKEN\", Token)",
													"    pm.collectionVariables.set(\"BillerTOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is false\", function(){",
													"        pm.expect(jsonData.data.user.two_fa).to.equal(0)",
													"    })",
													"    pm.test(\"Email is accurate\", function(){",
													"        pm.expect(jsonData.data.user.email).to.eql(Request.email)",
													"    })",
													"}",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea4800cf-0aa2-4e6d-ac73-4b338817e330",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "02384ca3-2eab-4e7b-99aa-0a99c96d3454",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"id008@code-gmail.com\",\n    \"password\": \"Godzilla@@1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login Invalid Credentials",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d81b66f-375a-4e66-a503-35eacbd9d2d9",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Invalid credentials\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1e8acc21-61c0-4174-95e4-4cedfdd30cfd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "2ee42717-c163-4e69-b051-433be152b820",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"123456789\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Login successful\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript",
												"id": "9497c906-622f-4520-8433-be5a221794d7"
											}
										}
									],
									"id": "d0d20374-5113-401a-a32f-3c7680b406c5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Invalid Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7497d06-276f-4433-8a1c-ff4305b05fe2",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "84bfe171-895f-45f0-b245-983b640fe862",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3acf75db-9035-4b65-90ba-83b69a7dbb22",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.\",\n    \"password\": \"1234567890\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Login - Empty Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c4ced01e-bf3d-48da-b603-2dc12d749c54",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Password cannot be empty\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c7c9edb3-523c-46d4-ac03-b515c307859d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "25d2d214-cc91-49b4-8353-1c34330154f5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidHlwZSI6Imludml0ZSIsImlhdCI6MTY4MTc0MzExMywiZXhwIjoxNjgxNzQ2NzEzfQ.3eci7Mx488ls-IzlK0mIwXhapujVFAAxgUz77Y1MvUY"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								},
								{
									"name": "Valid Login wihout 2FA",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "67133885-8ac6-457e-a6cf-4c22ce92a409",
												"exec": [
													"var jsonData = pm.response.json();",
													"if (jsonData.data.two_fa === 0){",
													"    var Token = jsonData.data.token_data.token",
													"    pm.environment.set(\"TOKEN\", Token)",
													"    pm.collectionVariables.set(\"TOKEN\", Token)",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    }) ",
													"}",
													"else{",
													"    pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"    })",
													"    pm.test(\"Status code is OK\", function () {",
													"        pm.response.to.have.status(\"OK\");",
													"    });",
													"    pm.test(\"Status is Success\", function(){",
													"        pm.expect(jsonData.status).to.eql(\"success\")",
													"    })",
													"    pm.test(\"message is successs\", function(){",
													"        pm.expect(jsonData.message).to.eql(\"success\")",
													"    })",
													"    pm.test(\"two fa is true\", function(){",
													"        pm.expect(jsonData.data.two_fa).to.eql(true)",
													"    })",
													"}"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ef04fa6f-7147-4588-95f3-3d9750f88499",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a7bfd96a-d86c-4648-89b3-c3663acd4695",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"Rhett@mailinator.com\",\n    \"password\": \"Tester@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login"
									},
									"response": []
								}
							],
							"id": "39bdb5cb-88e8-4e17-9313-62261510daf5"
						},
						{
							"name": "Biller - Login 2FA",
							"item": [
								{
									"name": "Login (2FA) - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5c027cb0-0ac0-4349-b3c5-caf04ee06944",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Token = jsonData.data.token_data.token\r",
													"pm.environment.set(\"BillerTOKEN\", Token)\r",
													"pm.collectionVariables.set(\"BillerTOKEN\", Token)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is successs\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})  \r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "981950e5-c493-4e77-9ba0-83d7fd0c0e9e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a64bdccd-4b0f-4af7-ad15-386ad3b6acf1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{BillerKEY}}\",\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fb002b2b-4202-4484-827f-9754e74299f6",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid 2FA Token\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c0d66a4-78d4-4086-a6a8-4e4315a1733f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "eb380af6-0b88-4d80-a7e1-a72fb0f4069f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{BillerKEY}}\",\n    \"token\": \"636964\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "419bd9de-0135-4a64-aecc-0bd6730b8df5",
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"token should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"token should not be empty\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6dbadd52-892a-44aa-8e37-c701692782e7",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "17802cf0-b668-4dba-adc8-33a3cd42bfed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"{{BillerKEY}}\",\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Empty Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"key should not be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"key should not be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "d5c59a04-15cc-4f1b-9155-3ffed7b9e55e"
											}
										}
									],
									"id": "8d925e0e-2508-496c-bb9b-361357e5c8f9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"\",\n    \"token\": \"123454\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								},
								{
									"name": "Login (2FA) - Invalid Key",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json()\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is displayed as Error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Key\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid or Expired Key\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "3550d6ab-cd0e-45ba-abb0-402eb10d8619"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setNextRequest(\"Create Role\")"
												],
												"type": "text/javascript",
												"id": "ff52000b-2277-42de-b2f7-18a2078a991e"
											}
										}
									],
									"id": "d88996e0-ee55-47e8-806b-5014643eb224",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"key\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE2ODE4MTkyOTgsImV4cCI6MTY4MTgyMjg5OH0.24icAcu_5IA5Q_ZaDD6YziIdVYZ4vg\",\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/auth/login/2fa"
									},
									"response": []
								}
							],
							"id": "00fc48e7-f41d-439c-8035-5379c6728ff3"
						}
					],
					"id": "f69e0c2d-d12c-4928-ac97-f88b2c12c342"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Create Subscription",
							"item": [
								{
									"name": "Create Subscription - manual",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json();",
													"var RequestData = JSON.parse(pm.request.body.raw)",
													"pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"pm.test(\"Status code is 201\", function(){",
													"    pm.response.to.have.status(201);",
													"})",
													"pm.test(\"Status code is Created\", function () {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'Mandate created successfully'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Subscription created successfully\")",
													"})",
													"pm.test(\"Validate that an accurate account number is returned\", function(){",
													"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"})",
													"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"})",
													"pm.test(\"Validate that an accurate amount is returned\", function(){",
													"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"})",
													"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"    pm.expect(jsonData.data.beneficiary_id.toString()).to.exist",
													"    pm.expect(jsonData.data.beneficiary_id.toString()).to.eql(4)",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													"var StartDate = new Date().toISOString()",
													"pm.collectionVariables.set(\"StartDate\", StartDate)",
													"",
													"// ADD 7days to the current date",
													"var FutureDate = new Date()",
													"FutureDate.setDate(FutureDate.getDate() + 3)",
													"FutureDate = FutureDate.toISOString()",
													"pm.collectionVariables.set(\"FutureDate\", FutureDate)",
													"console.log(StartDate, FutureDate)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5aeccc4b-f9f0-4023-b088-9c2bb56ea194",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0151123145\",\n    \"phone_number\": \"08138096550\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 15,\n    \"email\": \"adetutuisinks@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"type\": \"manual\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ojodu Berger\",\n    \"amount\": 200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "64e8bc7d-365c-4576-905a-6e05190c3977",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription- emandate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json();",
													"var RequestData = JSON.parse(pm.request.body.raw)",
													"pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"pm.test(\"Status code is 201\", function(){",
													"    pm.response.to.have.status(201);",
													"})",
													"pm.test(\"Status code is Created\", function () {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'Mandate created successfully'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Subscription created successfully\")",
													"})",
													"pm.test(\"Validate that an accurate account number is returned\", function(){",
													"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"})",
													"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"})",
													"pm.test(\"Validate that an accurate amount is returned\", function(){",
													"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"})",
													"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"    pm.expect(jsonData.data.beneficiary_id.toString()).to.exist",
													"    pm.expect(jsonData.data.beneficiary_id.toString()).to.eql(4)",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													"var StartDate = new Date().toISOString()",
													"pm.collectionVariables.set(\"StartDate\", StartDate)",
													"",
													"// ADD 7days to the current date",
													"var FutureDate = new Date()",
													"FutureDate.setDate(FutureDate.getDate() + 3)",
													"FutureDate = FutureDate.toISOString()",
													"pm.collectionVariables.set(\"FutureDate\", FutureDate)",
													"console.log(StartDate, FutureDate)"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "44ad9977-09c5-47eb-a9b8-0e9f5e205a3c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"0151123145\",\n    \"phone_number\": \"08138096550\",\n    \"frequency\": \"daily\",\n    \"bank_id\": 15,\n    \"email\": \"adetutuisinks@gmail.com\",\n    \"start_date\": \"{{StartDate}}\",\n    \"end_date\": \"{{FutureDate}}\",\n    \"type\": \"emandate\",\n    \"narration\": \"Mandate for the payments of personal loan\",\n    \"address\": \"Ojodu Berger\",\n    \"amount\": 200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f4a5f0cd-a463-439c-aed5-07b04da842eb",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "3e976944-f7a3-48ba-9eb0-afd2ba6a6c17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "04a5287e-c598-428c-8c9d-a43801d73fc2",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid account No",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "f987d301-bdb3-4790-83a2-1a2ddd4cf813",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "0eb9b1d4-e93b-4c69-a46e-8557bee78b68",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "90d219b7-4c1e-4821-b8f3-6c342b033407",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "bca0217f-6b33-4182-9ff0-844c1018904d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription -Invalid frequency",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "177f53cc-223d-49c1-a01e-6ee8afadb3da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3f5dd59c-df03-4f6a-bacf-5890b660780d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "87cb8cbd-0763-48d7-b836-a2a16be5dedb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "62306a5c-e18a-4fd3-91fb-1c19e795fa2a",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b662b509-6961-480b-a48d-283b19e93691",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6088ed53-c6c8-4a3f-9ece-27f4ce19c1be",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - mismatched bank code and account number",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c32ea8fb-5a74-4284-b57a-2f14badad9dc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6cafb775-d352-4e1b-b0df-de8e78902c6e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Non-existing bank code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "add51a50-77d1-489d-be45-a77d935e2466",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "8869f038-d427-489c-9aa6-7972b3435dbd",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b019fb01-fb1f-4438-a6cc-0e7356ae4b39",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "b14807bc-52de-4d2b-bbc8-c210737a8dfe",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "c2bf5fa2-4291-41ea-a3ac-07d79dbc9046",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3f486a33-db34-4638-8a74-7e07f782f93d",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "705e9768-3bb4-433b-b856-08de01939950",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "a8eb98a1-84bc-42b4-b269-77fa5fac3679",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - start date in Past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "330f67d5-61dd-4a4c-9018-1a82f2152cf5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "cc40a80d-1107-48e9-94c0-90f57be5d19e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No end date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e2feced2-eb35-432b-8bb8-a8bae203c7a8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "b153f29b-7fab-4e25-ab7f-b51a41b19eab",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date in past",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "85bcf126-9ab0-44b9-9053-007e5b149242",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "f0da0d96-a6d1-42e1-b74a-6301b13540f1",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - End date greater than start date",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ee3e04f0-ca48-43aa-a257-013ab3ea70cc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "635df1ae-1702-44e4-99ae-0e2b52c3ec0c",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No narration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "242c277f-1d22-49f1-be32-0473493e41ca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "e377489c-a410-490f-acf1-96e1c015d20e",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "505682ef-e8d2-4b08-998f-052de6441f37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "08a9ddc3-cc66-443b-9b22-47a7ba07a600",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - invalid amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "6dba0318-4d6b-47e3-bf67-a61d25a850d0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "ec934354-01d8-4f1b-9090-489bb1817f6c",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - negative amount",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "459f15ea-02c3-4a67-9d7b-f02053e777f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "6381fee9-9cbc-4b6e-82c4-c267602761df",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - Amount lesser than system threshhold",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5a1f7dc3-cd8f-4a49-8c5d-87d5eb96165a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "3de7e621-18ac-4a4e-93de-8881f3bcabaf",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Create Subscription - No token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a9d10c39-f218-493b-9597-3b17c812ce19",
												"exec": [
													"var jsonData = pm.response.json()",
													"",
													"pm.test(\"Status code is 400\", function(){",
													"    pm.response.to.have.status(400);",
													"})",
													"pm.test(\"Status code is Bad Request\", function () {",
													"    pm.response.to.have.status(\"Bad Request\");",
													"});",
													"pm.test(\"Status is displayed as Error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"Validate empty fields\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"phone_number must be longer than or equal to 11 characters\")",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b3ba225a-9613-491d-ab17-f3d146f20a4f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "e8ff16be-fefb-48fe-91b0-c36581ed7258",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions"
									},
									"response": [
										{
											"id": "d0d5ac5c-7ec7-415d-99c5-616454c0b9ea",
											"name": "Create Subscription",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"2150302690\",\n    \"frequency\": \"daily\",\n    \"bank_code\": \"057\",\n    \"email\": \"adeolu@lendsqr.com\",\n    \"start_date\": \"2024-08-10\",\n    \"end_date\": \"2024-08-24\",\n    \"narration\": \"Rand\",\n    \"amount\": 50,\n    \"token\": \"000000\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "725"
												},
												{
													"key": "ETag",
													"value": "W/\"2d5-1SePFiCwJruehqIb/4Iu0wOewww\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:49:40 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscription created successfully\",\n    \"data\": {\n        \"id\": 1,\n        \"bank_id\": 40,\n        \"reference_number\": null,\n        \"NIBSS_workflow_status\": null,\n        \"entity\": \"biller\",\n        \"account_number\": \"2150302690\",\n        \"account_name\": \"ADEOLUWA O AKINSANYA\",\n        \"debit_type\": \"all\",\n        \"bvn\": \"22000000076\",\n        \"session_id\": \"999999231216064513264011130883\",\n        \"start_date\": \"2023-12-16\",\n        \"end_date\": \"2033-12-16\",\n        \"type\": \"manual\",\n        \"narration\": \"Rand\",\n        \"amount\": \"200000.00\",\n        \"minimum_amount\": \"0.00\",\n        \"beneficiary_id\": 1,\n        \"customer_id\": 1,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:45:14\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:45:14\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"NIBSS_workflow_status_description\": null,\n        \"meta\": null\n    }\n}"
										}
									]
								}
							],
							"id": "dc5fe42e-e192-4b5f-a957-141ccc0825bc"
						},
						{
							"name": "Fetch Subscriptions",
							"item": [
								{
									"name": "Fetch Subscriptions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "4eddea43-f529-4680-b6f5-92319939ccca",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "d4fda033-2f34-4d8a-84d8-61a2588d41da",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "d14e7a0c-833f-4c54-bb64-f94d286144e3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "aa313df8-2ada-4aa0-aab9-d853647e247d",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7c0b56aa-4cdd-4324-bb02-3072d5947c5f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "d1cc09f8-d556-4ad6-96f4-91951ff2125d",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscriptions - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1878e4d9-8706-4eed-ba81-1a658e65e7ff",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "cb3f8291-0b4e-4029-a776-31d4f185715a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4045c782-cce0-47af-986f-f7ce6dbb9a65",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "mandate_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "a7bce97a-423a-4533-840d-573b69b26546",
											"name": "Fetch Subscriptions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions?limit=10&page=1&mandate_id=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "mandate_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "785"
												},
												{
													"key": "ETag",
													"value": "W/\"311-QTWY9pNDRXVe0ORV5kIdR31J2yE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:50:46 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 05:48:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 05:48:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"mandate_id\": 1,\n                \"biller_id\": 3,\n                \"start_date\": \"2024-08-10\",\n                \"end_date\": \"2024-08-24\",\n                \"frequency\": \"daily\",\n                \"amount\": \"50.00\",\n                \"amount_paid\": \"0.00\",\n                \"status\": \"pending\",\n                \"created_on\": \"2023-12-16 10:49:40\",\n                \"created_by\": 15,\n                \"modified_on\": \"2023-12-16 10:49:40\",\n                \"modified_by\": null,\n                \"deleted_on\": \"Invalid date\",\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "fe378a2b-f28d-450b-a4ee-16e204b219fa"
						},
						{
							"name": "Fetch Subscription",
							"item": [
								{
									"name": "Fetch Subscription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f57f36dd-f149-43f2-a0ca-4ff886218712",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "675fb5e7-e402-4866-ab89-dc48580e8be8",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b41681a6-98ac-416f-9581-cbc2af9e1081",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "9ffb4ade-bd17-4ad1-ab0a-6921f95d560d",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3fdad504-196a-4b9f-b002-ee47ee7d6763",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "68ff10b8-4e00-42cd-aa2b-38217864bbb9",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "70e6ee0e-d86a-4b67-878b-34728d3de780",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3483249-fd9a-4366-b9b3-b88cae713028",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a682356d-d367-4ad3-bfc5-85c43ae88854",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id"
											],
											"variable": [
												{
													"id": "17ceb22e-db5a-44a2-9ed8-596c3bd11262",
													"key": "subscription_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "925dbe2a-fb73-4c42-a13c-4b9feff2cdc2",
											"name": "Fetch Subscription",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/:subscription_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														":subscription_id"
													],
													"variable": [
														{
															"key": "subscription_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-5ErDTTcnWah4QLZaA9KDhaDidgY\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:51:43 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"mandate_id\": 1,\n        \"biller_id\": 3,\n        \"start_date\": \"2024-08-10\",\n        \"end_date\": \"2024-08-24\",\n        \"frequency\": \"daily\",\n        \"amount\": \"50.00\",\n        \"amount_paid\": \"0.00\",\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-16 05:48:40\",\n        \"created_by\": 15,\n        \"modified_on\": \"2023-12-16 05:48:40\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "6a20fee8-3159-444c-8f23-e0106fb06d5d"
						},
						{
							"name": "Fetch Subscription Stats",
							"item": [
								{
									"name": "Fetch Subscription Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a83f75c2-6e2a-4fcf-811b-2c57ac0c8d44",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "992461c4-347d-4637-8a9a-d973bfc64de1",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f357a55e-c40e-468a-8927-6e52f99d8010",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "6c3187de-45d3-4f5a-b49b-28fa420ae187",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - Invslid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "8366553f-2952-4b4c-843e-3c55ec4aa33e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "03ca73a7-2eaa-4f1b-8cb9-c8a1f42c6ee3",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Subscription Stats - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "231b6c22-7b7a-4efc-82f4-a8e3467026b9",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that a data is returned\", function(){",
													"    pm.expect(jsonData.data).to.not.be.empty",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95aaacf8-f93e-4fc8-9924-ca30f05a8044",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a0a0f9c4-9542-42e9-992e-775b2aacb953",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												"stats"
											],
											"query": [
												{
													"key": "start_date",
													"value": "2023-05-1"
												},
												{
													"key": "end_date",
													"value": "2024-05-1"
												}
											]
										}
									},
									"response": [
										{
											"id": "b5160b1f-297e-4032-81d3-8fa0b0375edf",
											"name": "Fetch Subscription Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/subscriptions/stats?start_date=2023-05-1&end_date=2024-05-1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"subscriptions",
														"stats"
													],
													"query": [
														{
															"key": "start_date",
															"value": "2023-05-1"
														},
														{
															"key": "end_date",
															"value": "2024-05-1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-YGOYeC4204+c2nsz3OAAq7OQckE\""
												},
												{
													"key": "Date",
													"value": "Sat, 16 Dec 2023 10:52:39 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"pending\",\n            \"count\": 2\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "bee1e48e-5e9e-4e3e-91ab-eb7348f6f41a"
						},
						{
							"name": "Activate/Deactivate Subscription",
							"item": [
								{
									"name": "Activate - Activate/Deactivate Subscription",
									"id": "4b836d05-a35f-4a7d-a30d-c11920fd3d38",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{BillerTOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "2"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate - Activate/Deactivate Subscription (manual)",
									"id": "ea9ce001-e77d-450a-9256-9a42352171a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"signature\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"key": "subscription_id",
													"value": "77"
												},
												{
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate - Activate/Deactivate Subscription",
									"id": "eff416f6-b70e-49f5-805a-a8262df81bcf",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "No Auth - Activate/Deactivate Subscription",
									"id": "8f65aea3-79b3-499e-9ce0-7f0070b83730",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Invalid Auth - Activate/Deactivate Subscription",
									"id": "26646241-cba3-47a4-8f1d-47794a727208",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Expired Auth - Activate/Deactivate Subscription",
									"id": "f55d8a31-2093-41d1-b351-ee3e38cb29e6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"narration\": \"test\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/subscriptions/:subscription_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"subscriptions",
												":subscription_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "1715dbff-3340-45cf-8279-5759bdb07de8",
													"key": "subscription_id",
													"value": "1"
												},
												{
													"id": "512923a2-db54-4169-8a08-85071a378c4f",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "ebe1e1ec-e01e-4c56-9811-7b39b9807720"
						},
						{
							"name": "Upload Subscription",
							"item": [
								{
									"name": "Upload Subscriptions Copy",
									"id": "f0ad23ee-971e-452e-98a0-89b8787b86af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "basic",
											"basic": {
												"username": "4453053ae3f09c1e63844967d4952ada",
												"password": "9340619471bbf3e4c1ee51fb0031182a2259543692744d080128b230ddd14650"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"mandates\": [\n        {\n            \"bank\": \"Zenith Bank\",\n            \"account_number\": \"2150302690\",\n            \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n            \"phone_number\": \"08123456789\",\n            \"address\": \"Test Address\",\n            \"start_date\": \"2024-01-01\",\n            \"end_date\": \"2024-05-01\",\n            \"narration\": \"Test Narration\",\n            \"amount\": 10000,\n            \"frequency\": \"daily\",\n            \"type\": \"emandate\"\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/subscriptions/upload"
									},
									"response": [
										{
											"id": "03926f94-5618-488b-a40e-1a986bac2ca2",
											"name": "Upload Subscriptions",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"mandates\": [\n        {\n            \"bank\": \"Zenith Bank\",\n            \"account_number\": \"2150302690\",\n            \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n            \"phone_number\": \"08123456789\",\n            \"address\": \"Test Address\",\n            \"start_date\": \"2024-01-01\",\n            \"end_date\": \"2024-05-01\",\n            \"narration\": \"Test Narration\",\n            \"amount\": 10000,\n            \"frequency\": \"daily\",\n            \"type\": \"emandate\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/subscriptions/upload"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "80"
												},
												{
													"key": "ETag",
													"value": "W/\"50-Wapt+KJVXz/ozkdDs6Md3nw7iIU\""
												},
												{
													"key": "Date",
													"value": "Sat, 30 Dec 2023 07:19:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Subscriptions uploaded successfully\",\n    \"data\": true\n}"
										}
									]
								}
							],
							"id": "e649d6f3-d6da-4fd9-887d-95aa5b9bb5b1"
						}
					],
					"id": "1c0b5848-e87c-464d-890a-bd76a5c0bcee",
					"auth": {
						"type": "bearer",
						"bearer": {
							"token": "{{BillerTOKEN}}"
						}
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4c28de08-e6bc-41ee-a62f-7f6e08f1a294",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ba8cd52e-57b3-4928-b1aa-b3f9215f8e5a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Documents",
					"item": [
						{
							"name": "Fetch Document",
							"item": [
								{
									"name": "Fetch Documents",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "184922e6-1258-4a5c-b8a3-5e5922f7eb75",
												"exec": [
													"var jsonData = pm.response.json();",
													"var RequestData = JSON.parse(pm.request.body.raw)",
													"pm.environment.set(\"mandate_id\", jsonData.data.id)",
													"",
													"pm.test(\"Status code is 201\", function(){",
													"    pm.response.to.have.status(201);",
													"})",
													"pm.test(\"Status code is Created\", function () {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'Mandate created successfully'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Mandate created successfully\")",
													"})",
													"pm.test(\"Validate that an accurate account number is returned\", function(){",
													"    pm.expect(jsonData.data.account_number).to.contain(RequestData.account_number)",
													"})",
													"pm.test(\"Validate that an accurate bank ID is returned\", function(){",
													"    pm.expect(jsonData.data.bank_id).to.eql(RequestData.bank_id)",
													"})",
													"pm.test(\"Validate that an accurate email is returned\", function(){",
													"    pm.expect(jsonData.data.email).to.contain(RequestData.email)",
													"})",
													"pm.test(\"Validate that an accurate amount is returned\", function(){",
													"    pm.expect(jsonData.data.amount.toString()).to.contain(RequestData.amount)",
													"})",
													"pm.test(\"Validate that an accurate Beneficiary ID is returned\", function(){",
													"    pm.expect(jsonData.data.beneficiary_id.toString()).to.contain(RequestData.beneficiary_id)",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6d3b8d79-3e25-4b42-ad05-8e66d00e4ba7",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1763bf05-87e0-4665-8f50-7d6d5dd0203f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"documents"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": [
										{
											"id": "49f74338-1a0d-4dc6-ba10-7911a802a426",
											"name": "Fetch Documents",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "ASC"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1271"
												},
												{
													"key": "ETag",
													"value": "W/\"4f7-GZqXuJsCybYE58iGLkOg9rqw2C8\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 09:29:33 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"CAC business registration\",\n                \"description\": \"Upload your CAC documents\",\n                \"slug\": \"cac\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":true}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"Certificate of Incorporation\",\n                \"description\": \"Upload your certificate of incorporation\",\n                \"slug\": \"incorporation-certificate\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"document_definition_id\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"name\": \"Regulatory license\",\n                \"description\": \"Upload your regulatory license\",\n                \"slug\": \"regulatory-license\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    }\n}"
										},
										{
											"id": "bb42cc9c-8116-4e4a-b1f5-dc54dde70f89",
											"name": "Fetch Documents",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/documents?limit=100&page=1&sort_dir=ASC",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"documents"
													],
													"query": [
														{
															"key": "limit",
															"value": "100"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "ASC"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1593"
												},
												{
													"key": "ETag",
													"value": "W/\"639-/aMkNmA08KnOx0cakM+L9x2GwCU\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 10:25:38 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"reference\": \"...\",\n                \"url\": \"http://test.com\",\n                \"document_meta\": null,\n                \"entity_id\": 15,\n                \"entity\": \"biller\",\n                \"extension\": \"txt\",\n                \"document_status\": \"pending\",\n                \"definition_id\": 1,\n                \"name\": \"CAC business registration\",\n                \"description\": \"Upload your CAC documents\",\n                \"slug\": \"cac\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":true}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": {\n                    \"id\": 1,\n                    \"name\": \"CAC business registration\",\n                    \"description\": \"Upload your CAC documents\",\n                    \"slug\": \"cac\",\n                    \"entity\": \"biller\",\n                    \"meta\": \"{\\\"require-reference\\\":true}\",\n                    \"status\": \"active\",\n                    \"created_on\": \"2023-12-10 08:01:55\",\n                    \"created_by\": null,\n                    \"modified_on\": \"2023-12-10 08:01:55\",\n                    \"modified_by\": null,\n                    \"deleted_on\": \"Invalid date\",\n                    \"deleted_flag\": 0,\n                    \"deleted_by\": null\n                }\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"definition_id\": 2,\n                \"name\": \"Certificate of Incorporation\",\n                \"description\": \"Upload your certificate of incorporation\",\n                \"slug\": \"incorporation-certificate\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            },\n            {\n                \"id\": null,\n                \"reference\": null,\n                \"url\": null,\n                \"document_meta\": null,\n                \"entity_id\": null,\n                \"entity\": null,\n                \"extension\": null,\n                \"document_status\": null,\n                \"definition_id\": 3,\n                \"name\": \"Regulatory license\",\n                \"description\": \"Upload your regulatory license\",\n                \"slug\": \"regulatory-license\",\n                \"document_definition_meta\": \"{\\\"require-reference\\\":false}\",\n                \"document_definition_status\": \"active\",\n                \"definition\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"100\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "d66e4419-20e0-40cb-85bf-7871b5634547"
						},
						{
							"name": "Save Document",
							"item": [
								{
									"name": "Save Document",
									"id": "f29c245b-ba4b-43b7-907a-702e6e86bd76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"url\": \"http://test.com\",\n    \"extension\": \"txt\",\n    \"reference\": \"...\",\n    \"document_definition_id\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/documents"
									},
									"response": [
										{
											"id": "f6059cd8-bb19-43f5-9acd-fad10fc22ee4",
											"name": "Save Document",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"url\": \"http://test.com\",\n    \"extension\": \"txt\",\n    \"reference\": \"...\",\n    \"document_definition_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/documents"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "x-encryption-key,x-encryption-iv"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "735"
												},
												{
													"key": "ETag",
													"value": "W/\"2df-ohLvOG6NC0EFmtUqYALHJn7yqa4\""
												},
												{
													"key": "Date",
													"value": "Sun, 10 Dec 2023 10:29:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"url\": \"http://test.com\",\n        \"extension\": \"txt\",\n        \"reference\": \"...\",\n        \"document_definition_id\": 1,\n        \"id\": 1,\n        \"entity_id\": 15,\n        \"entity\": \"biller\",\n        \"meta\": null,\n        \"status\": \"pending\",\n        \"created_on\": \"2023-12-10 10:19:30\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-12-10 10:19:30\",\n        \"modified_by\": null,\n        \"deleted_on\": \"Invalid date\",\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"definition\": {\n            \"id\": 1,\n            \"name\": \"CAC business registration\",\n            \"description\": \"Upload your CAC documents\",\n            \"slug\": \"cac\",\n            \"entity\": \"biller\",\n            \"meta\": \"{\\\"require-reference\\\":true}\",\n            \"status\": \"active\",\n            \"created_on\": \"2023-12-10 08:01:55\",\n            \"created_by\": null,\n            \"modified_on\": \"2023-12-10 08:01:55\",\n            \"modified_by\": null,\n            \"deleted_on\": \"Invalid date\",\n            \"deleted_flag\": 0,\n            \"deleted_by\": null\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "b78b74f4-6bff-49c7-acfd-be7cc8644ac0"
						}
					],
					"id": "363657f8-3faa-4a67-bc8d-9b516113e937"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Fetch User (Me)",
							"item": [
								{
									"name": "Fetch User (Me)",
									"id": "f2421b14-5208-4c58-884e-d6c88d244330",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "c77ade3a-3e18-4e9d-b12f-54eb8b434d44",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "76cb529c-697e-4c62-ba69-95272782c1b6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'jwt expired'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "61224640-c68c-48d4-84c0-9ac9c3c5a099",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9a5934f5-7cdc-43fd-ab1c-8270d5ad81a1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "2c8435d1-e9cc-4d69-8f41-416a29372d8c",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch User (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be05206c-4abc-4098-876d-57eba693ee0c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "eca14d26-9dff-47a3-a4fd-2cbf26db7c53",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "e7ffab46-efe8-4d83-8bb3-79144967ef64",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "d6e85f10-c096-43dc-8a79-b643c0dbafd0",
											"name": "Fetch User (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "ETag",
													"value": "W/\"504-1gvUoYBlnNlbGsii65V1oN11C5k\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Content-Encoding",
													"value": "gzip"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 16:34:04 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												},
												{
													"key": "Transfer-Encoding",
													"value": "chunked"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"two_fa_backup_code\": null,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-14T06:52:06.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null,\n        \"role\": {\n            \"id\": 1,\n            \"name\": \"Super Admin\",\n            \"description\": \"Super Admin\",\n            \"permissions\": [\n                {\n                    \"id\": \"add_users\",\n                    \"name\": \"Add Users\",\n                    \"description\": \"Can add/invite users\"\n                },\n                {\n                    \"id\": \"update_users\",\n                    \"name\": \"Update Users\",\n                    \"description\": \"Can update users\"\n                },\n                {\n                    \"id\": \"view_users\",\n                    \"name\": \"View Users\",\n                    \"description\": \"Can view users\"\n                },\n                {\n                    \"id\": \"activate_users\",\n                    \"name\": \"Activate Users\",\n                    \"description\": \"Can activate users\"\n                },\n                {\n                    \"id\": \"deactivate_users\",\n                    \"name\": \"Deactivate Users\",\n                    \"description\": \"Can deactivate users\"\n                },\n                {\n                    \"id\": \"blacklist_users\",\n                    \"name\": \"Blacklist Users\",\n                    \"description\": \"Can blacklist users\"\n                },\n                {\n                    \"id\": \"add_roles\",\n                    \"name\": \"Add Roles\",\n                    \"description\": \"Can add roles\"\n                },\n                {\n                    \"id\": \"update_roles\",\n                    \"name\": \"Update Roles\",\n                    \"description\": \"Can update roles\"\n                },\n                {\n                    \"id\": \"view_roles\",\n                    \"name\": \"View Roles\",\n                    \"description\": \"Can view roles\"\n                },\n                {\n                    \"id\": \"activate_roles\",\n                    \"name\": \"Activate Roles\",\n                    \"description\": \"Can activate roles\"\n                },\n                {\n                    \"id\": \"deactivate_roles\",\n                    \"name\": \"Deactivate Roles\",\n                    \"description\": \"Can deactivate roles\"\n                }\n            ]\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "f1dc11c2-fdc0-4777-b65a-164dece8a268"
						},
						{
							"name": "Fetch Audit Trails (Me)",
							"item": [
								{
									"name": "Fetch Audit Trails (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "867de176-9f8b-4d64-96aa-9fd5f3b313e4",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f08cb92c-9479-4aba-b7cf-b8f4a407d26f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ccbceb46-93ef-4fd5-9848-4ef869834fe6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "fb4cb84d-2cc9-4a18-9cc0-ba3008b2b450",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "80e7bd55-09df-4049-a964-2185931c055a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "252be19b-74fc-4d41-839d-4f09851f81ea",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "98e17bac-bdbe-4755-806a-7497628e88af",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "20f61986-c9a5-47da-9d57-f810fc0be6bd",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Audit Trails (Me) - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7c53584-f409-40c6-9400-73dcf50aa55c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "95f8ca21-56e5-48c1-a04c-c76210e09620",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "21061315-c7f6-4e8f-b550-4c4f5f42b411",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/audit-trails"
									},
									"response": [
										{
											"id": "405d97f8-2bf1-4190-bf4d-950c3b38b0e3",
											"name": "Fetch Audit Trails (Me)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/users/me/audit-trails"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1531"
												},
												{
													"key": "ETag",
													"value": "W/\"5fb-MX+rn8wSyyczxNGWcZY9xrIAT2U\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 04:20:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 5,\n                \"user_id\": 1,\n                \"type\": \"user\",\n                \"action\": \"Updated user\",\n                \"description\": \"User updated their profile\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:57:02.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:57:02.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:56.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:56.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:56:44.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:56:44.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": \"::1\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:55:11.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:55:11.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"user_id\": 1,\n                \"type\": \"auth\",\n                \"action\": \"Login\",\n                \"description\": \"User logged in\",\n                \"ip\": null,\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-16T03:54:05.000Z\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-04-16T03:54:05.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 5,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "c9c0604a-9566-4aa1-b14b-7e5a0c39478f"
						},
						{
							"name": "Update User (Me)",
							"item": [
								{
									"name": "Update User (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c1763d65-d145-4537-bb8f-b96bb3ed8e14",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9bd79730-57ff-439b-8ffd-357a2ac1f839",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f362ae04-9a6b-4a28-9d1e-9ba6a01ac078",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}}\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "4e911b57-e6f8-4ef4-b21e-39b065854eb0",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c64a617-ca7c-4a7f-8bf0-ff15a476d025",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"First name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ced57bc8-6fa3-4475-af15-4139e6f284ba",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0cfb8b2b-b36a-43ee-b699-9faca1cd39e4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \" \",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "b30bbd13-345f-4895-acbc-a6b66149d51a",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) - Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "534cc772-36f0-40bc-b788-d0ccba23cd85",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is First name cannot be empty\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Last name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "deecb0b1-4064-4cfb-a140-aecbb8c097a0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0a69a8f6-0861-4875-85ce-a6901e5d5a0c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\",\n    \"last_name\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "3c1c23a7-083e-4ccd-8fc7-c6c7a00a24cd",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8fe124d6-f98e-48cb-89a0-10818000e182",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the first name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.eql(Request.first_name)\r",
													"})\r",
													"pm.test(\"Validate that the last name is returned\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2457373b-0a20-407b-a53a-79efb203fcf1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "69201a4d-014d-4097-ab04-5233f05a0db4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"{{$randomFirstName}} Adetutu\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "c41eb4ce-ea4d-4062-b815-c0350b523ad2",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me) -Update only Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cc215605-4d3c-4847-adf2-8ff607dd2247",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"pm.test(\"Validate that the last name returned is accurate\", function(){\r",
													"    pm.expect(jsonData.data.last_name).to.eql(Request.last_name)\r",
													"})\r",
													"pm.test(\"Validate that the first name is returned\", function(){\r",
													"    pm.expect(jsonData.data.first_name).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "26fcbac3-7b9d-458b-a444-13b923eb1ee0",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "3df0cc51-f5bb-4b9c-b23a-a255c765d1ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"last_name\": \"Pascal2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "22aa7794-d7e8-4fb0-b539-6429ef260c0e",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce72363c-fc1b-42c7-a8af-f16a9b57f6f8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c45455f9-2462-44a5-ab92-bc0c61aef33d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1e72b2db-3e7a-46a6-b8d5-2e0fead7c5e1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "5f36ea47-8bda-43eb-b92a-15c3f9071117",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update User (Me)- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eda6d0e9-6491-42bd-94b8-4a6dbc8b8f47",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6c49559b-9089-487f-9e79-cc5a9eae3fd9",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b25dd508-2c1c-48c8-8836-8e60ed7ed1f1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Adetutu\",\n    \"last_name\": \"Pascal\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me"
									},
									"response": [
										{
											"id": "94872664-ed6d-471d-9705-9b9890c40053",
											"name": "Update User (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"olu\",\n    \"last_name\": \"akin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/users/me"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "346"
												},
												{
													"key": "ETag",
													"value": "W/\"15a-sKbkRV+a6OQspXvKEEVpGSIwibc\""
												},
												{
													"key": "Date",
													"value": "Sun, 16 Apr 2023 10:58:03 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"first_name\": \"olu\",\n        \"last_name\": \"akin\",\n        \"id\": 1,\n        \"email\": \"akinsanyaadeoluwa21@gmail.com\",\n        \"role_id\": 1,\n        \"status\": \"active\",\n        \"two_fa\": 0,\n        \"created_on\": \"2023-04-14T06:48:29.000Z\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-04-16T09:57:12.000Z\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "3bec679d-8056-4b2b-b71a-087aac0a9f87"
						},
						{
							"name": "Setup User's 2FA (Me)",
							"item": [
								{
									"name": "Setup User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2546d8e4-34ce-424c-a951-bc58d28c05c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})\r",
													"\r",
													"pm.test(\"Validate the backup codes are returned\", function(){\r",
													"    pm.expect(jsonData.data.backup_codes).to.not.be.empty\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2c97e6b5-e37e-40fa-b52b-3c5a2b329aab",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "70c0c700-52ca-47e2-b17b-8c9da8e869c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfd8a04d-1c2f-495e-8c80-dfbd2bf68294",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c5478cd1-90ee-46bd-a438-3eb37dcd001a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "24955489-37a1-4070-891f-b948ff2113e3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								},
								{
									"name": "Setup User's 2FA (Me) -Invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68b54c5c-cdfa-41fa-8ace-6dafe973f74c",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "fedad155-b91a-41e3-946f-d19a47ef297e",
												"exec": [
													"postman.setNextRequest(\"Create User - Valid\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "8e910043-fe59-405d-9430-9fb5afa68e76",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/me/2fa/setup"
									},
									"response": []
								}
							],
							"id": "1e15cce1-724e-40f9-969d-d904bda83fe5"
						},
						{
							"name": "Activate/Deactivate User's 2FA (Me)",
							"item": [
								{
									"name": "Deactivate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c571015f-c9e4-4a8c-9a43-74b7be82a2d1",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ea5fde35-d673-4bb8-9dce-d492cfc30ef6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f486e5e6-dd88-456a-a9d8-9d17db8f8ff1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "453edcae-1672-4136-9069-c6e890d12db0",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": [
										{
											"id": "93a072b0-9ffa-4960-90e6-7ee5b296b064",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Activate - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "be99fea4-da4f-4c36-8026-87840d047ca7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4ec26e6c-1c70-4f4b-89dd-2c492d56d1ab",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "300113b5-a3dd-4702-9d94-8365ccaedea8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "2221e096-e938-4fc5-98e2-c27bbfedaf4a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "734e6c84-aa9f-4dd4-aa8d-f4f7109013a8",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "Invalid or Expired Auth - Activate/Deactivate User's 2FA (Me)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "49bfcbce-331b-476b-8946-f07d6427a2cf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d6945e7b-3d9c-45bb-8740-9b5bc2414b21",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "18c39ffb-75c0-46f5-aab3-bae7ec388136",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODQxNTEzLCJleHAiOjE2ODQ4NDUxMTN9.vXVMgfX2eoHvKvldVkICU_DbhqDaNhUx0k3bCaxN-fQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "442b49a9-6f64-43eb-8ec4-06ba8c2baa2a",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "f02fbc7c-660f-4980-b494-47602d1c2b45",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								},
								{
									"name": "No Auth - Activate/Deactivate User's 2FA (Me) Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2d99a24-69f8-4b9a-ac35-91dba0728b58",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c6b625d2-6df6-4a9d-bbdd-dc7ea47671ff",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1c391097-e1c4-42bd-aa42-ea180effe348",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/me/2fa/:type",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"me",
												"2fa",
												":type"
											],
											"variable": [
												{
													"id": "6bc22444-84f7-4f9a-a0aa-9f698ce7b2af",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": [
										{
											"id": "9f3aeeb1-33cc-4443-9b74-fb346dc8c507",
											"name": "Activate/Deactivate User's 2FA (Me)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"token\": \"589802\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/me/2fa/:type",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"me",
														"2fa",
														":type"
													],
													"variable": [
														{
															"key": "type",
															"value": "activate"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "40"
												},
												{
													"key": "ETag",
													"value": "W/\"28-OVMgSyV1oMqtVb/r7kZWp0D/aOk\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 17:36:15 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\"\n}"
										}
									]
								}
							],
							"id": "24826b84-6989-4464-9d3f-8b4043bbbb08"
						},
						{
							"name": "Create User",
							"item": [
								{
									"name": "Create User - Valid",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3c3c1273-6ef8-40d4-84fe-dde12b6e29fe",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "af927ba2-c376-4240-940c-00d6d4cb46b1",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.environment.set(\"UserID\", jsonData.data.id)\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "147c432d-2c12-4e8c-806a-82772dd06fa6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomFirstName}}@mailinator.com\",\n    \"role_id\": 4,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty email",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "517e76c2-e5ce-4450-9771-3721c5d23417"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "09841664-17d6-4b3c-8df2-a87d7de3512a"
											}
										}
									],
									"id": "622e1bf9-4c39-4596-b707-24982d1619c3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Empty Role Id",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "dc8c9523-9da5-493d-9c26-3765cf17d835"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8e444341-de45-4740-971e-faa4ce5c38a1"
											}
										}
									],
									"id": "3280082b-975d-4e61-87ca-d0aedcfea690",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": \"\",\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "69fbf2d9-05af-4fd6-8590-093c9d08e4a6"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is '2fa is required to perform the operation'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"2fa is required to perform this operation.\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ea6238b3-7f7f-4260-9dab-b0d1b51b1fd3"
											}
										}
									],
									"id": "29b2b77f-a3ab-4766-a697-d67b7228ca99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": null\n\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - Invalid 2FA",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "4ef23212-f8bf-4d44-b5b7-d7cfeddd1974"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "7f4e78df-1028-426a-9a4c-8219a9cae8ad"
											}
										}
									],
									"id": "92ba2bdd-b957-4fd9-af05-9b196a736241",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"908900\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								},
								{
									"name": "Create User - No Authorization",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "40e6efeb-4452-4fe5-bf08-4a4e6319ace1"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invite sent Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "3e3348e9-d247-4b9a-85e4-bd74c165c274"
											}
										}
									],
									"id": "bfe1ec93-f6df-4877-8ba4-52641dff1dd0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"{{$randomWord}}@mailinator.com\",\n    \"role_id\": 1,\n    \"token\": \"{{2FAToken}}\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users"
									},
									"response": []
								}
							],
							"id": "eb31781a-208a-42cc-8250-4a5179447ec9"
						},
						{
							"name": "Get Users",
							"item": [
								{
									"name": "Get Users -  valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "453d88cd-8dc4-46bc-a967-435262c1221e"
											}
										}
									],
									"id": "fc5bb796-2c59-446d-bcc6-a8010b348792",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Users - No authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "478eec89-218b-47e4-98ea-39a4c003b9c3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "091d0352-bd2f-4f86-b40d-92200de03fdd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "2d9cd33a-93b9-4bf7-bab8-a7d84f4d6a52",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users"
											],
											"query": [
												{
													"key": "limit",
													"value": "5",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "email",
													"value": "akinsanyaadeoluwa21@gmail.com",
													"disabled": true
												},
												{
													"key": "role_id",
													"value": "1",
													"disabled": true
												},
												{
													"key": "search_fields",
													"value": "akin",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "0af38f47-2af0-41e4-b595-19f2466b5401"
						},
						{
							"name": "Get User",
							"item": [
								{
									"name": "Get User - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ce5d83d6-8033-4383-a43f-99471bd87f2a",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "106b09db-106b-4852-95cc-a5705325f87d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "ae795245-21a0-4043-8099-8633ec700c9a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "7048a5b9-267b-4ab3-88f5-e26ef3ababe5",
													"key": "user_id",
													"value": "{{UserID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc13032e-33b4-4e81-abf9-c5547a1f7563",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'user not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2f24ea19-7f0a-4aef-98ad-0eaf3e152c63",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b5859167-92c5-4237-9998-add733fbc52a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "99c93c84-f4e0-4b31-b302-e381327d3210",
													"key": "user_id",
													"value": "aaa"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "214ed5f8-9de0-4cbf-a328-96e739d8c3a6",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "609b178d-dff0-45fb-9d3f-fb03846ee53d",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "bd520995-f4c0-49c4-8687-d390f19057f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "40d82ba9-313e-4741-9490-15e257fb58b3",
													"key": "user_id",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User - Non Existent user Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cef9983d-a8c5-410f-8082-b8f24239962f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2cd2128f-c5d1-423c-86be-f88f459dbbad",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "04d6c780-c8ba-40eb-92aa-7c6274ce5eb5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id"
											],
											"variable": [
												{
													"id": "e4b5ea3b-1939-42c2-b8b6-9ee059d3c520",
													"key": "user_id",
													"value": "10000"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "f024c2be-d865-4d3a-9e99-f937b3a1e7cc"
						},
						{
							"name": "Update User",
							"item": [
								{
									"name": "Update user role",
									"item": [
										{
											"name": "Update user role - empty field",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "6c63ef11-a27a-47aa-a177-d10a0b4c2e48",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role must be a number and greater than or equals to one'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role must be a number and greater than or equals to one\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "03209fc0-d735-4810-886c-264ffab1f8b7",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "10569515-0396-4919-95b8-38961725345b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\",\n    \"role_id\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "3ce629eb-3727-4f58-813f-0fb8a94caccf",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Non Existing Role Id",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Role not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript",
														"id": "66dffa24-12d1-4d29-a724-a42ca9e996d2"
													}
												}
											],
											"id": "a1620876-3e6d-4f73-b6d6-d56ec05f6d0a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 2000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/:user_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "8203c5ed-1aa2-4501-b00f-669e27ba2792",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Update user role - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a2795b44-39be-434b-b1df-06e32433d8b6",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is OK\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is Success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'Success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0ae5a855-bd71-4000-8eb5-1404f767029c",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "a5ed87be-383c-40d6-b2e3-c75f8fabd6e4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n   \n    \"role_id\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d26c39c3-85e0-4935-ab2a-26cf9498cc57",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "af4cae7d-d9aa-40bf-bcce-19a409c3c854"
								},
								{
									"name": "Deactivate/Activate User",
									"item": [
										{
											"name": "Deactivate User - Empty user ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e45e645b-99d4-4de3-bded-e39414e73172",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 404\", function(){\r",
															"    pm.response.to.have.status(404);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"Not Found\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'User not found'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "51cbfe4f-2430-4b13-8099-8b56a1e8c095",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "41b15d03-2ca0-460e-8a47-1157f6cec038",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "2bcb9588-b6ae-467a-bf38-865847d3d1ee",
															"key": "user_id",
															"value": ""
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d85b3471-1683-4c57-982f-f0a17fc1d666",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"User is Inactive'\", function(){\r",
															"    pm.expect(jsonData.data.status).to.eql(\"inactive\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "93d4d8ec-1d55-4570-bca4-25c0d7b37aca",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "53ae1f9d-5e50-40ca-a6a5-1581ea040ef2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "7eb03eae-5c98-4c24-b7be-9134883ec2d1",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - an Inactive user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c02b0f51-75e1-462a-ac7d-3aac0a9cd215",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate an inactive user'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is inactive\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "28427c90-309e-4697-8433-a6e3984a9e10",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "1bd56383-197d-4299-9106-f583d3069eb3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\",\n    \"role_id\": 2\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "aec240f5-bd7f-4338-8709-f8672018b97b",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Deactivate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "be09b528-0bd3-4231-a573-d1178dd1868f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot deactivate a user that is pending\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "2be71808-eec2-47b3-bf62-8e74e234e8cb",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "c2531108-119e-45b6-b282-8b1255092f88",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"inactive\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "d73ac608-512b-4f9b-bfdf-42fd98694556",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Pending User",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "520926f8-4ae3-4d3d-8a82-6da83fda77b7",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is error\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot deactivate a user that is pending'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is pending\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "5cfd8d8f-6fd1-4893-b4dc-1e5f9595700d",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "5e3757c9-29ce-47d7-a14f-5c1170c3c3ab",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "f0032c6e-f6ab-4a22-9dc2-ea022f69ffd3",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Valid",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0ce215e7-bdc7-4ed6-8114-0daf1cf55633",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 200\", function(){\r",
															"    pm.response.to.have.status(200);\r",
															"})\r",
															"pm.test(\"Status code is Not Found\", function () {\r",
															"    pm.response.to.have.status(\"OK\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"message is 'success'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"success\")\r",
															"})\r",
															"pm.test(\"User is active'\", function(){\r",
															"    pm.expect(jsonData.data.status).to.eql(\"active\")\r",
															"})\r",
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "4a0ce47b-368c-4e6f-b19a-b6442fbfc956",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "50914ddf-0fe0-4b27-bba0-9eed13b10a22",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "4fca6e5f-e4ab-482d-9e61-607f9a41c567",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Activate User - Activate already active user",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3a177ae-c073-4c1f-8d9c-926831bc426f",
														"exec": [
															"var jsonData = pm.response.json();\r",
															"\r",
															"pm.test(\"Status code is 400\", function(){\r",
															"    pm.response.to.have.status(400);\r",
															"})\r",
															"pm.test(\"Status code is Bad Request\", function () {\r",
															"    pm.response.to.have.status(\"Bad Request\");\r",
															"});\r",
															"\r",
															"pm.test(\"Status is success\", function(){\r",
															"    pm.expect(jsonData.status).to.eql(\"error\")\r",
															"})\r",
															"pm.test(\"message is 'Cannot activate an active user'\", function(){\r",
															"    pm.expect(jsonData.message).to.eql(\"Cannot activate a user that is active\")\r",
															"})"
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "b98bf9dc-6e09-4514-a47b-10f02bbbe52e",
														"exec": [],
														"type": "text/javascript"
													}
												}
											],
											"id": "146978ec-fb48-4081-ba55-06a697b09201",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "noauth"
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/:user_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														":user_id"
													],
													"variable": [
														{
															"id": "7e7a2532-4c53-4740-8423-240e18c0aa7d",
															"key": "user_id",
															"value": "{{UserID}}"
														}
													]
												}
											},
											"response": []
										}
									],
									"id": "413dc96d-1190-468c-8c57-da244880fa40"
								}
							],
							"id": "5f33a749-33bc-41b8-b746-b6652dbc4bc3"
						},
						{
							"name": "Change User Password",
							"item": [
								{
									"name": "Change User Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e22bee38-92f2-499b-91c5-ba2e662a11f2"
											}
										}
									],
									"id": "f80817b6-e79c-48e0-a48a-a9ddce9c0bd7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@\",\n    \"confirm_new_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Change Password again",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Password Success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9e8915c7-39c9-4bc5-bf70-76343712cde7"
											}
										}
									],
									"id": "b3af3ec4-39be-4169-bebd-097ef1ebbabc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password- Current = New Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Old Password the same as New Password'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Old password used again. Enter a new password\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9ed52803-e320-4036-9976-a400b710e553"
											}
										}
									],
									"id": "268fa1cd-4314-4688-87f7-6cb986e3f9dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password12@@\",\n    \"confirm_new_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty current password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'current_password should not be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Current password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e242e4dc-8631-489d-b548-3e14cb79c36c"
											}
										}
									],
									"id": "8e9a95e6-54cc-4abf-be1e-63aaacddad71",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"\",\n    \"new_password\": \"Tester@11.\",\n    \"confirm_new_password\": \"Tester@11.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak.'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak.\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "2cafc6cd-d3d0-4428-acfc-13ce7288d431"
											}
										}
									],
									"id": "26f04fae-98ac-4d36-a0a8-274fbd867668",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password\",\n    \"confirm_new_password\": \"Password\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty New password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "e0044c80-5bb4-40ee-bbba-72fdae8a1fc2"
											}
										}
									],
									"id": "99a14b80-8a4b-46c5-8306-c6ce5120afd2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Empty Confirm Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_new_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_new_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ec23a870-2b3c-444c-bf62-c25068321226"
											}
										}
									],
									"id": "9c84c98a-cee5-4f56-8ad0-ba3dd43c84a9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								},
								{
									"name": "Change User Password - Password Mis-match Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "f5dd0c32-0871-4287-843a-aae98b8b4951"
											}
										}
									],
									"id": "20c74d24-181a-40b5-b1b3-b817d54f9eb7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"current_password\": \"Password12@@\",\n    \"new_password\": \"Password@1\",\n    \"confirm_new_password\": \"Password@12\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/passwords"
									},
									"response": []
								}
							],
							"id": "afa4dda0-530d-499f-bcce-02d7ebc9295e"
						},
						{
							"name": "Resend User Invite",
							"item": [
								{
									"name": "Resend User Invite - Pending and Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fcade068-dca6-4769-94b3-8299d80d58c7",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Invite sent successfully returned\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invite sent successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4b7ffa83-2223-4004-a6a7-9990e13c2b1a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "00a8848c-1285-4009-9089-a9398e1eafa0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "70656683-1892-420a-9333-b290f35a36c8",
													"key": "user_id",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Active",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Can only resend invite to pending users'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Can only resend invite to pending users\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "df99abfb-c8e0-4f2f-b975-783efa1faa61"
											}
										}
									],
									"id": "3d3927a4-d137-4b9b-9d3a-e54cfd4b997c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "04d969be-3af4-4c4f-8a5e-64a60fdfe95f",
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Resend User Invite - Invalid User Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "d02e1aa8-d195-4826-b481-e90fe4bb865d"
											}
										}
									],
									"id": "a231048d-d803-475d-8ac8-d4627ee8d0ff",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url_v1}}/users/:user_id/resend-invite",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												":user_id",
												"resend-invite"
											],
											"variable": [
												{
													"id": "86c3e6a4-cd1d-433e-9674-c4cb4689a2bb",
													"key": "user_id",
													"value": "aa"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "ff9428a2-a97b-40af-ae11-827056b5afab"
						},
						{
							"name": "Fetch User's Stats",
							"item": [
								{
									"name": "Fetch User's Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ee6981a2-cee4-4849-8e1d-61581f71d5a3"
											}
										}
									],
									"id": "3061520b-3b40-464c-b303-9f89072c259a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								},
								{
									"name": "Fetch User's Stats - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8bc6a5b6-d542-4eeb-bedf-560ea89fa590"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "ae249165-0e53-4b90-9885-7ab948adbf9a"
											}
										}
									],
									"id": "f996a6ba-0d05-4a1e-b6f5-f9af1266df08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url_v1}}/users/stats"
									},
									"response": []
								}
							],
							"id": "3fa869c9-de94-4ec5-908a-3c11e2bef738"
						},
						{
							"name": "Password Reset",
							"item": [
								{
									"name": "Password Reset",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Password reset link successfully sent'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password reset link successfully sent, please check your email\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9ee2a36d-c66d-46f5-8e0c-68d3b2c75cc3"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"id": "2059b51b-3691-40f5-b3b2-a5e200366055"
											}
										}
									],
									"id": "329a8799-5f4c-47de-8266-9f37980e7ab2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@mailinator.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "63974670-80f6-4256-99f5-37ec5dce3e22",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Invalid Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "44e581d0-2f28-450c-b5a3-d26632c554b7"
											}
										}
									],
									"id": "9fc7b503-9180-4989-9f7e-a623196526ba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@mailinator\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "5ae5c342-17cf-4eb8-b704-9626b9fd364b",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Empty Email Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Please enter a valid email address'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Please enter a valid email address\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8a9def5a-4354-4170-97b7-39f5e6585ea9"
											}
										}
									],
									"id": "9ee585c6-b1be-4acc-a46b-4fd40091b409",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \" \"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "f922ecea-9626-4588-8da8-05e3ec4a6eef",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Password Reset - Non-existing Email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'User does not exists or inactive'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"User does not exists or inactive\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "0c5f08c2-4139-412d-975e-88659db9916f"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setNextRequest('Create Mandate')"
												],
												"type": "text/javascript",
												"id": "6b5872e6-4380-4ab5-8caa-dfeb3ee699e6"
											}
										}
									],
									"id": "401d4241-20dc-447f-b7b3-88110fdce6ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"zeez@getnada.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/users/password-reset"
									},
									"response": [
										{
											"id": "0c43b1d6-08ba-4389-9fca-7055786f51be",
											"name": "Password Reset",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"akinsanyaadeoluwa21@gmail.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url}}/users/password-reset"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Thu, 11 May 2023 20:54:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "85721dcd-5811-4ba3-9aa4-f97a87899d88"
						},
						{
							"name": "Reset Password",
							"item": [
								{
									"name": "Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Password reset successful'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Password reset successful\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "c49c958a-e177-4854-a0f4-03a35ddda6e3"
											}
										}
									],
									"id": "4eaaaf6f-b488-4474-8f15-8a4ddcb0b1ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "32195931-0cce-47c0-a4f6-1ad0572ced2a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "ca548eae-a031-4422-a9d7-ab3f02a6690e",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"New password cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "70600adb-1458-43fd-a252-208b880249cd"
											}
										}
									],
									"id": "0ccf8821-0292-4b0e-9e13-68367f7a7269",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"\",\n    \"confirm_password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "e00a891d-18ed-42dc-b81c-8b450d8df02b",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "2ee96bb2-bebb-498b-ab97-72858c000fc9",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Password does not match complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'New password is too weak'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"New password is too weak\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "ff4e8e47-08aa-457c-8c95-5a1bd16588dc"
											}
										}
									],
									"id": "8b444536-f281-432c-bd2c-7fed1a8d0a66",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Passwor\",\n    \"confirm_password\": \"Passwor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "aab615eb-8ce8-41b3-957e-44e0d91527d9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "93c9cc9e-072c-42ea-8825-311cb2b31eb0",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - mismatched New Password And Confirm Password Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Password Mismatch'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Password Mismatch\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "1fdb6b10-f1ae-4ede-b50f-6507036483d4"
											}
										}
									],
									"id": "f556be0f-8571-4831-b449-8e54fb90911e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"Password12@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "4bfdc19d-315e-465a-8d6b-647ab60e2aee",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "884f59fa-97c0-45b6-a803-69369621a048",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Reset Password - Empty New Password Field Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'confirm_password must be longer than or equal to 8 characters'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"confirm_password must be longer than or equal to 8 characters\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "5dc953b5-0aab-4519-9786-613950ba9e34"
											}
										}
									],
									"id": "90b5d4fc-e015-4386-9a53-a6db6e44952b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"new_password\": \"Password12@@\",\n    \"confirm_password\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/users/reset-password/:token",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												"reset-password",
												":token"
											],
											"variable": [
												{
													"id": "d4c3dd53-91b0-4641-9458-334877776148",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJwYXNzd29yZF9yZXNldCIsImlhdCI6MTY4NTUyNTM4NSwiZXhwIjoxNjg1NTI4OTg1fQ.qKjeHN9zNYjRI1s5jThpLHb37saO-jxiprK8p6aU2Yc"
												}
											]
										}
									},
									"response": [
										{
											"id": "8dfc34ec-104b-4a66-a430-2cd2c7d200bc",
											"name": "Reset Password",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"new_password\": \"Mighty@!!111\",\n    \"confirm_password\": \"Mighty@!!111\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/users/reset-password/:token",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"users",
														"reset-password",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6InBhc3N3b3JkX3Jlc2V0IiwiaWF0IjoxNjg0MjUxNzU4LCJleHAiOjE2ODQyNTUzNTh9.dq2XQdIUw9rLkeaVnTL9GT7RyynH9FuJHXXsYdKJlds"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "52"
												},
												{
													"key": "ETag",
													"value": "W/\"34-57/f8d/ddg2BJiLSKLizUm31tzY\""
												},
												{
													"key": "Date",
													"value": "Tue, 16 May 2023 15:44:48 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": null\n}"
										}
									]
								}
							],
							"id": "233d48fa-663a-4cc0-b6b1-ed1a2d990f2c"
						},
						{
							"name": "Accept Invite",
							"item": [
								{
									"name": "Accept User Invite",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "9fea0004-9dff-43f1-bbce-5ab06d47f9e8"
											}
										}
									],
									"id": "3b44d343-66c6-40da-8871-5aed747158f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "a07808c6-413e-4147-b3fb-99c266cbeb9a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "7128d65d-60c5-4815-bb1f-3e53f6f9eb18",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Invalid or wrong password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "8436f913-ca27-469a-8274-a1bb139a50c1"
											}
										}
									],
									"id": "550f7fb8-3787-4018-94aa-cae8e37252ee",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "c7ad5b53-a06c-4091-a9a4-abfb2c1f3de0",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "170d9c42-33c8-4b25-8d36-5222f9228842",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "4e4da7e1-e4d4-430d-8a92-ee5a1568f83b"
											}
										}
									],
									"id": "71b87d8a-8905-429d-989c-695330310b20",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "0e39b547-91fd-4455-8602-17d9abc35d07",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "b01639ab-da78-4ea0-8b75-d44d565b0f21",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty First Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "61ec2d18-d093-4588-af93-8535b6a91725"
											}
										}
									],
									"id": "a2963d29-06f4-42ad-ab3a-97d5b34f8f4d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "91dee3b4-625e-4d17-8d32-8eedf1db0ab9",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "40d4eba2-145a-4472-a7a4-4024a5aab733",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Last Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "569e791d-36b7-4e9e-8ec0-1189065d37bb"
											}
										}
									],
									"id": "64b762d5-3f4d-4dd7-a5e8-4b586fe348e0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5b5910a6-c147-460e-886a-f9d5c9f3fa8a",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "49a489cb-a692-4991-8d38-60a625f1847c",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Empty Password field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "aec4c203-7e79-4ecd-a10b-5592604dd50f"
											}
										}
									],
									"id": "67319392-b039-444d-8acc-2d398b32ad78",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "e6382ce9-d3df-4bd9-be51-d150d979c121",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "2c21baaf-67ff-44b9-a4db-3a413f0126c6",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								},
								{
									"name": "Accept User Invite- Doesn't meet Password Complexity rule",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Bad request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Invalid or Expired Token returned'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Invalid or Expired Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "6fe7e58e-7b99-4ac6-a2dd-2b36a3b79251"
											}
										}
									],
									"id": "b5e7e0a3-c642-4d57-a6c3-9bd6b2446692",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"Kemi\",\n    \"last_name\": \"Kemi\",\n    \"password\": \"Password12@@\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url_v1}}/users/accept-invite/:token",
											"host": [
												"{{base_url_v1}}"
											],
											"path": [
												"users",
												"accept-invite",
												":token"
											],
											"variable": [
												{
													"id": "5685a7b3-f927-45e2-81cf-474bb0a4d2a4",
													"key": "token",
													"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NiwidHlwZSI6Imludml0YXRpb24iLCJpYXQiOjE2ODU5ODQ5MjEsImV4cCI6MTY4NTk4ODUyMX0.Fy2sARJr7Soed6mO-xeJFjSzz0gYLd1POzhalf15wbM"
												}
											]
										}
									},
									"response": [
										{
											"id": "5487a00b-782c-458e-9afb-40c1c463fd6a",
											"name": "Accept User Invite",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"password\": \"12345678\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url_v1}}/users/accept-invite/:token",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"users",
														"accept-invite",
														":token"
													],
													"variable": [
														{
															"key": "token",
															"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjgxMzQ1NTM0LCJleHAiOjE2ODEzNDkxMzR9.3nyAOR3WIh3lqBEc8t1GT3l-wn0FlPIEK5q9CnInqMQ"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "48"
												},
												{
													"key": "ETag",
													"value": "W/\"30-7W/o1lMMNRtnjeeLXUpxXvTFeXs\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Thu, 13 Apr 2023 00:25:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Invite accepted\"\n}"
										}
									]
								}
							],
							"id": "581e9964-c9d6-4fa9-a3ac-e4ecc43cf7f8"
						},
						{
							"name": "Get User's Mandates",
							"id": "9921d7bf-807d-4592-bda7-f24554108694",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":user_id",
										"mandates"
									],
									"query": [
										{
											"key": "limit",
											"value": "5"
										},
										{
											"key": "page",
											"value": "1"
										}
									],
									"variable": [
										{
											"id": "139c2219-0059-415c-a7d0-4f4db0ef56f3",
											"key": "user_id",
											"value": "{{UserID}}"
										}
									]
								}
							},
							"response": [
								{
									"id": "0f391191-f426-42c0-8f53-0e8e9a34fb0f",
									"name": "Get User's Mandates",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/users/:user_id/mandates?limit=5&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"users",
												":user_id",
												"mandates"
											],
											"query": [
												{
													"key": "limit",
													"value": "5"
												},
												{
													"key": "page",
													"value": "1"
												}
											],
											"variable": [
												{
													"key": "user_id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "3847"
										},
										{
											"key": "ETag",
											"value": "W/\"f07-yRcWIhe96/5qwNoRB2DKqBCO7R0\""
										},
										{
											"key": "Date",
											"value": "Fri, 12 May 2023 09:10:15 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 7,\n                \"bank_id\": 52,\n                \"account_number\": 1780004070,\n                \"account_name\": \"vee Test\",\n                \"reference_number\": null,\n                \"frequency\": 1,\n                \"bvn\": \"33333333333\",\n                \"session_id\": \"999999230330145645170092220580\",\n                \"phone_number\": \"08139354433\",\n                \"email\": \"adeolu@lendsqr.com\",\n                \"start_date\": \"2023-05-10T00:00:00.000Z\",\n                \"end_date\": \"2023-05-15T00:00:00.000Z\",\n                \"narration\": \"Rand\",\n                \"address\": \"Ikate\",\n                \"amount\": \"50.00\",\n                \"beneficiary_id\": 1,\n                \"file_base64\": \"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\",\n                \"file_extension\": \"png\",\n                \"status\": \"active\",\n                \"workflow_status\": null,\n                \"debit_type\": \"all\",\n                \"entity\": \"user\",\n                \"created_on\": \"2023-05-11 02:20:53\",\n                \"created_by\": 1,\n                \"modified_on\": \"2023-05-11 07:58:41\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 1,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"5\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "51cdc211-502d-49e4-99f8-eff5ec506895"
				},
				{
					"name": "Banks",
					"item": [
						{
							"name": "Fetch Banks",
							"item": [
								{
									"name": "Fetch Banks - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0f0d781-d9a0-4a09-a236-db99e7929aea",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"The Bank Name and Bank ID is returned\", function () {\r",
													"    const Data = jsonData.data.data;\r",
													"    Data.forEach(function (bank) {\r",
													"        pm.expect(bank.id).to.be.a('number');\r",
													"        pm.expect(bank.name).to.be.a('string');\r",
													"        pm.expect(bank.bank_code).to.be.a('string');\r",
													"        pm.expect(bank.institution_code).to.be.a('string')\r",
													"        pm.expect(bank.institution_code.length).to.greaterThan(4);\r",
													"    });\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6432ccef-4264-4a7c-b123-befd93b5f1b4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "5662c75d-2c18-471b-93fc-df3e7c1bf19c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{ImputerTOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token Copy 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a28f5bb6-dc94-4b28-9657-f234bb7fe7ba",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "1c8a2391-e620-44fc-9811-ac03f5535af6",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "0b7af6d2-a786-4a81-a710-7b421bc8312b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - No Token Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9761f057-5c2b-4436-8b88-a6c6714ac595",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0500ae4d-7f03-4e0a-a8d6-f663e82681cd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "183e21b4-aae1-4428-a4bd-000f370e3d30",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Banks - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bdebc88b-0e53-4c38-8055-2a84dc07fbbf",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9b219601-d80a-460a-9eec-0beefe40dc03",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6f47859a-18ed-476a-b23f-8e48ba1f243b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks?limit=100&page=1&sort_dir=ASC",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks"
											],
											"query": [
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": "ASC"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "139eb4b7-7726-4dd3-b5a5-e4f01073fb4b"
						},
						{
							"name": "Fetch Bank",
							"item": [
								{
									"name": "Fetch Bank",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a1eaf6c4-e93a-4482-a7b8-836f67767edc",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that a data is returned\", function(){\r",
													"    pm.expect(jsonData.data).to.not.be.empty\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b322f98f-9040-455b-9ea7-5c9b3114ad75",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c6c75a70-778b-4a12-a99d-a5f799c4013c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "cf5f5359-c702-42e8-88d2-76cf1b43b7a1",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"id": "9b23db54-cfa8-4a84-80f2-a55d2b3c38b8",
											"name": "Fetch Bank",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/banks/:bank_id",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"banks",
														":bank_id"
													],
													"variable": [
														{
															"key": "bank_id",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "365"
												},
												{
													"key": "ETag",
													"value": "W/\"16d-7QieTGIC9XbSXDesBODEj2aaqsg\""
												},
												{
													"key": "Date",
													"value": "Mon, 24 Apr 2023 20:32:09 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"id\": 1,\n        \"name\": \"Access Bank\",\n        \"bank_code\": \"044\",\n        \"institution_code\": \"000014\",\n        \"url\": \"https://lendstack-s3.s3.us-east-2.amazonaws.com/bank_logos/044.png\",\n        \"status\": \"active\",\n        \"created_on\": \"2020-06-26T16:09:32.000Z\",\n        \"created_by\": null,\n        \"modified_on\": null,\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Bank - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b2a0bed1-2a43-4e7a-9a5e-7044f6f80b7b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5bdb3d07-6484-48bf-a470-f1512ea77c87",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "916ad58b-256b-4948-909e-fca7b87daede",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "a03f300e-a3a9-4949-94d9-b655a279841b",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Bank - Expired Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50220dc1-ad86-4adb-96de-fa357cfede86",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a24f1c2c-1646-4fd0-b1a0-1281617376da",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "190c4d02-6ba5-4a76-9587-e4dc2b0c10a7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzOTA4MjA2LCJleHAiOjE2ODM5MTE4MDZ9.1m-ihBWb_l3VYXSil7bt45-EzYtEJVOsNlPwngrt1pw",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/:bank_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												":bank_id"
											],
											"variable": [
												{
													"id": "68d643ec-c795-4fb3-a182-bca0aac34bb8",
													"key": "bank_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "abd887e3-d4d4-4fde-9017-83e06d8d33bf"
						},
						{
							"name": "Account Lookup",
							"item": [
								{
									"name": "Account Lookup",
									"id": "bbc62e88-f751-478b-9733-196dfe997984",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"account_number\": \"3159643779\",\n    \"bank_id\": 11\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/banks/account-lookup"
									},
									"response": [
										{
											"id": "cc789946-9500-4d1a-b1d5-e18c1edca081",
											"name": "Account Lookup",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"account_number\": \"0112345678\",\n    \"bank_id\": 52\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": "{{base_url_v1}}/banks/account-lookup"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "141"
												},
												{
													"key": "ETag",
													"value": "W/\"8d-gED12kCzTHDqZpjC4M4KJhmfA8M\""
												},
												{
													"key": "Date",
													"value": "Thu, 27 Apr 2023 15:06:16 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"account_name\": \"vee Test\",\n        \"bvn\": \"33333333332\",\n        \"session_id\": \"999999230427160615129743771734\"\n    }\n}"
										}
									]
								}
							],
							"id": "655d9f20-ee11-46e7-8d20-a42d9e1c4131"
						},
						{
							"name": "Fetch Enquiries Stats",
							"id": "103f2317-73e5-428e-8890-7ad68fccb074",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{TOKEN}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{TOKEN}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/banks/stats",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"banks",
										"stats"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "sort_dir",
											"value": "ASC",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"id": "0b010fae-81e6-4176-8d28-d4af93b780e6",
									"name": "Fetch Enquiries Stats",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{base_url}}/banks/stats",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"banks",
												"stats"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sort_dir",
													"value": "ASC",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Credentials",
											"value": "true"
										},
										{
											"key": "Content-Security-Policy",
											"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
										},
										{
											"key": "Cross-Origin-Embedder-Policy",
											"value": "require-corp"
										},
										{
											"key": "Cross-Origin-Opener-Policy",
											"value": "same-origin"
										},
										{
											"key": "Cross-Origin-Resource-Policy",
											"value": "same-origin"
										},
										{
											"key": "X-DNS-Prefetch-Control",
											"value": "off"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=15552000; includeSubDomains"
										},
										{
											"key": "X-Download-Options",
											"value": "noopen"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Origin-Agent-Cluster",
											"value": "?1"
										},
										{
											"key": "X-Permitted-Cross-Domain-Policies",
											"value": "none"
										},
										{
											"key": "Referrer-Policy",
											"value": "no-referrer"
										},
										{
											"key": "X-XSS-Protection",
											"value": "0"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "208"
										},
										{
											"key": "ETag",
											"value": "W/\"d0-UXRJ7J3uI7kE1CiL+iizPIB9g7U\""
										},
										{
											"key": "Date",
											"value": "Sun, 04 Jun 2023 11:37:32 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"name_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ],\n        \"balance_enquiry\": [\n            {\n                \"status\": \"pending\",\n                \"count\": 4\n            },\n            {\n                \"status\": \"failed\",\n                \"count\": 1\n            }\n        ]\n    }\n}"
								}
							]
						}
					],
					"id": "bd6399b5-ebd2-44e1-9097-5a23050e88dc"
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Fetch Settings Categories",
							"item": [
								{
									"name": "Fetch Settings Categories",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb3d648c-095a-48a1-a173-46c7fef723b5",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that all categories are present\", function(){\r",
													"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"Email Service\"})\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "92b75223-35ae-4375-963c-c7f92f5344dc",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "87303188-1941-46dc-a8ec-cf6b0770a824",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "b30175e7-47ea-44b6-8e45-6cfbce3184d0",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "edbee797-96f3-433a-bd4c-0cbd12eda810"
											}
										}
									],
									"id": "494c0403-e9ed-4756-968d-8480674a2a14",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "4da45717-7e29-41be-97c3-b69ee0134225",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings Categories - Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8980496d-1f85-4d8a-987b-60754cf51e28",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "378d7a26-dbe4-4242-bb73-fd83e15918f1",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "882b7cdb-4afd-4cf7-9864-4b7b5710f65a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0MjQ3NzY5LCJleHAiOjE2ODQyNTEzNjl9.Hdt1k6cWyKZOBNDAHy9R9stTWLEIeELHvx2ahfdrQV4",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/settings/categories"
									},
									"response": [
										{
											"id": "c0cf29d4-6074-492e-aed7-66700f56af74",
											"name": "Fetch Settings Categories",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/categories"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "6215"
												},
												{
													"key": "ETag",
													"value": "W/\"1847-wtsLxTd1QOPeN9BbVtpY6WbxP5c\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:07:20 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Email Service\",\n                \"description\": \"Contains the email service configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 6,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Provider\",\n                        \"description\": \"Provides an option of email services to select from.\",\n                        \"slug\": \"email_provider\",\n                        \"data_type\": \"string\",\n                        \"value\": \"sterling\",\n                        \"value_options\": [\n                            \"sterling\",\n                            \"sendgrid\"\n                        ],\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email Key\",\n                        \"description\": \"Email Secret key.\",\n                        \"slug\": \"email_secret_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"settings_category_id\": 2,\n                        \"name\": \"Email IV\",\n                        \"description\": \"Email IV key.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:35\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:35\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 1,\n                \"name\": \"General Settings\",\n                \"description\": \"Contains the general organization settings\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 1,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Number of API keys\",\n                        \"description\": \"Restricts the number of API keys that can be created.\",\n                        \"slug\": \"number_of_api_keys\",\n                        \"data_type\": \"number\",\n                        \"value\": \"20\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:32\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:32\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 2,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Lock IP Address\",\n                        \"description\": \"Restricts origins that can make API calls to the system.\",\n                        \"slug\": \"lock_ip_address\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Notifications Group Email\",\n                        \"description\": \"Contains a list of email addresses to send notifications to.\",\n                        \"slug\": \"notifications_group_email\",\n                        \"data_type\": \"array\",\n                        \"value\": null,\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Inactivity Timeout\",\n                        \"description\": \"Sets an inactivity timeout in seconds.\",\n                        \"slug\": \"inactivity_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:33\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:33\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"settings_category_id\": 1,\n                        \"name\": \"Request Timeout\",\n                        \"description\": \"Sets an request timeout in seconds.\",\n                        \"slug\": \"request_timeout\",\n                        \"data_type\": \"number\",\n                        \"value\": \"60\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:34\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:34\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 3,\n                \"name\": \"Nibss Settings\",\n                \"description\": \"Contains Nibss configuration\",\n                \"visibility\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"settings\": [\n                    {\n                        \"id\": 9,\n                        \"settings_category_id\": 3,\n                        \"name\": \"API key\",\n                        \"description\": \"Contains Nibss API key.\",\n                        \"slug\": \"nibss_api_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Host IP\",\n                        \"description\": \"Contains Nibss Host/API IP.\",\n                        \"slug\": \"nibss_api_ip\",\n                        \"data_type\": \"string\",\n                        \"value\": \"http://3.139.55.130:8050\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 0,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"global\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 07:02:39\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"settings_category_id\": 3,\n                        \"name\": \"Mandate Frequency\",\n                        \"description\": \"Contains Nibss default mandate frequency.\",\n                        \"slug\": \"email_iv_key\",\n                        \"data_type\": \"string\",\n                        \"value\": \"\",\n                        \"value_options\": null,\n                        \"minimum_value\": null,\n                        \"maximum_value\": null,\n                        \"encrypt\": 1,\n                        \"visibility\": \"global\",\n                        \"change_by\": \"system\",\n                        \"status\": \"active\",\n                        \"created_on\": \"2023-05-14 06:02:36\",\n                        \"created_by\": null,\n                        \"modified_on\": \"2023-05-14 06:02:36\",\n                        \"modified_by\": null,\n                        \"deleted_on\": null,\n                        \"deleted_flag\": 0,\n                        \"deleted_by\": null\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": 10\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "4b1958d0-281d-4ea5-8bfd-0b28b02b4250"
						},
						{
							"name": "Fetch Settings",
							"item": [
								{
									"name": "Fetch Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate that all categories are present\", function(){\r",
													"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})\r",
													"})"
												],
												"type": "text/javascript",
												"id": "043fd8c8-4a5c-4555-b01b-fc4e81c9b2e0"
											}
										}
									],
									"id": "082bd69b-c0fa-43e9-8588-7486e4cb8fb2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "500d6933-b481-4580-bbe8-b02aa98876c2",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0348e5ff-c214-495f-90ee-67521c35b61a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "453b796c-dbb0-42c0-81a9-081583420a15",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "62d6eb75-8c92-422f-ac91-c9abb6873bbe",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "ec5c2b6a-1caf-438c-88ab-23ab071995f4",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Settings - Expired authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efa1f288-5b8b-4702-b437-09888d4946a3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ebfb0b03-e827-4c80-86f6-9c08e12e4aa7",
												"exec": [
													"postman.setNextRequest(\"Logout - Invalid/expired Token\")"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "a232ab09-0ee1-44b4-ba6e-75631dbf1212",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings?limit=25",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings"
											],
											"query": [
												{
													"key": "limit",
													"value": "25"
												}
											]
										}
									},
									"response": [
										{
											"id": "af0167f6-136f-4a42-bfa2-17a46217eef5",
											"name": "Fetch Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url}}/settings?limit=25",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings"
													],
													"query": [
														{
															"key": "limit",
															"value": "25"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5315"
												},
												{
													"key": "ETag",
													"value": "W/\"14c3-qffDW4wviPDtHPvm1zWAWzKMloE\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:09:47 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 9,\n                \"settings_category_id\": 3,\n                \"name\": \"API key\",\n                \"description\": \"Contains Nibss API key.\",\n                \"slug\": \"nibss_api_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 8,\n                \"settings_category_id\": 2,\n                \"name\": \"Email IV\",\n                \"description\": \"Email IV key.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 7,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Key\",\n                \"description\": \"Email Secret key.\",\n                \"slug\": \"email_secret_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:35\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:35\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 6,\n                \"settings_category_id\": 2,\n                \"name\": \"Email Provider\",\n                \"description\": \"Provides an option of email services to select from.\",\n                \"slug\": \"email_provider\",\n                \"data_type\": \"string\",\n                \"value\": \"sterling\",\n                \"value_options\": [\n                    \"sterling\",\n                    \"sendgrid\"\n                ],\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 10,\n                \"settings_category_id\": 3,\n                \"name\": \"Host IP\",\n                \"description\": \"Contains Nibss Host/API IP.\",\n                \"slug\": \"nibss_api_ip\",\n                \"data_type\": \"string\",\n                \"value\": \"http://3.139.55.130:8050\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 07:02:39\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 4,\n                \"settings_category_id\": 1,\n                \"name\": \"Inactivity Timeout\",\n                \"description\": \"Sets an inactivity timeout in seconds.\",\n                \"slug\": \"inactivity_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 2,\n                \"settings_category_id\": 1,\n                \"name\": \"Lock IP Address\",\n                \"description\": \"Restricts origins that can make API calls to the system.\",\n                \"slug\": \"lock_ip_address\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 11,\n                \"settings_category_id\": 3,\n                \"name\": \"Mandate Frequency\",\n                \"description\": \"Contains Nibss default mandate frequency.\",\n                \"slug\": \"email_iv_key\",\n                \"data_type\": \"string\",\n                \"value\": \"\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 1,\n                \"visibility\": \"global\",\n                \"change_by\": \"system\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:36\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:36\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 3,\n                \"settings_category_id\": 1,\n                \"name\": \"Notifications Group Email\",\n                \"description\": \"Contains a list of email addresses to send notifications to.\",\n                \"slug\": \"notifications_group_email\",\n                \"data_type\": \"array\",\n                \"value\": null,\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:33\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:33\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 1,\n                \"settings_category_id\": 1,\n                \"name\": \"Number of API keys\",\n                \"description\": \"Restricts the number of API keys that can be created.\",\n                \"slug\": \"number_of_api_keys\",\n                \"data_type\": \"number\",\n                \"value\": \"20\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:32\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:32\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            },\n            {\n                \"id\": 5,\n                \"settings_category_id\": 1,\n                \"name\": \"Request Timeout\",\n                \"description\": \"Sets an request timeout in seconds.\",\n                \"slug\": \"request_timeout\",\n                \"data_type\": \"number\",\n                \"value\": \"60\",\n                \"value_options\": null,\n                \"minimum_value\": null,\n                \"maximum_value\": null,\n                \"encrypt\": 0,\n                \"visibility\": \"global\",\n                \"change_by\": \"global\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-14 06:02:34\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-14 06:02:34\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null\n            }\n        ],\n        \"meta\": {\n            \"records\": 11,\n            \"page\": 1,\n            \"pages\": 1,\n            \"page_size\": \"25\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "0e26102b-4ff7-4c2a-949d-3ff48a41c64f"
						},
						{
							"name": "Update Settings",
							"item": [
								{
									"name": "Update Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is Created\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Settings updated successfully'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings updated successfully\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "5f939fbf-930b-4411-b0c8-c370cefdb374"
											}
										}
									],
									"id": "532ea638-721f-45c3-ac62-e9995a4cde23",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "bb6aa2ae-519e-4f1a-a86c-1100810660bf",
													"key": "settings_id",
													"value": "12"
												}
											]
										}
									},
									"response": [
										{
											"id": "ef38e93f-2f34-4c3a-956f-e750b2022656",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Value",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is 'Bad Request'\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Value cannot be empty\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "afa539ab-8174-4b05-b258-e3f5d65a99c1"
											}
										}
									],
									"id": "59e02304-433a-4a43-93a3-f6d71207a079",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "40025d61-104d-4686-9acf-a35bf4b53be0",
													"key": "settings_id",
													"value": "12"
												}
											]
										}
									},
									"response": [
										{
											"id": "4524e422-9d76-4cd0-80c3-9da117ff4bc0",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Empty Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "246a13e5-077f-4552-bebb-c81b29d04dd4"
											}
										}
									],
									"id": "f04e08b0-0c2f-47fe-96c1-7ad28e6b4400",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "faa15e40-ab22-42b4-9486-4fcf0ee1b29c",
													"key": "settings_id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"id": "1e08f729-9df8-4949-9d97-97956c089a2d",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Settings - Invalid Settings ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is 'Not Found'\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Value cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Settings not found\")\r",
													"})"
												],
												"type": "text/javascript",
												"id": "66594507-f6d7-4b32-99eb-828d9f6a2a65"
											}
										}
									],
									"id": "4a4c9ba7-67cc-4174-8bce-2700c8e26988",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"value\": \"bmlic3NAbGVuZHNxci5jb206cnR1RyR1YzdyfkJzMU42Mi1WTkw=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/:settings_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												":settings_id"
											],
											"variable": [
												{
													"id": "6b12432b-8911-4104-b95d-cbbeb05ea3c6",
													"key": "settings_id",
													"value": "er"
												}
											]
										}
									},
									"response": [
										{
											"id": "0c84a80b-3348-4049-969d-f6df291e1003",
											"name": "Update Settings",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"value\": \"sendgrid\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/settings/:settings_id",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"settings",
														":settings_id"
													],
													"variable": [
														{
															"key": "settings_id",
															"value": "6"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "576"
												},
												{
													"key": "ETag",
													"value": "W/\"240-PXdNYwmP3JG4+vucf0kQ0B+meek\""
												},
												{
													"key": "Date",
													"value": "Sun, 14 May 2023 06:12:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Settings updated successfully\",\n    \"data\": {\n        \"value\": \"sendgrid\",\n        \"id\": 6,\n        \"settings_category_id\": 2,\n        \"name\": \"Email Provider\",\n        \"description\": \"Provides an option of email services to select from.\",\n        \"slug\": \"email_provider\",\n        \"data_type\": \"string\",\n        \"value_options\": [\n            \"sterling\",\n            \"sendgrid\"\n        ],\n        \"minimum_value\": null,\n        \"maximum_value\": null,\n        \"encrypt\": 0,\n        \"visibility\": \"global\",\n        \"change_by\": \"global\",\n        \"status\": \"active\",\n        \"created_on\": \"2023-05-14 06:02:34\",\n        \"created_by\": null,\n        \"modified_on\": \"2023-05-14 07:12:51\",\n        \"modified_by\": null,\n        \"deleted_on\": null,\n        \"deleted_flag\": 0,\n        \"deleted_by\": null\n    }\n}"
										}
									]
								}
							],
							"id": "2bff2361-b5ba-4813-b115-d59d200eef1b"
						},
						{
							"name": "Fetch Web Settings",
							"item": [
								{
									"name": "Fetch Web Settings",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "78ef2fd5-3b0c-4228-8dbf-a49cda305116",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function(){",
													"    pm.response.to.have.status(200);",
													"})",
													"pm.test(\"Status code is OK\", function () {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"pm.test(\"Status is Success\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"success\")",
													"})",
													"pm.test(\"message is 'success'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"success\")",
													"})",
													"pm.test(\"Validate that all categories are present\", function(){",
													"    pm.expect(jsonData.data.data[0]).to.include({\"name\":\"API key\"}, {\"name\":\"Email Base URL\"}, {\"name\":\"Email IV\"}, {\"name\":\"Email Key\"}, {\"name\":\"Email Provider\"}, {\"name\":\"Email Sender ID\"}, {\"name\":\"Host IP\"}, {\"name\":\"Inactivity Timeout\"}, {\"name\":\"Lock IP Address\"}, {\"name\":\"Mandate Frequency\"}, {\"name\":\"Notifications Group Email\"}, {\"name\":\"Number of API keys\"}, {\"name\":\"Request Timeout\"})",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0a0b8863-d5b6-4ed7-a95e-a32d63b957bf",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a0b36e37-c71c-4f76-a787-33a8947c9292",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "fb9e05c4-c74c-4d18-a05e-1132611aeb33",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - No Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63149c86-97b3-4df0-babe-23fb76209f6f",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'Unauthorized'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "114d1e13-d30b-4153-941e-52b81dcc433a",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a6106bfc-fcb1-435e-94ad-875143472a8e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "131c4718-1b8f-439c-a930-1829ff9d49a2",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Invalid Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3dd98730-7226-493c-af22-c03df50f8be5",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'invalid signature\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "5a183273-1a47-4fb9-a377-6f09e3ac2085",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "be1b412e-a370-4e7c-b462-16ad641ff887",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSy",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "010370eb-224b-44da-97af-2e907b87a272",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								},
								{
									"name": "Fetch Web Settings - Expired Auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab01d868-f6ad-437d-b4b2-3d3e51278d1b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"pm.test(\"Status code is 401\", function(){",
													"    pm.response.to.have.status(401);",
													"})",
													"pm.test(\"Status code is Unauthorized\", function () {",
													"    pm.response.to.have.status(\"Unauthorized\");",
													"});",
													"",
													"pm.test(\"Status is error\", function(){",
													"    pm.expect(jsonData.status).to.eql(\"error\")",
													"})",
													"pm.test(\"message is 'jwt expired'\", function(){",
													"    pm.expect(jsonData.message).to.eql(\"jwt expired\")",
													"})",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c902cfb-6f3e-422b-892e-d1bfb4555157",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "fd973361-070b-47ec-9f4b-06913f5c1fcc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwidHlwZSI6ImF1dGgiLCJpYXQiOjE3MDI2Mjg1MjcsImV4cCI6MTcwMjYzMjEyN30.RmLNxnV4HY7mm9vgdFZLwAmWX2wUyQTx1ifSyzpE9aQ",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/settings/web/78900?qu=uhhh",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"settings",
												"web",
												"78900"
											],
											"query": [
												{
													"key": "qu",
													"value": "uhhh"
												}
											]
										}
									},
									"response": [
										{
											"id": "4fb71f98-0cb4-4f25-8737-8d96033e4d97",
											"name": "Fetch Web Settings",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url}}/settings/web"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "381"
												},
												{
													"key": "ETag",
													"value": "W/\"17d-BXblBJfPa7gAQK+PpKzAFAOZGiE\""
												},
												{
													"key": "Date",
													"value": "Sat, 27 May 2023 20:02:07 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"inactivity_timeout\": {\n            \"name\": \"Inactivity Timeout\",\n            \"description\": \"Sets an inactivity timeout in seconds.\",\n            \"data_type\": \"number\",\n            \"value\": 60,\n            \"encrypt\": 0\n        },\n        \"request_encryption\": {\n            \"name\": \"Request Encryption\",\n            \"description\": \"Provides an option for the organization to encrypt/decrypt requests\",\n            \"data_type\": \"boolean\",\n            \"value\": true,\n            \"encrypt\": 0\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "25d6d66e-c650-4efb-936d-65a906843252"
						}
					],
					"id": "acccaec7-29e6-44eb-8e04-469de5b79843"
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Create Role",
							"item": [
								{
									"name": "Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2570f15-2942-44e6-bbe2-c4802b92e714",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.environment.set(\"RoleID\", jsonData.data.id)\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is Created\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Role created successfully\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role created successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9257463f-cd93-471e-88d0-9da28d37bc15",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f0a5c0f2-250a-4f7c-ad11-a0081cff3213",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d2570f15-2942-44e6-bbe2-c4802b92e714",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.environment.set(\"RoleID\", jsonData.data.id)\r",
													"\r",
													"pm.test(\"Status code is 201\", function(){\r",
													"    pm.response.to.have.status(201);\r",
													"})\r",
													"pm.test(\"Status code is Created\", function () {\r",
													"    pm.response.to.have.status(\"Created\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Role created successfully\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role created successfully\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9257463f-cd93-471e-88d0-9da28d37bc15",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "75e25389-c032-48cb-85a8-6a50a54aa09e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\"add_users\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - invalid Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6a9d6c06-e932-4206-a10f-51435645ab03",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f6897a6b-4200-40fd-a358-525ec08f0581",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f807ad15-c47e-4c04-ba07-df0cb86c8be5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ5MjMxLCJleHAiOjE2ODM2NTI4MzF9.Wk77pTneq8D0YIP9qY5r7T8TSKkOtTF8aL4moDd-F3Q",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Role{{$randomWord}}\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\n        \"add_users\",\n        \"view_users\",\n        \"update_users\",\n        \"activate_users\",\n        \"deactivate_users\",\n        \"blacklist_users\",\n        \"update_roles\",\n        \"add_keys\",\n        \"view_settings\",\n        \"view_keys\",\n        \"update_keys\",\n        \"activate_roles\",\n        \"deactivate_roles\",\n        \"view_roles\",\n        \"update_settings\",\n        \"add_roles\",\n        \"view_beneficiaries\",\n        \"deactivate_beneficiaries\",\n        \"activate_beneficiaries\",\n        \"delete_keys\",\n        \"activate_keys\",\n        \"reset_keys\",\n        \"deactivate_keys\",\n        \"view_mandates\",\n        \"activate_mandates\",\n        \"approve_mandates\",\n        \"add_mandates\",\n        \"deactivate_mandates\"],\n\"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript",
												"id": "abfa05d1-c363-4f51-9d1e-a6ee68d2375f"
											}
										}
									],
									"id": "8d1e5b26-3cb6-4f0c-922a-4454e2b35730",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": ""
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Role{{$randomWord}}\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\n        \"add_users\",\n        \"view_users\",\n        \"update_users\",\n        \"activate_users\",\n        \"deactivate_users\",\n        \"blacklist_users\",\n        \"update_roles\",\n        \"add_keys\",\n        \"view_settings\",\n        \"view_keys\",\n        \"update_keys\",\n        \"activate_roles\",\n        \"deactivate_roles\",\n        \"view_roles\",\n        \"update_settings\",\n        \"add_roles\",\n        \"view_beneficiaries\",\n        \"deactivate_beneficiaries\",\n        \"activate_beneficiaries\",\n        \"delete_keys\",\n        \"activate_keys\",\n        \"reset_keys\",\n        \"deactivate_keys\",\n        \"view_mandates\",\n        \"activate_mandates\",\n        \"approve_mandates\",\n        \"add_mandates\",\n        \"deactivate_mandates\"],\n\"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - Already Existing Role Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role name exists. Use a new role name.'\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Role name exists\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "c51b9e4c-a25e-4992-a919-0d24c546636c"
											}
										}
									],
									"id": "fc03324e-873f-4754-a9bd-2cb3c1b836f8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    \"permissions\": [\n        \"add_users\",\n        \"view_users\",\n        \"update_users\",\n        \"activate_users\",\n        \"deactivate_users\",\n        \"blacklist_users\",\n        \"update_roles\",\n        \"add_keys\",\n        \"view_settings\",\n        \"view_keys\",\n        \"update_keys\",\n        \"activate_roles\",\n        \"deactivate_roles\",\n        \"view_roles\",\n        \"update_settings\",\n        \"add_roles\",\n        \"view_beneficiaries\",\n        \"deactivate_beneficiaries\",\n        \"activate_beneficiaries\",\n        \"delete_keys\",\n        \"activate_keys\",\n        \"reset_keys\",\n        \"deactivate_keys\",\n        \"add_beneficiaries\",\n        \"view_mandates\",\n        \"activate_mandates\",\n        \"approve_mandates\",\n        \"add_mandates\",\n        \"deactivate_mandates\"],\n\"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - Non-existent Permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"Permission not found\", function(){\r",
													"    pm.expect(jsonData.message).to.include(\"Permission \\'\"+ Request.permissions + \"' not found\")\r",
													"})\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "bdc77e61-0227-457a-9824-893decd21fee"
											}
										}
									],
									"id": "64eef6da-87cf-45b2-91bf-462f20f5c223",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Role{{$randomWord}}\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n    \"permissions\": [\"nid\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - Empty Permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Select permissions to create a role'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Select permissions to create a role\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"id": "985a0a9c-0e2c-48d6-bf4f-6958ae480f38"
											}
										}
									],
									"id": "f4f0bbaf-16ae-4f03-b69e-2cc8f100ed60",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Role{{$randomFirstName}}\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n    \"permissions\": [ ],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - Empty Description",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eced16fb-c324-4fc5-ada4-722ffaa776b2",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'description should not be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e75c1320-7c28-4eb3-bc0e-46f9830ff146",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "99de98b5-2be9-4392-b331-51737337e2d1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"name\",\n    \"description\": \"\",\n    \"permissions\": [\n        \"add_users\",\n        \"view_users\",\n        \"update_users\",\n        \"activate_users\",\n        \"deactivate_users\",\n        \"blacklist_users\",\n        \"update_roles\",\n        \"add_keys\",\n        \"view_settings\",\n        \"view_keys\",\n        \"update_keys\",\n        \"activate_roles\",\n        \"deactivate_roles\",\n        \"view_roles\",\n        \"update_settings\",\n        \"add_roles\",\n        \"view_beneficiaries\",\n        \"deactivate_beneficiaries\",\n        \"activate_beneficiaries\",\n        \"delete_keys\",\n        \"activate_keys\",\n        \"reset_keys\",\n        \"deactivate_keys\",\n        \"add_beneficiaries\",\n        \"view_mandates\",\n        \"activate_mandates\",\n        \"approve_mandates\",\n        \"add_mandates\",\n        \"deactivate_mandates\"],\n        \"token\": \"480533\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								},
								{
									"name": "Create Role - Empty Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f1bfdeb3-7962-432e-9d34-f31dbfe2b5ab",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Name should not be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Name cannot be empty\")\r",
													"})\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c6d20222-457c-47ed-b314-b470e312eb88",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5b6bba89-f7bc-4ebc-9e79-92fb88bf7d49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n    \"permissions\": [\n        \"add_users\",\n        \"view_users\",\n        \"update_users\",\n        \"activate_users\",\n        \"deactivate_users\",\n        \"blacklist_users\",\n        \"update_roles\",\n        \"add_keys\",\n        \"view_settings\",\n        \"view_keys\",\n        \"update_keys\",\n        \"activate_roles\",\n        \"deactivate_roles\",\n        \"view_roles\",\n        \"update_settings\",\n        \"add_roles\",\n        \"view_beneficiaries\",\n        \"deactivate_beneficiaries\",\n        \"activate_beneficiaries\",\n        \"delete_keys\",\n        \"activate_keys\",\n        \"reset_keys\",\n        \"deactivate_keys\",\n        \"add_beneficiaries\",\n        \"view_mandates\",\n        \"activate_mandates\",\n        \"approve_mandates\",\n        \"add_mandates\",\n        \"deactivate_mandates\"],\n        \"token\": \"480533\"\n\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles"
									},
									"response": []
								}
							],
							"id": "e4ba785b-7097-40f4-b0fe-19ce8f9acc0e"
						},
						{
							"name": "Fetch Roles",
							"item": [
								{
									"name": "Fetch Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5297646f-c04f-4725-a7c3-75389b780301",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a38f5a21-9f7e-417f-acb9-b6b232b6dd5f",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ae715cb3-627a-47ca-91f1-fd655348aff4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles?limit=10&page=1&sort_dir=",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "sort_dir",
													"value": ""
												},
												{
													"key": "status",
													"value": "inactive",
													"disabled": true
												}
											]
										}
									},
									"response": [
										{
											"id": "237f46d7-c140-44ac-875d-5f02a96de67b",
											"name": "Fetch Roles",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "633"
												},
												{
													"key": "ETag",
													"value": "W/\"279-KO0JgYx63xRZJcd9OsLykVv98x4\""
												},
												{
													"key": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"key": "Date",
													"value": "Fri, 14 Apr 2023 07:08:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 2,\n                \"name\": \"Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T07:00:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T07:00:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 1,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-04-14T06:47:54.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-14T06:47:54.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 2,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										},
										{
											"id": "7bcca108-3c7b-44b8-bc35-e4f7f77d0986",
											"name": "Fetch Roles (Active)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=active",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "DESC"
														},
														{
															"key": "status",
															"value": "active"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "15768"
												},
												{
													"key": "ETag",
													"value": "W/\"3d98-QraPIS0OewPMi8aG2WiTggjPx5s\""
												},
												{
													"key": "Date",
													"value": "Mon, 08 May 2023 09:42:13 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 46,\n                \"name\": \"Inverstors\",\n                \"description\": \"Demo\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-07T08:54:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T08:54:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 45,\n                \"name\": \"TestRoleBE4\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T15:35:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T15:35:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 44,\n                \"name\": \"Super Admin\",\n                \"description\": \"Super Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-04T10:15:35.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-04T10:15:35.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            },\n            {\n                \"id\": 35,\n                \"name\": \"TestRoleBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T12:25:29.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T12:25:29.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 34,\n                \"name\": \"Another one\",\n                \"description\": \"Dj khaled\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T11:23:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T11:23:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    }\n                ]\n            },\n            {\n                \"id\": 33,\n                \"name\": \"TestFromFE3\",\n                \"description\": \"TestFromFE3\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:23:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T14:39:34.000Z\",\n                \"modified_by\": 8,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 32,\n                \"name\": \"TestFromBE3\",\n                \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi cursus congue lacus ac rhoncus.\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:14:51.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:14:51.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 31,\n                \"name\": \"TestFromBE2\",\n                \"description\": \"TestFromBE2\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-03T00:01:41.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:01:41.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    },\n                    {\n                        \"id\": \"view_users\",\n                        \"name\": \"View Users\",\n                        \"description\": \"Can view users\"\n                    },\n                    {\n                        \"id\": \"update_users\",\n                        \"name\": \"Update Users\",\n                        \"description\": \"Can update users\"\n                    },\n                    {\n                        \"id\": \"activate_users\",\n                        \"name\": \"Activate Users\",\n                        \"description\": \"Can activate users\"\n                    },\n                    {\n                        \"id\": \"deactivate_users\",\n                        \"name\": \"Deactivate Users\",\n                        \"description\": \"Can deactivate users\"\n                    },\n                    {\n                        \"id\": \"blacklist_users\",\n                        \"name\": \"Blacklist Users\",\n                        \"description\": \"Can blacklist users\"\n                    },\n                    {\n                        \"id\": \"update_roles\",\n                        \"name\": \"Update Roles\",\n                        \"description\": \"Can update roles\"\n                    },\n                    {\n                        \"id\": \"add_keys\",\n                        \"name\": \"Add Keys\",\n                        \"description\": \"Can add keys\"\n                    },\n                    {\n                        \"id\": \"view_settings\",\n                        \"name\": \"View Settings\",\n                        \"description\": \"Can view settings\"\n                    },\n                    {\n                        \"id\": \"view_keys\",\n                        \"name\": \"View Keys\",\n                        \"description\": \"Can view keys\"\n                    },\n                    {\n                        \"id\": \"update_keys\",\n                        \"name\": \"Update Keys\",\n                        \"description\": \"Can update keys\"\n                    },\n                    {\n                        \"id\": \"activate_roles\",\n                        \"name\": \"Activate Roles\",\n                        \"description\": \"Can activate roles\"\n                    },\n                    {\n                        \"id\": \"deactivate_roles\",\n                        \"name\": \"Deactivate Roles\",\n                        \"description\": \"Can deactivate roles\"\n                    },\n                    {\n                        \"id\": \"view_roles\",\n                        \"name\": \"View Roles\",\n                        \"description\": \"Can view roles\"\n                    },\n                    {\n                        \"id\": \"update_settings\",\n                        \"name\": \"Update Settings\",\n                        \"description\": \"Can update settings\"\n                    },\n                    {\n                        \"id\": \"add_roles\",\n                        \"name\": \"Add Roles\",\n                        \"description\": \"Can add roles\"\n                    },\n                    {\n                        \"id\": \"view_beneficiaries\",\n                        \"name\": \"View Beneficiaries\",\n                        \"description\": \"Can view beneficiaries\"\n                    },\n                    {\n                        \"id\": \"deactivate_beneficiaries\",\n                        \"name\": \"Deactivate Beneficiaries\",\n                        \"description\": \"Can deactivate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"activate_beneficiaries\",\n                        \"name\": \"Activate Beneficiaries\",\n                        \"description\": \"Can activate beneficiaries\"\n                    },\n                    {\n                        \"id\": \"delete_keys\",\n                        \"name\": \"Delete Keys\",\n                        \"description\": \"Can delete keys\"\n                    },\n                    {\n                        \"id\": \"activate_keys\",\n                        \"name\": \"Activate Keys\",\n                        \"description\": \"Can activate keys\"\n                    },\n                    {\n                        \"id\": \"reset_keys\",\n                        \"name\": \"Reset Keys\",\n                        \"description\": \"Can reset keys\"\n                    },\n                    {\n                        \"id\": \"deactivate_keys\",\n                        \"name\": \"Deactivate Keys\",\n                        \"description\": \"Can deactivate keys\"\n                    },\n                    {\n                        \"id\": \"add_beneficiaries\",\n                        \"name\": \"Add Beneficiaries\",\n                        \"description\": \"Can add beneficiaries\"\n                    },\n                    {\n                        \"id\": \"view_mandates\",\n                        \"name\": \"View Mandates\",\n                        \"description\": \"Can view mandates\"\n                    },\n                    {\n                        \"id\": \"activate_mandates\",\n                        \"name\": \"Activate Mandates\",\n                        \"description\": \"Can activate mandates\"\n                    },\n                    {\n                        \"id\": \"approve_mandates\",\n                        \"name\": \"Approve Mandates\",\n                        \"description\": \"Can approve mandates\"\n                    },\n                    {\n                        \"id\": \"add_mandates\",\n                        \"name\": \"Add Mandates\",\n                        \"description\": \"Can add mandates\"\n                    },\n                    {\n                        \"id\": \"deactivate_mandates\",\n                        \"name\": \"Deactivate Mandates\",\n                        \"description\": \"Can deactivate mandates\"\n                    }\n                ]\n            },\n            {\n                \"id\": 30,\n                \"name\": \"Test Admin\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:05:22.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:05:22.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 29,\n                \"name\": \"ccvhbbbn vhcnncc\",\n                \"description\": \"Admin\",\n                \"status\": \"active\",\n                \"created_on\": \"2023-05-02T15:04:45.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-02T15:04:45.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            }\n        ],\n        \"meta\": {\n            \"records\": 35,\n            \"page\": \"1\",\n            \"pages\": 4,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										},
										{
											"id": "0fe88607-0c07-4bcf-895a-d4bdcb0e1639",
											"name": "Fetch Roles (Inactive)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{base_url_v1}}/roles?limit=10&page=1&sort_dir=DESC&status=inactive",
													"host": [
														"{{base_url_v1}}"
													],
													"path": [
														"roles"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "page",
															"value": "1"
														},
														{
															"key": "sort_dir",
															"value": "DESC"
														},
														{
															"key": "status",
															"value": "inactive"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1071"
												},
												{
													"key": "ETag",
													"value": "W/\"42f-VZeJR4rs+neVJgSZD9sx0Y5CcaQ\""
												},
												{
													"key": "Date",
													"value": "Mon, 08 May 2023 09:43:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": {\n        \"data\": [\n            {\n                \"id\": 26,\n                \"name\": \"UpdatedRoleName\",\n                \"description\": \"UpdatedRoleName\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-05-02T14:34:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-03T00:51:58.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 13,\n                \"name\": \"Super Admin1\",\n                \"description\": \"Super Admgin\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-29T14:16:14.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-05-07T11:36:12.000Z\",\n                \"modified_by\": 28,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": [\n                    {\n                        \"id\": \"add_users\",\n                        \"name\": \"Add Users\",\n                        \"description\": \"Can add/invite users\"\n                    }\n                ]\n            },\n            {\n                \"id\": 10,\n                \"name\": \"TestRoleNew\",\n                \"description\": \"TestRole\",\n                \"status\": \"inactive\",\n                \"created_on\": \"2023-04-27T22:35:47.000Z\",\n                \"created_by\": null,\n                \"modified_on\": \"2023-04-28T03:51:31.000Z\",\n                \"modified_by\": null,\n                \"deleted_on\": null,\n                \"deleted_flag\": 0,\n                \"deleted_by\": null,\n                \"permissions\": []\n            }\n        ],\n        \"meta\": {\n            \"records\": 3,\n            \"page\": \"1\",\n            \"pages\": 1,\n            \"page_size\": \"10\"\n        }\n    }\n}"
										}
									]
								}
							],
							"id": "e0068f68-5449-4dfe-b28c-8ea772c67150"
						},
						{
							"name": "Fetch Roles with ID",
							"item": [
								{
									"name": "Fetch Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f3472c5a-0994-469a-9c94-ed688059ec79",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e739fb17-3334-40c9-9a75-4bb715115aab",
												"exec": [
													"//console.log(pm.request.url.variables)\r",
													"//console.log(pm.request.url.variables.value)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "210050ac-fee5-47e2-a5c2-f60718b0ea5e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "b4dfbab9-d4a9-4e45-b57e-5a31af1d768e",
													"key": "role_id",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Role - Invalid Role_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0b658781-9cea-41cc-8f65-9fcb5d6051fc",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d1d18659-04d4-4765-b0f0-c78753c21516",
												"exec": [
													"//console.log(pm.request.url.variables)\r",
													"//console.log(pm.request.url.variables.value)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "b9316dc8-3f9e-4fa8-96a5-e074ca9162a5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "6eb45cfb-aa5f-444d-8377-6f5da5ee2462",
													"key": "role_id",
													"value": "ab"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Roles - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3ff223af-0c2a-47dd-ad68-268dbf8676b1",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9496d29a-3937-4e26-8320-35cc8df717e9",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "74a467b9-cf59-4cf2-94a1-de812d7b3d7d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles?limit=10&page=1",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch Roles - Invalid or Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bff8f291-860f-4339-b948-a1ec1491b220",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is invalid signature\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "a3f72ea2-22e2-4d3f-b4e3-1ad52f6e331b",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "09adf724-d8fb-4cc1-9352-36cf373a8bbb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzNjQ5MjMxLCJleHAiOjE2ODM2NTI4MzF9.Wk77pTneq8D0YIP9qY5r7T8TSKkOtTF8aL4moDd-F3Q",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "541141e1-0af6-4812-a1d5-993eedfa7205"
						},
						{
							"name": "Update Role",
							"item": [
								{
									"name": "Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "22916151-4215-41d0-bdc6-3a606e931df3",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"console.log(pm.request.url.path[2])\r",
													"var Role_id = pm.request.url.path[2]\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate Role ID\", function(){\r",
													"    pm.expect(jsonData.data.id.toString()).to.eql(Role_id)\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "76b3b84c-ee31-47fc-a95d-45eb710f03e2",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "df248222-be29-497f-8964-2341d863ec94",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"{{$randomWord}} Role\",\n    \"description\": \"{{$randomLoremSentence}}\",\n    \"permissions\": [\"add_users\", \"view_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "526e3bc2-d9ab-4a97-be55-ad4fd6821817",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Empty Permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2203adf5-bdfb-4b34-9241-485fc57b9933",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"console.log(pm.request.url.path[2])\r",
													"var Role_id = pm.request.url.path[2]\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate Role ID\", function(){\r",
													"    pm.expect(jsonData.data.id.toString()).to.eql(Role_id)\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "89654f34-5f0d-4109-b3a3-748f6fac0863",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b9483cba-6d11-401c-bc50-927f0d86be9b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated1\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "b304f3e7-1d38-40db-b596-5f624a5811d6",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Empty Role Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "edb3d5f4-80a8-4228-acf8-0f3fe30a3d6c",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Name cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Name cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3f4fce2b-dbe3-4d2d-96d4-6ebe479ac169",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1930329c-1a1d-4314-82b0-639e318ed814",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"Super Admin Description\",\n    \"permissions\": [],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "3b965f97-91be-43c1-9e59-e3c7c1943acd",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Empty Description",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "de778c7a-2a39-4e12-86dd-297ed43aa592",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Description cannot be empty'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Description cannot be empty\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b56a9040-a19d-491b-8a5a-73357eaa4e1e",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ac8d84fa-7b97-4677-bb0d-c8ce7df2d5ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"New Name\",\n    \"description\": \" \",\n    \"permissions\": [],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "6a8458da-3dfb-40eb-bd53-3fd1e99ff8e4",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Invalid/Incomplete Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fc083c69-b913-4177-91d5-a5a38ff5ab8f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Invalid 2FA Token'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid 2FA Token\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "16a039f8-0b06-484c-b8ff-19d99f2fa223",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7e59d0b3-9be8-4bc5-990a-36a19959e4a0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated1{{RoleName}}\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"0000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "9ea74bdf-760a-44da-94a9-f78ffb1ee324",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8928de4b-bad2-4457-9b73-d70eeba2080f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 400\", function(){\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is Invalid 2FA Token\", function(){\r",
													"    pm.expect(jsonData.message).to.contain(\"2fa is required to perform this operation\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "70a554a1-83e2-46c6-8c27-d01cbcc20210",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "5eaddbe7-64c7-40b5-84e2-9d6bfd39c014",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated1{{RoleName}}\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "c457f802-e1aa-4414-b06c-f02a4c5a2bd9",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role- Role Name Already Exist",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46897d24-2f46-4dcc-b445-39980cecf0ef",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role name exists.'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Role name exists. Use a new role name.\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "778aa134-efa5-467c-aac7-e2143d175795",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "66291d87-c78f-4a77-9051-95eac9951492",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Super Admin\",\n    \"description\": \"Super Admin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "ba3c746b-e079-43f2-af35-99dc21fdf062",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - No Role_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e8011bdc-5d4e-42bc-bf58-8a0d2dc0b8d4",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found\", function(){ \r",
													"    pm.expect(jsonData.message).to.include(\"not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "00d57421-3295-4d04-987a-4a666a13daac",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "f43bdc1f-d9a8-4372-89bb-a4b58349cba7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated {{RoleName}}\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "52c864f1-6f6f-41c4-8c58-07f7bc806d8d",
													"key": "role_id",
													"value": " "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Invalid Role_Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "915944ed-1549-4fa1-9316-efd1fd35e9e2",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6c5285e-15fe-4551-8860-451f3f042a81",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "6e6b85dc-ebe2-4e60-96e9-2344a39d1e05",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated {{RoleName}}\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "9de80ac7-6b12-4cfc-ba3f-a77f50705f24",
													"key": "role_id",
													"value": "fb"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Inactive Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae1b9b7e-62c6-4224-a05a-dc76e066ce8f",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"})\r",
													"pm.test(\"Status code is Bad Request\", function () {\r",
													"    pm.response.to.have.status(\"Bad Request\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Cannot update an inactive role'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Cannot update an inactive role\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6e4d840c-367f-49a1-83c0-16fc61a14104",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "a6ea3623-bcb4-4cf6-8896-8a706506292f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Updated {{RoleName}}\",\n    \"description\": \"Super Admgin\",\n    \"permissions\": [\"add_users\"],\n    \"token\": \"000000\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "e7aed412-a03f-4857-a57f-95381f979370",
													"key": "role_id",
													"value": "11"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - Invalid or Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d895372-eb77-4ed4-a39c-c498a7d67237",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6a797684-8b6d-48c4-ab76-d2df067abacd",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "9756a909-e3ca-4fae-abf6-c07036e980d2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UpdatedRoleName\",\n    \"description\": \"UpdatedRoleName\",\n    \"permissions\": [\"add_users\", \"view_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "15c5095b-344c-403f-b9ad-1179d6b37d9d",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Role - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ccb1b18b-e7f8-4f23-96d5-a56d76e1e77b",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6fecb836-6cc1-4a90-ab6b-8659f077bb2b",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "2fc4c535-d64e-458d-ab80-cb27c3cf4b49",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"UpdatedRoleName\",\n    \"description\": \"UpdatedRoleName\",\n    \"permissions\": [\"add_users\", \"view_users\"],\n    \"token\": \"{{2FAToken}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id"
											],
											"variable": [
												{
													"id": "0eddc4b7-e012-4d55-9d90-49592a6e00e5",
													"key": "role_id",
													"value": "{{RoleID}}"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "45be8389-d2a4-4c11-9588-5cedb326561d"
						},
						{
							"name": "Get Permissions",
							"item": [
								{
									"name": "Fetch Permissions - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "133dc355-c940-49f0-92d7-6ce18505c761",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"\r",
													"\r",
													"    \r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b2c2657a-464b-4b5d-b74d-5cfd0cd4310c",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ddc12b2f-cf6c-4458-814d-aecdb492b990",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								},
								{
									"name": "Fetch Permissions - Invalid/ Expired Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b31a14b6-9e69-49c5-862d-f781b7a105d7",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "2bfa4e4b-b7ae-40c5-83fb-06a510f68b49",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "03b17e27-c9e0-4730-96ac-0e4112b95ce0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								},
								{
									"name": "Fetch Permissions - No Authorization",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6068f14f-327e-4c69-9c76-6923442b1405",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "aef700b5-553f-408a-80c0-8a57d347d8cc",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "583a1272-d49d-4628-a523-f6bff95261ae",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/permissions"
									},
									"response": []
								}
							],
							"id": "721fdc55-8d42-46bc-996e-87f7efe952fa"
						},
						{
							"name": "Fetch Role Stats",
							"item": [
								{
									"name": "Fetch Role Stats",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f7237f11-8c32-4b86-9942-32b9d195fd6d",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"pm.test(\"Status is Success\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"Validate the active status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data[0].status).to.contain(\"active\")\r",
													"})\r",
													"pm.test(\"Validate the inactive status is present with the count\", function(){\r",
													"    pm.expect(jsonData.data[1].status).to.contain(\"inactive\")\r",
													"})"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "d81dc585-6df4-4d82-9cc0-8fa8ce8835f3",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7c904989-ebf9-4b1c-b28a-aa5df84ed2ac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "e54a1877-9cda-47dc-b7cb-19bca4d860a4",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Role Stats - Expired Tken",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9a575d1b-2dc2-436b-b2d4-8a76ff8ab84a",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'invalid signature'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"invalid signature\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4d4cefd9-57ec-4999-b2db-a8c03db16b02",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b97b77ea-9eba-47e8-aba1-c0802c1f6a17",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjgzMDc5MzY4LCJleHAiOjE2ODMwODI5Njh9.aEvvm5FrSMjySjbEmoYGA6ckH5-GnXlhuoK9Se7B6TU",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "35833f7a-744c-4163-896a-35bda9fee43f",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "Fetch Role Stats - No Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a8ab8c80-ecb5-434d-b63d-4485d9ac0cda",
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"var Request = JSON.parse(pm.request.body.raw);\r",
													"pm.test(\"Status code is 401\", function(){\r",
													"    pm.response.to.have.status(401);\r",
													"})\r",
													"pm.test(\"Status code is Unauthorized\", function () {\r",
													"    pm.response.to.have.status(\"Unauthorized\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Unauthorized'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Unauthorized\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9f06972b-6b26-4183-ae73-a2861b3ef2ad",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "c043b3c2-64d2-4eca-8443-9e808528d4e2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": "{{base_url}}/roles/stats"
									},
									"response": [
										{
											"id": "ac990433-c728-4295-9dfe-fa3b7351350e",
											"name": "Fetch Role Stats",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{TOKEN}}",
														"type": "text"
													}
												],
												"url": "{{base_url_v1}}/roles/stats"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Access-Control-Allow-Credentials",
													"value": "true"
												},
												{
													"key": "Content-Security-Policy",
													"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
												},
												{
													"key": "Cross-Origin-Embedder-Policy",
													"value": "require-corp"
												},
												{
													"key": "Cross-Origin-Opener-Policy",
													"value": "same-origin"
												},
												{
													"key": "Cross-Origin-Resource-Policy",
													"value": "same-origin"
												},
												{
													"key": "X-DNS-Prefetch-Control",
													"value": "off"
												},
												{
													"key": "X-Frame-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=15552000; includeSubDomains"
												},
												{
													"key": "X-Download-Options",
													"value": "noopen"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "Origin-Agent-Cluster",
													"value": "?1"
												},
												{
													"key": "X-Permitted-Cross-Domain-Policies",
													"value": "none"
												},
												{
													"key": "Referrer-Policy",
													"value": "no-referrer"
												},
												{
													"key": "X-XSS-Protection",
													"value": "0"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "112"
												},
												{
													"key": "ETag",
													"value": "W/\"70-veBmIdC+Eq9zy+h31YhzmF8t9jk\""
												},
												{
													"key": "Date",
													"value": "Tue, 09 May 2023 06:25:12 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"success\",\n    \"data\": [\n        {\n            \"status\": \"active\",\n            \"count\": 38\n        },\n        {\n            \"status\": \"inactive\",\n            \"count\": 3\n        }\n    ]\n}"
										}
									]
								}
							],
							"id": "9ef18a33-1d19-43e1-a3f3-00effa567406"
						},
						{
							"name": "Deactivate Role",
							"item": [
								{
									"name": "Deactivate Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eaca73ed-fff9-4e6c-b6c3-ab062a688a36",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "30097c5d-9dba-43c7-bb91-4f96373f0b26",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "fbbe19e1-b4cb-44d4-b9b7-e1da445ab103",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "69e4b959-52a0-48f0-ae66-0887f26bdbdd",
													"key": "role_id",
													"value": "{{RoleID}}"
												},
												{
													"id": "48d40d4e-ae61-4e34-9f7b-345f4a9512cc",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Role - Empty role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "32f5ece1-fb56-4336-bb29-e5ef4238e951",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "0c391aba-f8f6-47bd-ab07-7c37a12e18b5",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "28456678-e4b8-450e-96f8-acb44172e7aa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "20b113e1-5a06-4edc-be59-fca9b2d9fcaa",
													"key": "role_id",
													"value": ""
												},
												{
													"id": "5e573e29-326f-417a-a6f0-ae5d4f7eaf89",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Role - Invalid Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7fc8c075-6152-46c1-8328-7cff3a211a91",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "ce9eab66-7007-40a2-9832-7f033005ba08",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "4e3b1dc3-d345-479e-8d36-4456a27c5571",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "24934d77-5c13-4d29-a4fe-ed7860aabb43",
													"key": "role_id",
													"value": "aa"
												},
												{
													"id": "aac144d6-c502-4128-a537-1a4fcaceb0b1",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Role - Nonexisting Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d47f8d95-f488-4917-a7fa-2fc3a37f033e",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "40f7abed-3aef-4f04-81bd-f5ecf3f27c00",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "b1e5ef06-826b-4f7f-9f32-021416e26399",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "27fe9550-d128-4d43-9c61-ec5e773f8812",
													"key": "role_id",
													"value": "1000"
												},
												{
													"id": "05bab25c-4fbc-4e15-b996-68ee4c1d944e",
													"key": "type",
													"value": "deactivate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "bce70243-89f7-40e9-bcf5-81b92fe34e50"
						},
						{
							"name": "Activate Role",
							"item": [
								{
									"name": "Activate Role - Valid",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a2caf89c-e053-415b-97ce-d556bf0090b8",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 200\", function(){\r",
													"    pm.response.to.have.status(200);\r",
													"})\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"success\")\r",
													"})\r",
													"pm.test(\"message is 'success'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"success\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "c1dd8c10-9b6d-4305-81fa-3205870fcbce",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "7a4100eb-6c23-4816-b2ae-d39376cf2699",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "59159db6-efbb-4564-a9c7-8187ef7ab66d",
													"key": "role_id",
													"value": "{{RoleID}}"
												},
												{
													"id": "ceeb7caa-6201-440b-a346-8a594dad51c0",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate Role - Empty role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cafc8c8d-b87b-4538-bd5d-f6dc2f010a3e",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "3fdd1cc9-9066-45e1-ae52-0eeaaab5e699",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "1d7dc6a3-93d1-4236-9794-a2ab8311e9a0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "9d42905a-1897-4f15-98ad-b39406e4bfbe",
													"key": "role_id",
													"value": ""
												},
												{
													"id": "ee251679-f480-4788-ab21-9f961df0f704",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activate Role - Invalid Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "584f8b4d-f23c-41ce-bb7c-c5b83d036983",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9de4e0da-70b7-41c4-98fa-6b55f4453700",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "ea9b5545-178b-49ee-aba6-18c71311ce99",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "8816e956-e22d-402c-85e2-3189018d1a3f",
													"key": "role_id",
													"value": "aa"
												},
												{
													"id": "5ed3166d-9f36-4cec-a5eb-3af245e0f25e",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Deactivate Role - Nonexisting Role Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0158f519-c528-47d5-97d7-390b9d74ce36",
												"exec": [
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Status code is 404\", function(){\r",
													"    pm.response.to.have.status(404);\r",
													"})\r",
													"pm.test(\"Status code is Not Found\", function () {\r",
													"    pm.response.to.have.status(\"Not Found\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is error\", function(){\r",
													"    pm.expect(jsonData.status).to.eql(\"error\")\r",
													"})\r",
													"pm.test(\"message is 'Role not found'\", function(){\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found\")\r",
													"})\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "e74a924d-b45c-44bc-bcec-48810eae9aa5",
												"exec": [],
												"type": "text/javascript"
											}
										}
									],
									"id": "445036cb-6030-4cfe-849f-b2c5ec859d24",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{TOKEN}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{TOKEN}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/roles/:role_id/:type?token=000000",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"roles",
												":role_id",
												":type"
											],
											"query": [
												{
													"key": "token",
													"value": "000000"
												}
											],
											"variable": [
												{
													"id": "8fc49ec8-5855-4978-8853-66b1e90b5d66",
													"key": "role_id",
													"value": "10000"
												},
												{
													"id": "c78423db-8804-462a-8c5f-2d10ab434083",
													"key": "type",
													"value": "activate"
												}
											]
										}
									},
									"response": []
								}
							],
							"id": "2754cd8a-1ca2-47fc-b5f8-ca4b2f502400"
						}
					],
					"id": "ec03358f-86c2-40d3-8cc4-fa99c7f8fef1"
				}
			],
			"id": "e24462a7-8261-4f1a-9443-b2b036203e33",
			"description": "New features\n\nContains the following folder\n\n- Auth -\n    \n    - Sign Up\n    - Verify User\n    - Login\n        \n- Mandates\n    \n- Beneficiaries\n    \n- Settings\n    \n- Users\n    \n- Keys"
		},
		{
			"name": "App's Health",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', ()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test('Status is Ok', ()=>{\r",
							"    pm.response.to.have.status(\"OK\")\r",
							"})\r",
							"pm.test('Response body returns OK', ()=>{\r",
							"    console.log(pm.response.text())\r",
							"    pm.expect(pm.response.text()).to.have.contain(\"OK\")\r",
							"})"
						],
						"type": "text/javascript",
						"id": "e1cbca17-56bc-49c6-9a8a-e7c3277056b5"
					}
				}
			],
			"id": "f4c8846a-68b1-44ee-ba9f-5d51dae4fb8a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://test-sterling-direct-debit-lb-2026261518.us-east-2.elb.amazonaws.com/health"
			},
			"response": [
				{
					"id": "93c04a3c-b191-4d2c-889c-425616004f71",
					"name": "App's Health",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/health"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "Content-Security-Policy",
							"value": "default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
						},
						{
							"key": "Cross-Origin-Embedder-Policy",
							"value": "require-corp"
						},
						{
							"key": "Cross-Origin-Opener-Policy",
							"value": "same-origin"
						},
						{
							"key": "Cross-Origin-Resource-Policy",
							"value": "same-origin"
						},
						{
							"key": "X-DNS-Prefetch-Control",
							"value": "off"
						},
						{
							"key": "X-Frame-Options",
							"value": "SAMEORIGIN"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=15552000; includeSubDomains"
						},
						{
							"key": "X-Download-Options",
							"value": "noopen"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "Origin-Agent-Cluster",
							"value": "?1"
						},
						{
							"key": "X-Permitted-Cross-Domain-Policies",
							"value": "none"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "2"
						},
						{
							"key": "ETag",
							"value": "W/\"2-nOO9QiTIwXgNtWtBJezz8kv3SLc\""
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Date",
							"value": "Sat, 08 Apr 2023 16:40:49 GMT"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=5"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "OK"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{TOKEN}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "f05b66a2-f89b-4a22-99b2-3b69d551a401"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "4ec7d681-04dd-4d6b-9d13-5268e0957a69"
			}
		}
	],
	"variable": [
		{
			"key": "KEY",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJ0d29fZmEiLCJpYXQiOjE2ODQ4NDE1MDgsImV4cCI6MTY4NDg0NTEwOH0.hHTjUjnT4o3FhrtLP7S2D-_SCJw8RMEeX2UlGn-JMFo"
		},
		{
			"key": "TOKEN",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTcsInR5cGUiOiJhdXRoIiwiaWF0IjoxNjg0ODUxNjAwLCJleHAiOjE2ODQ4NTUyMDB9.dmddFGNyAG95X2XgBRq4bW6HsKNDFJxBS5KGkKGikHo"
		},
		{
			"key": "2FAToken",
			"value": "000000"
		},
		{
			"key": "Token",
			"value": ""
		},
		{
			"key": "StartDate",
			"value": ""
		},
		{
			"key": "FutureDate",
			"value": ""
		},
		{
			"key": "KEY1",
			"value": ""
		},
		{
			"key": "TOKEN1",
			"value": ""
		},
		{
			"key": "transactionID",
			"value": ""
		},
		{
			"key": "ImputerTOKEN",
			"value": ""
		},
		{
			"key": "BillerTOKEN",
			"value": ""
		}
	]
}