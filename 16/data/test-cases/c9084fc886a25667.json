{"uid":"c9084fc886a25667","name":"Create Key - Already Existing Name","fullName":"Keys/Create Key#Create Key - Already Existing Name","historyId":"fef2f9f1-2659-4ab9-9a50-5583ce3c8bb8","time":{"start":1710131668782,"stop":1710131669127,"duration":345},"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate that error message is 'API key name exists'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 400, Status code is Bad Request, Validate that error message is 'API key name exists'","steps":[{"name":"Status code is 400","time":{"start":1710131669124,"stop":1710131669124,"duration":0},"status":"failed","statusMessage":"expected response to have status code 400 but got 401","statusTrace":"Error: expected response to have status code 400 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:7:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:6:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code is Bad Request","time":{"start":1710131669124,"stop":1710131669124,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'Bad Request' but got 'Unauthorized'","statusTrace":"Error: expected response to have status reason 'Bad Request' but got 'Unauthorized'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:10:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is displayed as Error","time":{"start":1710131669124,"stop":1710131669124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Validate that error message is 'API key name exists'","time":{"start":1710131669125,"stop":1710131669125,"duration":0},"status":"failed","statusMessage":"expected 'jwt expired' to deeply equal 'API key name exists. Use a new API ke…'","statusTrace":"Error: expected 'jwt expired' to deeply equal 'API key name exists. Use a new API ke…'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:16:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:15:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"df88d5f88ca826cd","name":"Request Headers","source":"df88d5f88ca826cd.json","type":"application/json","size":535},{"uid":"2c1854d4061aae5e","name":"Request Body","source":"2c1854d4061aae5e.txt","type":"text/plain","size":133},{"uid":"16ce90ca51d7c0f1","name":"Response Headers","source":"16ce90ca51d7c0f1.json","type":"application/json","size":1216},{"uid":"d90935b0882f159f","name":"Response Body","source":"d90935b0882f159f.txt","type":"text/plain","size":52}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Keys"},{"name":"suite","value":"Create Key"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://dd-api.bits.dev.onepipe.io/v1/keys"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c9084fc886a25667.json","parameterValues":["POST - https://dd-api.bits.dev.onepipe.io/v1/keys","401"]}